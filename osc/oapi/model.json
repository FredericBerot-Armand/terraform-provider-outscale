{
  "name": "Outscale Public API",
  "types": [
    {
      "name": "AcceptNetPeeringRequest",
      "description": "implements the service definition of AcceptNetPeeringRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetPeeringId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetPeeringId",
          "parameterName": "netPeeringId",
          "serialize": true
        }
      ],
      "typeName": "AcceptNetPeeringRequest"
    },
    {
      "name": "AcceptNetPeeringResponse",
      "description": "implements the service definition of AcceptNetPeeringResponse",
      "fields": [
        {
          "name": "NetPeering",
          "type": "NetPeering",
          "nativeType": "NetPeering",
          "fieldName": "NetPeering",
          "parameterName": "netPeering",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "AcceptNetPeeringResponse"
    },
    {
      "name": "AccepterNet",
      "description": "implements the service definition of AccepterNet",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "IpRanges",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "IpRanges",
          "parameterName": "ipRanges",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        }
      ],
      "typeName": "AccepterNet"
    },
    {
      "name": "AccessLog",
      "description": "implements the service definition of AccessLog",
      "fields": [
        {
          "name": "IsEnabled",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsEnabled",
          "parameterName": "isEnabled",
          "serialize": true
        },
        {
          "name": "OsuBucketName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OsuBucketName",
          "parameterName": "osuBucketName",
          "serialize": true
        },
        {
          "name": "OsuBucketPrefix",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OsuBucketPrefix",
          "parameterName": "osuBucketPrefix",
          "serialize": true
        },
        {
          "name": "PublicationInterval",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "PublicationInterval",
          "parameterName": "publicationInterval",
          "serialize": true
        }
      ],
      "typeName": "AccessLog"
    },
    {
      "name": "Account",
      "description": "implements the service definition of Account",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "City",
          "type": "string",
          "nativeType": "string",
          "fieldName": "City",
          "parameterName": "city",
          "serialize": true
        },
        {
          "name": "CompanyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CompanyName",
          "parameterName": "companyName",
          "serialize": true
        },
        {
          "name": "Country",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Country",
          "parameterName": "country",
          "serialize": true
        },
        {
          "name": "CustomerId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CustomerId",
          "parameterName": "customerId",
          "serialize": true
        },
        {
          "name": "Email",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Email",
          "parameterName": "email",
          "serialize": true
        },
        {
          "name": "FirstName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirstName",
          "parameterName": "firstName",
          "serialize": true
        },
        {
          "name": "JobTitle",
          "type": "string",
          "nativeType": "string",
          "fieldName": "JobTitle",
          "parameterName": "jobTitle",
          "serialize": true
        },
        {
          "name": "LastName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LastName",
          "parameterName": "lastName",
          "serialize": true
        },
        {
          "name": "Mobile",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Mobile",
          "parameterName": "mobile",
          "serialize": true
        },
        {
          "name": "Phone",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Phone",
          "parameterName": "phone",
          "serialize": true
        },
        {
          "name": "StateProvince",
          "type": "string",
          "nativeType": "string",
          "fieldName": "StateProvince",
          "parameterName": "stateProvince",
          "serialize": true
        },
        {
          "name": "VatNumber",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VatNumber",
          "parameterName": "vatNumber",
          "serialize": true
        },
        {
          "name": "ZipCode",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ZipCode",
          "parameterName": "zipCode",
          "serialize": true
        }
      ],
      "typeName": "Account"
    },
    {
      "name": "Additions",
      "description": "implements the service definition of Additions",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "GlobalPermission",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GlobalPermission",
          "parameterName": "globalPermission",
          "serialize": true
        }
      ],
      "typeName": "Additions"
    },
    {
      "name": "ApiKey",
      "description": "implements the service definition of ApiKey",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "ApiKeyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ApiKeyId",
          "parameterName": "apiKeyId",
          "serialize": true
        },
        {
          "name": "SecretKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SecretKey",
          "parameterName": "secretKey",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "ApiKey"
    },
    {
      "name": "ApiKeys",
      "description": "implements the service definition of ApiKeys",
      "fields": [
        {
          "name": "ApiKeyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ApiKeyId",
          "parameterName": "apiKeyId",
          "serialize": true
        },
        {
          "name": "SecretKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SecretKey",
          "parameterName": "secretKey",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "ApiKeys"
    },
    {
      "name": "ApplicationStickyCookiePolicies",
      "description": "implements the service definition of ApplicationStickyCookiePolicies",
      "fields": [
        {
          "name": "CookieName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CookieName",
          "parameterName": "cookieName",
          "serialize": true
        },
        {
          "name": "PolicyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyName",
          "parameterName": "policyName",
          "serialize": true
        }
      ],
      "typeName": "ApplicationStickyCookiePolicies"
    },
    {
      "name": "AuthenticateAccountRequest",
      "description": "implements the service definition of AuthenticateAccountRequest",
      "fields": [
        {
          "name": "Login",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Login",
          "parameterName": "login",
          "serialize": true
        },
        {
          "name": "Password",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Password",
          "parameterName": "password",
          "serialize": true
        }
      ],
      "typeName": "AuthenticateAccountRequest"
    },
    {
      "name": "AuthenticateAccountResponse",
      "description": "implements the service definition of AuthenticateAccountResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "AuthenticateAccountResponse"
    },
    {
      "name": "BackendVmsHealth",
      "description": "implements the service definition of BackendVmsHealth",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "StateReason",
          "type": "string",
          "nativeType": "string",
          "fieldName": "StateReason",
          "parameterName": "stateReason",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "BackendVmsHealth"
    },
    {
      "name": "BlockDeviceMappings",
      "description": "implements the service definition of BlockDeviceMappings",
      "fields": [
        {
          "name": "Bsu",
          "type": "Bsu",
          "nativeType": "Bsu",
          "fieldName": "Bsu",
          "parameterName": "bsu",
          "serialize": true
        },
        {
          "name": "DeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DeviceName",
          "parameterName": "deviceName",
          "serialize": true
        }
      ],
      "typeName": "BlockDeviceMappings"
    },
    {
      "name": "Bsu",
      "description": "implements the service definition of Bsu",
      "fields": [
        {
          "name": "DeleteOnVmDeletion",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DeleteOnVmDeletion",
          "parameterName": "deleteOnVmDeletion",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "Bsu"
    },
    {
      "name": "CancelExportTaskRequest",
      "description": "implements the service definition of CancelExportTaskRequest",
      "fields": [
        {
          "name": "ExportTaskId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ExportTaskId",
          "parameterName": "exportTaskId",
          "serialize": true
        }
      ],
      "typeName": "CancelExportTaskRequest"
    },
    {
      "name": "CancelExportTaskResponse",
      "description": "implements the service definition of CancelExportTaskResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CancelExportTaskResponse"
    },
    {
      "name": "Catalog",
      "description": "implements the service definition of Catalog",
      "fields": [
        {
          "name": "Domain",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Domain",
          "parameterName": "domain",
          "serialize": true
        },
        {
          "name": "Instance",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Instance",
          "parameterName": "instance",
          "serialize": true
        },
        {
          "name": "SourceRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceRegionName",
          "parameterName": "sourceRegionName",
          "serialize": true
        },
        {
          "name": "TargetRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "TargetRegionName",
          "parameterName": "targetRegionName",
          "serialize": true
        },
        {
          "name": "Version",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Version",
          "parameterName": "version",
          "serialize": true
        }
      ],
      "typeName": "Catalog"
    },
    {
      "name": "CheckSignatureRequest",
      "description": "implements the service definition of CheckSignatureRequest",
      "fields": [
        {
          "name": "ApiKeyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ApiKeyId",
          "parameterName": "apiKeyId",
          "serialize": true
        },
        {
          "name": "RegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RegionName",
          "parameterName": "regionName",
          "serialize": true
        },
        {
          "name": "RequestDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "RequestDate",
          "parameterName": "requestDate",
          "serialize": true
        },
        {
          "name": "Service",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Service",
          "parameterName": "service",
          "serialize": true
        },
        {
          "name": "Signature",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Signature",
          "parameterName": "signature",
          "serialize": true
        },
        {
          "name": "SignedContent",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SignedContent",
          "parameterName": "signedContent",
          "serialize": true
        }
      ],
      "typeName": "CheckSignatureRequest"
    },
    {
      "name": "CheckSignatureResponse",
      "description": "implements the service definition of CheckSignatureResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CheckSignatureResponse"
    },
    {
      "name": "ClientEndpoint",
      "description": "implements the service definition of ClientEndpoint",
      "fields": [
        {
          "name": "BgpAsn",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "BgpAsn",
          "parameterName": "bgpAsn",
          "serialize": true
        },
        {
          "name": "ClientId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientId",
          "parameterName": "clientId",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "ClientEndpoint"
    },
    {
      "name": "ClientEndpoints",
      "description": "implements the service definition of ClientEndpoints",
      "fields": [
        {
          "name": "BgpAsn",
          "type": "string",
          "nativeType": "string",
          "fieldName": "BgpAsn",
          "parameterName": "bgpAsn",
          "serialize": true
        },
        {
          "name": "ClientEndpointId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientEndpointId",
          "parameterName": "clientEndpointId",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "ClientEndpoints"
    },
    {
      "name": "ConsumptionEntries",
      "description": "implements the service definition of ConsumptionEntries",
      "fields": [
        {
          "name": "Category",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Category",
          "parameterName": "category",
          "serialize": true
        },
        {
          "name": "ConsumptionValue",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ConsumptionValue",
          "parameterName": "consumptionValue",
          "serialize": true
        },
        {
          "name": "Entry",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Entry",
          "parameterName": "entry",
          "serialize": true
        },
        {
          "name": "Service",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Service",
          "parameterName": "service",
          "serialize": true
        },
        {
          "name": "ShortDescription",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ShortDescription",
          "parameterName": "shortDescription",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "ConsumptionEntries"
    },
    {
      "name": "CopyAccountRequest",
      "description": "implements the service definition of CopyAccountRequest",
      "fields": [
        {
          "name": "DestinationRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationRegionName",
          "parameterName": "destinationRegionName",
          "serialize": true
        },
        {
          "name": "QuotaProfile",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QuotaProfile",
          "parameterName": "quotaProfile",
          "serialize": true
        }
      ],
      "typeName": "CopyAccountRequest"
    },
    {
      "name": "CopyAccountResponse",
      "description": "implements the service definition of CopyAccountResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CopyAccountResponse"
    },
    {
      "name": "CopyImageRequest",
      "description": "implements the service definition of CopyImageRequest",
      "fields": [
        {
          "name": "ClientToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientToken",
          "parameterName": "clientToken",
          "serialize": true
        },
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        },
        {
          "name": "SourceImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceImageId",
          "parameterName": "sourceImageId",
          "serialize": true
        },
        {
          "name": "SourceRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceRegionName",
          "parameterName": "sourceRegionName",
          "serialize": true
        }
      ],
      "typeName": "CopyImageRequest"
    },
    {
      "name": "CopyImageResponse",
      "description": "implements the service definition of CopyImageResponse",
      "fields": [
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CopyImageResponse"
    },
    {
      "name": "CopySnapshotRequest",
      "description": "implements the service definition of CopySnapshotRequest",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "DestinationRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationRegionName",
          "parameterName": "destinationRegionName",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "SourceRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceRegionName",
          "parameterName": "sourceRegionName",
          "serialize": true
        },
        {
          "name": "SourceSnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceSnapshotId",
          "parameterName": "sourceSnapshotId",
          "serialize": true
        }
      ],
      "typeName": "CopySnapshotRequest"
    },
    {
      "name": "CopySnapshotResponse",
      "description": "implements the service definition of CopySnapshotResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        }
      ],
      "typeName": "CopySnapshotResponse"
    },
    {
      "name": "CreateAccountRequest",
      "description": "implements the service definition of CreateAccountRequest",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "ApiKeys",
          "type": "ApiKeys",
          "kind": 2,
          "nativeType": "ApiKeys",
          "fieldName": "ApiKeys",
          "parameterName": "apiKeys",
          "serialize": true
        },
        {
          "name": "City",
          "type": "string",
          "nativeType": "string",
          "fieldName": "City",
          "parameterName": "city",
          "serialize": true
        },
        {
          "name": "CompanyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CompanyName",
          "parameterName": "companyName",
          "serialize": true
        },
        {
          "name": "Country",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Country",
          "parameterName": "country",
          "serialize": true
        },
        {
          "name": "CustomerId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CustomerId",
          "parameterName": "customerId",
          "serialize": true
        },
        {
          "name": "Email",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Email",
          "parameterName": "email",
          "serialize": true
        },
        {
          "name": "FirstName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirstName",
          "parameterName": "firstName",
          "serialize": true
        },
        {
          "name": "JobTitle",
          "type": "string",
          "nativeType": "string",
          "fieldName": "JobTitle",
          "parameterName": "jobTitle",
          "serialize": true
        },
        {
          "name": "LastName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LastName",
          "parameterName": "lastName",
          "serialize": true
        },
        {
          "name": "Mobile",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Mobile",
          "parameterName": "mobile",
          "serialize": true
        },
        {
          "name": "Password",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Password",
          "parameterName": "password",
          "serialize": true
        },
        {
          "name": "Phone",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Phone",
          "parameterName": "phone",
          "serialize": true
        },
        {
          "name": "QuotaProfile",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QuotaProfile",
          "parameterName": "quotaProfile",
          "serialize": true
        },
        {
          "name": "StateProvince",
          "type": "string",
          "nativeType": "string",
          "fieldName": "StateProvince",
          "parameterName": "stateProvince",
          "serialize": true
        },
        {
          "name": "VatNumber",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VatNumber",
          "parameterName": "vatNumber",
          "serialize": true
        },
        {
          "name": "ZipCode",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ZipCode",
          "parameterName": "zipCode",
          "serialize": true
        }
      ],
      "typeName": "CreateAccountRequest"
    },
    {
      "name": "CreateAccountResponse",
      "description": "implements the service definition of CreateAccountResponse",
      "fields": [
        {
          "name": "Account",
          "type": "Account",
          "nativeType": "Account",
          "fieldName": "Account",
          "parameterName": "account",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateAccountResponse"
    },
    {
      "name": "CreateApiKeyRequest",
      "description": "implements the service definition of CreateApiKeyRequest",
      "fields": [
        {
          "name": "ApiKeyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ApiKeyId",
          "parameterName": "apiKeyId",
          "serialize": true
        },
        {
          "name": "SecretKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SecretKey",
          "parameterName": "secretKey",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "CreateApiKeyRequest"
    },
    {
      "name": "CreateApiKeyResponse",
      "description": "implements the service definition of CreateApiKeyResponse",
      "fields": [
        {
          "name": "ApiKey",
          "type": "ApiKey",
          "nativeType": "ApiKey",
          "fieldName": "ApiKey",
          "parameterName": "apiKey",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateApiKeyResponse"
    },
    {
      "name": "CreateClientEndpointRequest",
      "description": "implements the service definition of CreateClientEndpointRequest",
      "fields": [
        {
          "name": "BgpAsn",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "BgpAsn",
          "parameterName": "bgpAsn",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "CreateClientEndpointRequest"
    },
    {
      "name": "CreateClientEndpointResponse",
      "description": "implements the service definition of CreateClientEndpointResponse",
      "fields": [
        {
          "name": "ClientEndpoint",
          "type": "ClientEndpoint",
          "nativeType": "ClientEndpoint",
          "fieldName": "ClientEndpoint",
          "parameterName": "clientEndpoint",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateClientEndpointResponse"
    },
    {
      "name": "CreateDhcpOptionsRequest",
      "description": "implements the service definition of CreateDhcpOptionsRequest",
      "fields": [
        {
          "name": "DhcpConfigurations",
          "type": "DhcpConfigurations",
          "kind": 2,
          "nativeType": "DhcpConfigurations",
          "fieldName": "DhcpConfigurations",
          "parameterName": "dhcpConfigurations",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        }
      ],
      "typeName": "CreateDhcpOptionsRequest"
    },
    {
      "name": "CreateDhcpOptionsResponse",
      "description": "implements the service definition of CreateDhcpOptionsResponse",
      "fields": [
        {
          "name": "DhcpOptionsSet",
          "type": "DhcpOptionsSet",
          "nativeType": "DhcpOptionsSet",
          "fieldName": "DhcpOptionsSet",
          "parameterName": "dhcpOptionsSet",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateDhcpOptionsResponse"
    },
    {
      "name": "CreateDirectLinkInterfaceRequest",
      "description": "implements the service definition of CreateDirectLinkInterfaceRequest",
      "fields": [
        {
          "name": "DirectLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkId",
          "parameterName": "directLinkId",
          "serialize": true
        },
        {
          "name": "DirectLinkInterface",
          "type": "DirectLinkInterface",
          "nativeType": "DirectLinkInterface",
          "fieldName": "DirectLinkInterface",
          "parameterName": "directLinkInterface",
          "serialize": true
        }
      ],
      "typeName": "CreateDirectLinkInterfaceRequest"
    },
    {
      "name": "CreateDirectLinkInterfaceResponse",
      "description": "implements the service definition of CreateDirectLinkInterfaceResponse",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "BgpAsn",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "BgpAsn",
          "parameterName": "bgpAsn",
          "serialize": true
        },
        {
          "name": "BgpKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "BgpKey",
          "parameterName": "bgpKey",
          "serialize": true
        },
        {
          "name": "ClientPrivateIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientPrivateIp",
          "parameterName": "clientPrivateIp",
          "serialize": true
        },
        {
          "name": "DirectLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkId",
          "parameterName": "directLinkId",
          "serialize": true
        },
        {
          "name": "DirectLinkInterfaceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkInterfaceId",
          "parameterName": "directLinkInterfaceId",
          "serialize": true
        },
        {
          "name": "DirectLinkInterfaceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkInterfaceName",
          "parameterName": "directLinkInterfaceName",
          "serialize": true
        },
        {
          "name": "OutscalePrivateIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OutscalePrivateIp",
          "parameterName": "outscalePrivateIp",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Site",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Site",
          "parameterName": "site",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "Vlan",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Vlan",
          "parameterName": "vlan",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "CreateDirectLinkInterfaceResponse"
    },
    {
      "name": "CreateDirectLinkRequest",
      "description": "implements the service definition of CreateDirectLinkRequest",
      "fields": [
        {
          "name": "Bandwidth",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Bandwidth",
          "parameterName": "bandwidth",
          "serialize": true
        },
        {
          "name": "DirectLinkName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkName",
          "parameterName": "directLinkName",
          "serialize": true
        },
        {
          "name": "Site",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Site",
          "parameterName": "site",
          "serialize": true
        }
      ],
      "typeName": "CreateDirectLinkRequest"
    },
    {
      "name": "CreateDirectLinkResponse",
      "description": "implements the service definition of CreateDirectLinkResponse",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "Bandwidth",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Bandwidth",
          "parameterName": "bandwidth",
          "serialize": true
        },
        {
          "name": "DirectLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkId",
          "parameterName": "directLinkId",
          "serialize": true
        },
        {
          "name": "DirectLinkName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkName",
          "parameterName": "directLinkName",
          "serialize": true
        },
        {
          "name": "RegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RegionName",
          "parameterName": "regionName",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Site",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Site",
          "parameterName": "site",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        }
      ],
      "typeName": "CreateDirectLinkResponse"
    },
    {
      "name": "CreateFirewallRuleInboundRequest",
      "description": "implements the service definition of CreateFirewallRuleInboundRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetId",
          "parameterName": "firewallRulesSetId",
          "serialize": true
        },
        {
          "name": "FromPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "FromPortRange",
          "parameterName": "fromPortRange",
          "serialize": true
        },
        {
          "name": "InboundRules",
          "type": "InboundRules",
          "kind": 2,
          "nativeType": "InboundRules",
          "fieldName": "InboundRules",
          "parameterName": "inboundRules",
          "serialize": true
        },
        {
          "name": "IpProtocol",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpProtocol",
          "parameterName": "ipProtocol",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "SourceFirewallRulesSetAccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceFirewallRulesSetAccountId",
          "parameterName": "sourceFirewallRulesSetAccountId",
          "serialize": true
        },
        {
          "name": "SourceFirewallRulesSetName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceFirewallRulesSetName",
          "parameterName": "sourceFirewallRulesSetName",
          "serialize": true
        },
        {
          "name": "ToPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ToPortRange",
          "parameterName": "toPortRange",
          "serialize": true
        }
      ],
      "typeName": "CreateFirewallRuleInboundRequest"
    },
    {
      "name": "CreateFirewallRuleInboundResponse",
      "description": "implements the service definition of CreateFirewallRuleInboundResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateFirewallRuleInboundResponse"
    },
    {
      "name": "CreateFirewallRuleOutboundRequest",
      "description": "implements the service definition of CreateFirewallRuleOutboundRequest",
      "fields": [
        {
          "name": "DestinationFirewallRulesSetAccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationFirewallRulesSetAccountId",
          "parameterName": "destinationFirewallRulesSetAccountId",
          "serialize": true
        },
        {
          "name": "DestinationFirewallRulesSetName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationFirewallRulesSetName",
          "parameterName": "destinationFirewallRulesSetName",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetId",
          "parameterName": "firewallRulesSetId",
          "serialize": true
        },
        {
          "name": "FromPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "FromPortRange",
          "parameterName": "fromPortRange",
          "serialize": true
        },
        {
          "name": "IpProtocol",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpProtocol",
          "parameterName": "ipProtocol",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "OutboundRules",
          "type": "OutboundRules",
          "kind": 2,
          "nativeType": "OutboundRules",
          "fieldName": "OutboundRules",
          "parameterName": "outboundRules",
          "serialize": true
        },
        {
          "name": "ToPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ToPortRange",
          "parameterName": "toPortRange",
          "serialize": true
        }
      ],
      "typeName": "CreateFirewallRuleOutboundRequest"
    },
    {
      "name": "CreateFirewallRuleOutboundResponse",
      "description": "implements the service definition of CreateFirewallRuleOutboundResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateFirewallRuleOutboundResponse"
    },
    {
      "name": "CreateFirewallRulesSetRequest",
      "description": "implements the service definition of CreateFirewallRulesSetRequest",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        }
      ],
      "typeName": "CreateFirewallRulesSetRequest"
    },
    {
      "name": "CreateFirewallRulesSetResponse",
      "description": "implements the service definition of CreateFirewallRulesSetResponse",
      "fields": [
        {
          "name": "FirewallRulesSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetId",
          "parameterName": "firewallRulesSetId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateFirewallRulesSetResponse"
    },
    {
      "name": "CreateGroupRequest",
      "description": "implements the service definition of CreateGroupRequest",
      "fields": [
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        }
      ],
      "typeName": "CreateGroupRequest"
    },
    {
      "name": "CreateGroupResponse",
      "description": "implements the service definition of CreateGroupResponse",
      "fields": [
        {
          "name": "Group",
          "type": "Group",
          "nativeType": "Group",
          "fieldName": "Group",
          "parameterName": "group",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateGroupResponse"
    },
    {
      "name": "CreateImageExportTaskRequest",
      "description": "implements the service definition of CreateImageExportTaskRequest",
      "fields": [
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "OsuExport",
          "type": "OsuExport",
          "nativeType": "OsuExport",
          "fieldName": "OsuExport",
          "parameterName": "osuExport",
          "serialize": true
        }
      ],
      "typeName": "CreateImageExportTaskRequest"
    },
    {
      "name": "CreateImageExportTaskResponse",
      "description": "implements the service definition of CreateImageExportTaskResponse",
      "fields": [
        {
          "name": "ImageExportTask",
          "type": "ImageExportTask",
          "nativeType": "ImageExportTask",
          "fieldName": "ImageExportTask",
          "parameterName": "imageExportTask",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateImageExportTaskResponse"
    },
    {
      "name": "CreateImageRequest",
      "description": "implements the service definition of CreateImageRequest",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        },
        {
          "name": "NoReboot",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "NoReboot",
          "parameterName": "noReboot",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "CreateImageRequest"
    },
    {
      "name": "CreateImageResponse",
      "description": "implements the service definition of CreateImageResponse",
      "fields": [
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateImageResponse"
    },
    {
      "name": "CreateKeypairRequest",
      "description": "implements the service definition of CreateKeypairRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        }
      ],
      "typeName": "CreateKeypairRequest"
    },
    {
      "name": "CreateKeypairResponse",
      "description": "implements the service definition of CreateKeypairResponse",
      "fields": [
        {
          "name": "KeypairFingerprint",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairFingerprint",
          "parameterName": "keypairFingerprint",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        },
        {
          "name": "PrivateKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrivateKey",
          "parameterName": "privateKey",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateKeypairResponse"
    },
    {
      "name": "CreateListenerRuleRequest",
      "description": "implements the service definition of CreateListenerRuleRequest",
      "fields": [
        {
          "name": "Listener",
          "type": "Listener",
          "nativeType": "Listener",
          "fieldName": "Listener",
          "parameterName": "listener",
          "serialize": true
        },
        {
          "name": "ListenerRule",
          "type": "ListenerRule",
          "nativeType": "ListenerRule",
          "fieldName": "ListenerRule",
          "parameterName": "listenerRule",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "CreateListenerRuleRequest"
    },
    {
      "name": "CreateListenerRuleResponse",
      "description": "implements the service definition of CreateListenerRuleResponse",
      "fields": [
        {
          "name": "ListenerId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ListenerId",
          "parameterName": "listenerId",
          "serialize": true
        },
        {
          "name": "ListenerRule",
          "type": "ListenerRule",
          "nativeType": "ListenerRule",
          "fieldName": "ListenerRule",
          "parameterName": "listenerRule",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "CreateListenerRuleResponse"
    },
    {
      "name": "CreateLoadBalancerListenersRequest",
      "description": "implements the service definition of CreateLoadBalancerListenersRequest",
      "fields": [
        {
          "name": "Listeners",
          "type": "Listeners",
          "kind": 2,
          "nativeType": "Listeners",
          "fieldName": "Listeners",
          "parameterName": "listeners",
          "serialize": true
        },
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        }
      ],
      "typeName": "CreateLoadBalancerListenersRequest"
    },
    {
      "name": "CreateLoadBalancerListenersResponse",
      "description": "implements the service definition of CreateLoadBalancerListenersResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateLoadBalancerListenersResponse"
    },
    {
      "name": "CreateLoadBalancerRequest",
      "description": "implements the service definition of CreateLoadBalancerRequest",
      "fields": [
        {
          "name": "FirewallRulesSets",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "FirewallRulesSets",
          "parameterName": "firewallRulesSets",
          "serialize": true
        },
        {
          "name": "Listeners",
          "type": "Listeners",
          "kind": 2,
          "nativeType": "Listeners",
          "fieldName": "Listeners",
          "parameterName": "listeners",
          "serialize": true
        },
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        },
        {
          "name": "LoadBalancerType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerType",
          "parameterName": "loadBalancerType",
          "serialize": true
        },
        {
          "name": "SubRegionNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "SubRegionNames",
          "parameterName": "subRegionNames",
          "serialize": true
        },
        {
          "name": "Subnets",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "Subnets",
          "parameterName": "subnets",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "CreateLoadBalancerRequest"
    },
    {
      "name": "CreateLoadBalancerResponse",
      "description": "implements the service definition of CreateLoadBalancerResponse",
      "fields": [
        {
          "name": "DnsName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DnsName",
          "parameterName": "dnsName",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateLoadBalancerResponse"
    },
    {
      "name": "CreateNatServiceRequest",
      "description": "implements the service definition of CreateNatServiceRequest",
      "fields": [
        {
          "name": "ClientToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientToken",
          "parameterName": "clientToken",
          "serialize": true
        },
        {
          "name": "LinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LinkId",
          "parameterName": "linkId",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        }
      ],
      "typeName": "CreateNatServiceRequest"
    },
    {
      "name": "CreateNatServiceResponse",
      "description": "implements the service definition of CreateNatServiceResponse",
      "fields": [
        {
          "name": "ClientToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientToken",
          "parameterName": "clientToken",
          "serialize": true
        },
        {
          "name": "NatService",
          "type": "NatService",
          "nativeType": "NatService",
          "fieldName": "NatService",
          "parameterName": "natService",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateNatServiceResponse"
    },
    {
      "name": "CreateNetAccessRequest",
      "description": "implements the service definition of CreateNetAccessRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "PrefixListName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrefixListName",
          "parameterName": "prefixListName",
          "serialize": true
        },
        {
          "name": "RouteTableIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteTableIds",
          "parameterName": "routeTableIds",
          "serialize": true
        }
      ],
      "typeName": "CreateNetAccessRequest"
    },
    {
      "name": "CreateNetAccessResponse",
      "description": "implements the service definition of CreateNetAccessResponse",
      "fields": [
        {
          "name": "NetAccess",
          "type": "NetAccess",
          "nativeType": "NetAccess",
          "fieldName": "NetAccess",
          "parameterName": "netAccess",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateNetAccessResponse"
    },
    {
      "name": "CreateNetInternetGatewayRequest",
      "description": "implements the service definition of CreateNetInternetGatewayRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        }
      ],
      "typeName": "CreateNetInternetGatewayRequest"
    },
    {
      "name": "CreateNetInternetGatewayResponse",
      "description": "implements the service definition of CreateNetInternetGatewayResponse",
      "fields": [
        {
          "name": "NetInternetGateway",
          "type": "NetInternetGateway",
          "nativeType": "NetInternetGateway",
          "fieldName": "NetInternetGateway",
          "parameterName": "netInternetGateway",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateNetInternetGatewayResponse"
    },
    {
      "name": "CreateNetPeeringRequest",
      "description": "implements the service definition of CreateNetPeeringRequest",
      "fields": [
        {
          "name": "AccepterNetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccepterNetId",
          "parameterName": "accepterNetId",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "SourceNetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceNetId",
          "parameterName": "sourceNetId",
          "serialize": true
        }
      ],
      "typeName": "CreateNetPeeringRequest"
    },
    {
      "name": "CreateNetPeeringResponse",
      "description": "implements the service definition of CreateNetPeeringResponse",
      "fields": [
        {
          "name": "NetPeering",
          "type": "NetPeering",
          "nativeType": "NetPeering",
          "fieldName": "NetPeering",
          "parameterName": "netPeering",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateNetPeeringResponse"
    },
    {
      "name": "CreateNetRequest",
      "description": "implements the service definition of CreateNetRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "Tenancy",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Tenancy",
          "parameterName": "tenancy",
          "serialize": true
        }
      ],
      "typeName": "CreateNetRequest"
    },
    {
      "name": "CreateNetResponse",
      "description": "implements the service definition of CreateNetResponse",
      "fields": [
        {
          "name": "Net",
          "type": "Net",
          "nativeType": "Net",
          "fieldName": "Net",
          "parameterName": "net",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateNetResponse"
    },
    {
      "name": "CreateNicRequest",
      "description": "implements the service definition of CreateNicRequest",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "FirewallRulesSetIds",
          "parameterName": "firewallRulesSetIds",
          "serialize": true
        },
        {
          "name": "PrivateIps",
          "type": "PrivateIps",
          "kind": 2,
          "nativeType": "PrivateIps",
          "fieldName": "PrivateIps",
          "parameterName": "privateIps",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        }
      ],
      "typeName": "CreateNicRequest"
    },
    {
      "name": "CreateNicResponse",
      "description": "implements the service definition of CreateNicResponse",
      "fields": [
        {
          "name": "Nic",
          "type": "Nic",
          "nativeType": "Nic",
          "fieldName": "Nic",
          "parameterName": "nic",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateNicResponse"
    },
    {
      "name": "CreatePolicyRequest",
      "description": "implements the service definition of CreatePolicyRequest",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "Document",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Document",
          "parameterName": "document",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        },
        {
          "name": "PolicyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyName",
          "parameterName": "policyName",
          "serialize": true
        }
      ],
      "typeName": "CreatePolicyRequest"
    },
    {
      "name": "CreatePolicyResponse",
      "description": "implements the service definition of CreatePolicyResponse",
      "fields": [
        {
          "name": "Policy",
          "type": "Policy",
          "nativeType": "Policy",
          "fieldName": "Policy",
          "parameterName": "policy",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreatePolicyResponse"
    },
    {
      "name": "CreatePublicIpRequest",
      "description": "implements the service definition of CreatePublicIpRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Placement",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Placement",
          "parameterName": "placement",
          "serialize": true
        }
      ],
      "typeName": "CreatePublicIpRequest"
    },
    {
      "name": "CreatePublicIpResponse",
      "description": "implements the service definition of CreatePublicIpResponse",
      "fields": [
        {
          "name": "Placement",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Placement",
          "parameterName": "placement",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        },
        {
          "name": "ReservationId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ReservationId",
          "parameterName": "reservationId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreatePublicIpResponse"
    },
    {
      "name": "CreateRouteRequest",
      "description": "implements the service definition of CreateRouteRequest",
      "fields": [
        {
          "name": "DestinationIpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationIpRange",
          "parameterName": "destinationIpRange",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "GatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GatewayId",
          "parameterName": "gatewayId",
          "serialize": true
        },
        {
          "name": "NatServiceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NatServiceId",
          "parameterName": "natServiceId",
          "serialize": true
        },
        {
          "name": "NetPeeringId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetPeeringId",
          "parameterName": "netPeeringId",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "CreateRouteRequest"
    },
    {
      "name": "CreateRouteResponse",
      "description": "implements the service definition of CreateRouteResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateRouteResponse"
    },
    {
      "name": "CreateRouteTableRequest",
      "description": "implements the service definition of CreateRouteTableRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        }
      ],
      "typeName": "CreateRouteTableRequest"
    },
    {
      "name": "CreateRouteTableResponse",
      "description": "implements the service definition of CreateRouteTableResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "RouteTable",
          "type": "RouteTable",
          "nativeType": "RouteTable",
          "fieldName": "RouteTable",
          "parameterName": "routeTable",
          "serialize": true
        }
      ],
      "typeName": "CreateRouteTableResponse"
    },
    {
      "name": "CreateSnapshotExportTaskRequest",
      "description": "implements the service definition of CreateSnapshotExportTaskRequest",
      "fields": [
        {
          "name": "OsuExport",
          "type": "OsuExport",
          "nativeType": "OsuExport",
          "fieldName": "OsuExport",
          "parameterName": "osuExport",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        }
      ],
      "typeName": "CreateSnapshotExportTaskRequest"
    },
    {
      "name": "CreateSnapshotExportTaskResponse",
      "description": "implements the service definition of CreateSnapshotExportTaskResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "SnapshotExportTask",
          "type": "SnapshotExportTask",
          "nativeType": "SnapshotExportTask",
          "fieldName": "SnapshotExportTask",
          "parameterName": "snapshotExportTask",
          "serialize": true
        }
      ],
      "typeName": "CreateSnapshotExportTaskResponse"
    },
    {
      "name": "CreateSnapshotRequest",
      "description": "implements the service definition of CreateSnapshotRequest",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "CreateSnapshotRequest"
    },
    {
      "name": "CreateSnapshotResponse",
      "description": "implements the service definition of CreateSnapshotResponse",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "Progress",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Progress",
          "parameterName": "progress",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        },
        {
          "name": "VolumeSize",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "VolumeSize",
          "parameterName": "volumeSize",
          "serialize": true
        }
      ],
      "typeName": "CreateSnapshotResponse"
    },
    {
      "name": "CreateStickyCookiePolicyRequest",
      "description": "implements the service definition of CreateStickyCookiePolicyRequest",
      "fields": [
        {
          "name": "CookieName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CookieName",
          "parameterName": "cookieName",
          "serialize": true
        },
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        },
        {
          "name": "PolicyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyName",
          "parameterName": "policyName",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "CreateStickyCookiePolicyRequest"
    },
    {
      "name": "CreateStickyCookiePolicyResponse",
      "description": "implements the service definition of CreateStickyCookiePolicyResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateStickyCookiePolicyResponse"
    },
    {
      "name": "CreateSubnetRequest",
      "description": "implements the service definition of CreateSubnetRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        }
      ],
      "typeName": "CreateSubnetRequest"
    },
    {
      "name": "CreateSubnetResponse",
      "description": "implements the service definition of CreateSubnetResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Subnet",
          "type": "Subnet",
          "nativeType": "Subnet",
          "fieldName": "Subnet",
          "parameterName": "subnet",
          "serialize": true
        }
      ],
      "typeName": "CreateSubnetResponse"
    },
    {
      "name": "CreateTagsRequest",
      "description": "implements the service definition of CreateTagsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "ResourceIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "ResourceIds",
          "parameterName": "resourceIds",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "CreateTagsRequest"
    },
    {
      "name": "CreateTagsResponse",
      "description": "implements the service definition of CreateTagsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateTagsResponse"
    },
    {
      "name": "CreateUserRequest",
      "description": "implements the service definition of CreateUserRequest",
      "fields": [
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "CreateUserRequest"
    },
    {
      "name": "CreateUserResponse",
      "description": "implements the service definition of CreateUserResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "User",
          "type": "User",
          "nativeType": "User",
          "fieldName": "User",
          "parameterName": "user",
          "serialize": true
        }
      ],
      "typeName": "CreateUserResponse"
    },
    {
      "name": "CreateVmsRequest",
      "description": "implements the service definition of CreateVmsRequest",
      "fields": [
        {
          "name": "BlockDeviceMappings",
          "type": "BlockDeviceMappings",
          "kind": 2,
          "nativeType": "BlockDeviceMappings",
          "fieldName": "BlockDeviceMappings",
          "parameterName": "blockDeviceMappings",
          "serialize": true
        },
        {
          "name": "BsuOptimized",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "BsuOptimized",
          "parameterName": "bsuOptimized",
          "serialize": true
        },
        {
          "name": "ClientToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientToken",
          "parameterName": "clientToken",
          "serialize": true
        },
        {
          "name": "DeletionProtection",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DeletionProtection",
          "parameterName": "deletionProtection",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "FirewallRulesSetIds",
          "parameterName": "firewallRulesSetIds",
          "serialize": true
        },
        {
          "name": "FirewallRulesSets",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "FirewallRulesSets",
          "parameterName": "firewallRulesSets",
          "serialize": true
        },
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        },
        {
          "name": "MaxVmsCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxVmsCount",
          "parameterName": "maxVmsCount",
          "serialize": true
        },
        {
          "name": "MinVmsCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MinVmsCount",
          "parameterName": "minVmsCount",
          "serialize": true
        },
        {
          "name": "Nics",
          "type": "Nics",
          "kind": 2,
          "nativeType": "Nics",
          "fieldName": "Nics",
          "parameterName": "nics",
          "serialize": true
        },
        {
          "name": "Placement",
          "type": "Placement",
          "nativeType": "Placement",
          "fieldName": "Placement",
          "parameterName": "placement",
          "serialize": true
        },
        {
          "name": "PrivateIps",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "PrivateIps",
          "parameterName": "privateIps",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "UserData",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserData",
          "parameterName": "userData",
          "serialize": true
        },
        {
          "name": "VmInitiatedShutdownBehavior",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmInitiatedShutdownBehavior",
          "parameterName": "vmInitiatedShutdownBehavior",
          "serialize": true
        }
      ],
      "typeName": "CreateVmsRequest"
    },
    {
      "name": "CreateVmsResponse",
      "description": "implements the service definition of CreateVmsResponse",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "FirewallRulesSets",
          "type": "FirewallRulesSets",
          "kind": 2,
          "nativeType": "FirewallRulesSets",
          "fieldName": "FirewallRulesSets",
          "parameterName": "firewallRulesSets",
          "serialize": true
        },
        {
          "name": "ReservationId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ReservationId",
          "parameterName": "reservationId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Vms",
          "type": "Vms",
          "kind": 2,
          "nativeType": "Vms",
          "fieldName": "Vms",
          "parameterName": "vms",
          "serialize": true
        }
      ],
      "typeName": "CreateVmsResponse"
    },
    {
      "name": "CreateVolumeRequest",
      "description": "implements the service definition of CreateVolumeRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Iops",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Iops",
          "parameterName": "iops",
          "serialize": true
        },
        {
          "name": "Size",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Size",
          "parameterName": "size",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "CreateVolumeRequest"
    },
    {
      "name": "CreateVolumeResponse",
      "description": "implements the service definition of CreateVolumeResponse",
      "fields": [
        {
          "name": "Iops",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Iops",
          "parameterName": "iops",
          "serialize": true
        },
        {
          "name": "LinkedVolumes",
          "type": "LinkedVolumes",
          "kind": 2,
          "nativeType": "LinkedVolumes",
          "fieldName": "LinkedVolumes",
          "parameterName": "linkedVolumes",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Size",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Size",
          "parameterName": "size",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "CreateVolumeResponse"
    },
    {
      "name": "CreateVpnConnectionRequest",
      "description": "implements the service definition of CreateVpnConnectionRequest",
      "fields": [
        {
          "name": "ClientEndpointId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientEndpointId",
          "parameterName": "clientEndpointId",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "StaticRoutesOnly",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "StaticRoutesOnly",
          "parameterName": "staticRoutesOnly",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "CreateVpnConnectionRequest"
    },
    {
      "name": "CreateVpnConnectionResponse",
      "description": "implements the service definition of CreateVpnConnectionResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "VpnConnection",
          "type": "VpnConnection",
          "nativeType": "VpnConnection",
          "fieldName": "VpnConnection",
          "parameterName": "vpnConnection",
          "serialize": true
        }
      ],
      "typeName": "CreateVpnConnectionResponse"
    },
    {
      "name": "CreateVpnConnectionRouteRequest",
      "description": "implements the service definition of CreateVpnConnectionRouteRequest",
      "fields": [
        {
          "name": "DestinationIpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationIpRange",
          "parameterName": "destinationIpRange",
          "serialize": true
        },
        {
          "name": "VpnConnectionId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnConnectionId",
          "parameterName": "vpnConnectionId",
          "serialize": true
        }
      ],
      "typeName": "CreateVpnConnectionRouteRequest"
    },
    {
      "name": "CreateVpnConnectionRouteResponse",
      "description": "implements the service definition of CreateVpnConnectionRouteResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "CreateVpnConnectionRouteResponse"
    },
    {
      "name": "CreateVpnGatewayRequest",
      "description": "implements the service definition of CreateVpnGatewayRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "CreateVpnGatewayRequest"
    },
    {
      "name": "CreateVpnGatewayResponse",
      "description": "implements the service definition of CreateVpnGatewayResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "VpnGateway",
          "type": "VpnGateway",
          "nativeType": "VpnGateway",
          "fieldName": "VpnGateway",
          "parameterName": "vpnGateway",
          "serialize": true
        }
      ],
      "typeName": "CreateVpnGatewayResponse"
    },
    {
      "name": "DeleteApiKeyRequest",
      "description": "implements the service definition of DeleteApiKeyRequest",
      "fields": [
        {
          "name": "ApiKeyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ApiKeyId",
          "parameterName": "apiKeyId",
          "serialize": true
        }
      ],
      "typeName": "DeleteApiKeyRequest"
    },
    {
      "name": "DeleteApiKeyResponse",
      "description": "implements the service definition of DeleteApiKeyResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteApiKeyResponse"
    },
    {
      "name": "DeleteClientEndpointRequest",
      "description": "implements the service definition of DeleteClientEndpointRequest",
      "fields": [
        {
          "name": "ClientEndpointId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientEndpointId",
          "parameterName": "clientEndpointId",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        }
      ],
      "typeName": "DeleteClientEndpointRequest"
    },
    {
      "name": "DeleteClientEndpointResponse",
      "description": "implements the service definition of DeleteClientEndpointResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteClientEndpointResponse"
    },
    {
      "name": "DeleteDhcpOptionsRequest",
      "description": "implements the service definition of DeleteDhcpOptionsRequest",
      "fields": [
        {
          "name": "DhcpOptionsSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DhcpOptionsSetId",
          "parameterName": "dhcpOptionsSetId",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        }
      ],
      "typeName": "DeleteDhcpOptionsRequest"
    },
    {
      "name": "DeleteDhcpOptionsResponse",
      "description": "implements the service definition of DeleteDhcpOptionsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteDhcpOptionsResponse"
    },
    {
      "name": "DeleteDirectLinkInterfaceRequest",
      "description": "implements the service definition of DeleteDirectLinkInterfaceRequest",
      "fields": [
        {
          "name": "DirectLinkInterfaceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkInterfaceId",
          "parameterName": "directLinkInterfaceId",
          "serialize": true
        }
      ],
      "typeName": "DeleteDirectLinkInterfaceRequest"
    },
    {
      "name": "DeleteDirectLinkInterfaceResponse",
      "description": "implements the service definition of DeleteDirectLinkInterfaceResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteDirectLinkInterfaceResponse"
    },
    {
      "name": "DeleteDirectLinkRequest",
      "description": "implements the service definition of DeleteDirectLinkRequest",
      "fields": [
        {
          "name": "DirectLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkId",
          "parameterName": "directLinkId",
          "serialize": true
        }
      ],
      "typeName": "DeleteDirectLinkRequest"
    },
    {
      "name": "DeleteDirectLinkResponse",
      "description": "implements the service definition of DeleteDirectLinkResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteDirectLinkResponse"
    },
    {
      "name": "DeleteFirewallRuleInboundRequest",
      "description": "implements the service definition of DeleteFirewallRuleInboundRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetId",
          "parameterName": "firewallRulesSetId",
          "serialize": true
        },
        {
          "name": "FromPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "FromPortRange",
          "parameterName": "fromPortRange",
          "serialize": true
        },
        {
          "name": "InboundRules",
          "type": "InboundRules",
          "kind": 2,
          "nativeType": "InboundRules",
          "fieldName": "InboundRules",
          "parameterName": "inboundRules",
          "serialize": true
        },
        {
          "name": "IpProtocol",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpProtocol",
          "parameterName": "ipProtocol",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "SourceFirewallRulesSetAccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceFirewallRulesSetAccountId",
          "parameterName": "sourceFirewallRulesSetAccountId",
          "serialize": true
        },
        {
          "name": "SourceFirewallRulesSetName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SourceFirewallRulesSetName",
          "parameterName": "sourceFirewallRulesSetName",
          "serialize": true
        },
        {
          "name": "ToPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ToPortRange",
          "parameterName": "toPortRange",
          "serialize": true
        }
      ],
      "typeName": "DeleteFirewallRuleInboundRequest"
    },
    {
      "name": "DeleteFirewallRuleInboundResponse",
      "description": "implements the service definition of DeleteFirewallRuleInboundResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteFirewallRuleInboundResponse"
    },
    {
      "name": "DeleteFirewallRuleOutboundRequest",
      "description": "implements the service definition of DeleteFirewallRuleOutboundRequest",
      "fields": [
        {
          "name": "DestinationFirewallRulesSetAccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationFirewallRulesSetAccountId",
          "parameterName": "destinationFirewallRulesSetAccountId",
          "serialize": true
        },
        {
          "name": "DestinationFirewallRulesSetName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationFirewallRulesSetName",
          "parameterName": "destinationFirewallRulesSetName",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetId",
          "parameterName": "firewallRulesSetId",
          "serialize": true
        },
        {
          "name": "FromPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "FromPortRange",
          "parameterName": "fromPortRange",
          "serialize": true
        },
        {
          "name": "IpProtocol",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpProtocol",
          "parameterName": "ipProtocol",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "OutboundRules",
          "type": "OutboundRules",
          "kind": 2,
          "nativeType": "OutboundRules",
          "fieldName": "OutboundRules",
          "parameterName": "outboundRules",
          "serialize": true
        },
        {
          "name": "ToPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ToPortRange",
          "parameterName": "toPortRange",
          "serialize": true
        }
      ],
      "typeName": "DeleteFirewallRuleOutboundRequest"
    },
    {
      "name": "DeleteFirewallRuleOutboundResponse",
      "description": "implements the service definition of DeleteFirewallRuleOutboundResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteFirewallRuleOutboundResponse"
    },
    {
      "name": "DeleteFirewallRulesSetRequest",
      "description": "implements the service definition of DeleteFirewallRulesSetRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetId",
          "parameterName": "firewallRulesSetId",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        }
      ],
      "typeName": "DeleteFirewallRulesSetRequest"
    },
    {
      "name": "DeleteFirewallRulesSetResponse",
      "description": "implements the service definition of DeleteFirewallRulesSetResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteFirewallRulesSetResponse"
    },
    {
      "name": "DeleteGroupRequest",
      "description": "implements the service definition of DeleteGroupRequest",
      "fields": [
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        }
      ],
      "typeName": "DeleteGroupRequest"
    },
    {
      "name": "DeleteGroupResponse",
      "description": "implements the service definition of DeleteGroupResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteGroupResponse"
    },
    {
      "name": "DeleteKeypairRequest",
      "description": "implements the service definition of DeleteKeypairRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        }
      ],
      "typeName": "DeleteKeypairRequest"
    },
    {
      "name": "DeleteKeypairResponse",
      "description": "implements the service definition of DeleteKeypairResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteKeypairResponse"
    },
    {
      "name": "DeleteListenerRuleRequest",
      "description": "implements the service definition of DeleteListenerRuleRequest",
      "fields": [
        {
          "name": "ListenerRuleName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ListenerRuleName",
          "parameterName": "listenerRuleName",
          "serialize": true
        }
      ],
      "typeName": "DeleteListenerRuleRequest"
    },
    {
      "name": "DeleteListenerRuleResponse",
      "description": "implements the service definition of DeleteListenerRuleResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteListenerRuleResponse"
    },
    {
      "name": "DeleteLoadBalancerListenersRequest",
      "description": "implements the service definition of DeleteLoadBalancerListenersRequest",
      "fields": [
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        },
        {
          "name": "LoadBalancerPorts",
          "type": "unimplemented: type:\"array\" items:\u003cschema_or_reference:\u003cschema:\u003ctype:\"integer\" \u003e \u003e \u003e ",
          "nativeType": "Unimplemented: Type:\"Array\" Items:\u003cSchema_or_reference:\u003cSchema:\u003cType:\"Integer\" \u003e \u003e \u003e ",
          "fieldName": "LoadBalancerPorts",
          "parameterName": "loadBalancerPorts",
          "serialize": true
        }
      ],
      "typeName": "DeleteLoadBalancerListenersRequest"
    },
    {
      "name": "DeleteLoadBalancerListenersResponse",
      "description": "implements the service definition of DeleteLoadBalancerListenersResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteLoadBalancerListenersResponse"
    },
    {
      "name": "DeleteLoadBalancerPolicyRequest",
      "description": "implements the service definition of DeleteLoadBalancerPolicyRequest",
      "fields": [
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        },
        {
          "name": "PolicyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyName",
          "parameterName": "policyName",
          "serialize": true
        }
      ],
      "typeName": "DeleteLoadBalancerPolicyRequest"
    },
    {
      "name": "DeleteLoadBalancerPolicyResponse",
      "description": "implements the service definition of DeleteLoadBalancerPolicyResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteLoadBalancerPolicyResponse"
    },
    {
      "name": "DeleteLoadBalancerRequest",
      "description": "implements the service definition of DeleteLoadBalancerRequest",
      "fields": [
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        }
      ],
      "typeName": "DeleteLoadBalancerRequest"
    },
    {
      "name": "DeleteLoadBalancerResponse",
      "description": "implements the service definition of DeleteLoadBalancerResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteLoadBalancerResponse"
    },
    {
      "name": "DeleteNatServiceRequest",
      "description": "implements the service definition of DeleteNatServiceRequest",
      "fields": [
        {
          "name": "NatServiceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NatServiceId",
          "parameterName": "natServiceId",
          "serialize": true
        }
      ],
      "typeName": "DeleteNatServiceRequest"
    },
    {
      "name": "DeleteNatServiceResponse",
      "description": "implements the service definition of DeleteNatServiceResponse",
      "fields": [
        {
          "name": "NatServiceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NatServiceId",
          "parameterName": "natServiceId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteNatServiceResponse"
    },
    {
      "name": "DeleteNetInternetGatewayRequest",
      "description": "implements the service definition of DeleteNetInternetGatewayRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetInternetGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetInternetGatewayId",
          "parameterName": "netInternetGatewayId",
          "serialize": true
        }
      ],
      "typeName": "DeleteNetInternetGatewayRequest"
    },
    {
      "name": "DeleteNetInternetGatewayResponse",
      "description": "implements the service definition of DeleteNetInternetGatewayResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteNetInternetGatewayResponse"
    },
    {
      "name": "DeleteNetPeeringRequest",
      "description": "implements the service definition of DeleteNetPeeringRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetPeeringId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetPeeringId",
          "parameterName": "netPeeringId",
          "serialize": true
        }
      ],
      "typeName": "DeleteNetPeeringRequest"
    },
    {
      "name": "DeleteNetPeeringResponse",
      "description": "implements the service definition of DeleteNetPeeringResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteNetPeeringResponse"
    },
    {
      "name": "DeleteNetRequest",
      "description": "implements the service definition of DeleteNetRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        }
      ],
      "typeName": "DeleteNetRequest"
    },
    {
      "name": "DeleteNetResponse",
      "description": "implements the service definition of DeleteNetResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteNetResponse"
    },
    {
      "name": "DeleteNicRequest",
      "description": "implements the service definition of DeleteNicRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        }
      ],
      "typeName": "DeleteNicRequest"
    },
    {
      "name": "DeleteNicResponse",
      "description": "implements the service definition of DeleteNicResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteNicResponse"
    },
    {
      "name": "DeletePolicyRequest",
      "description": "implements the service definition of DeletePolicyRequest",
      "fields": [
        {
          "name": "PolicyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyId",
          "parameterName": "policyId",
          "serialize": true
        }
      ],
      "typeName": "DeletePolicyRequest"
    },
    {
      "name": "DeletePolicyResponse",
      "description": "implements the service definition of DeletePolicyResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeletePolicyResponse"
    },
    {
      "name": "DeletePublicIpRequest",
      "description": "implements the service definition of DeletePublicIpRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        },
        {
          "name": "ReservationId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ReservationId",
          "parameterName": "reservationId",
          "serialize": true
        }
      ],
      "typeName": "DeletePublicIpRequest"
    },
    {
      "name": "DeletePublicIpResponse",
      "description": "implements the service definition of DeletePublicIpResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeletePublicIpResponse"
    },
    {
      "name": "DeleteRouteRequest",
      "description": "implements the service definition of DeleteRouteRequest",
      "fields": [
        {
          "name": "DestinationIpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationIpRange",
          "parameterName": "destinationIpRange",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        }
      ],
      "typeName": "DeleteRouteRequest"
    },
    {
      "name": "DeleteRouteResponse",
      "description": "implements the service definition of DeleteRouteResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteRouteResponse"
    },
    {
      "name": "DeleteRouteTableRequest",
      "description": "implements the service definition of DeleteRouteTableRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        }
      ],
      "typeName": "DeleteRouteTableRequest"
    },
    {
      "name": "DeleteRouteTableResponse",
      "description": "implements the service definition of DeleteRouteTableResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteRouteTableResponse"
    },
    {
      "name": "DeleteServerCertificateRequest",
      "description": "implements the service definition of DeleteServerCertificateRequest",
      "fields": [
        {
          "name": "ServerCertificateName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateName",
          "parameterName": "serverCertificateName",
          "serialize": true
        }
      ],
      "typeName": "DeleteServerCertificateRequest"
    },
    {
      "name": "DeleteServerCertificateResponse",
      "description": "implements the service definition of DeleteServerCertificateResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteServerCertificateResponse"
    },
    {
      "name": "DeleteSnapshotRequest",
      "description": "implements the service definition of DeleteSnapshotRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        }
      ],
      "typeName": "DeleteSnapshotRequest"
    },
    {
      "name": "DeleteSnapshotResponse",
      "description": "implements the service definition of DeleteSnapshotResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteSnapshotResponse"
    },
    {
      "name": "DeleteSubnetRequest",
      "description": "implements the service definition of DeleteSubnetRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        }
      ],
      "typeName": "DeleteSubnetRequest"
    },
    {
      "name": "DeleteSubnetResponse",
      "description": "implements the service definition of DeleteSubnetResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteSubnetResponse"
    },
    {
      "name": "DeleteTagsRequest",
      "description": "implements the service definition of DeleteTagsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "ResourceIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "ResourceIds",
          "parameterName": "resourceIds",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "DeleteTagsRequest"
    },
    {
      "name": "DeleteTagsResponse",
      "description": "implements the service definition of DeleteTagsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteTagsResponse"
    },
    {
      "name": "DeleteUserRequest",
      "description": "implements the service definition of DeleteUserRequest",
      "fields": [
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "DeleteUserRequest"
    },
    {
      "name": "DeleteUserResponse",
      "description": "implements the service definition of DeleteUserResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteUserResponse"
    },
    {
      "name": "DeleteVmsRequest",
      "description": "implements the service definition of DeleteVmsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "DeleteVmsRequest"
    },
    {
      "name": "DeleteVmsResponse",
      "description": "implements the service definition of DeleteVmsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Vms",
          "type": "Vms",
          "kind": 2,
          "nativeType": "Vms",
          "fieldName": "Vms",
          "parameterName": "vms",
          "serialize": true
        }
      ],
      "typeName": "DeleteVmsResponse"
    },
    {
      "name": "DeleteVolumeRequest",
      "description": "implements the service definition of DeleteVolumeRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "DeleteVolumeRequest"
    },
    {
      "name": "DeleteVolumeResponse",
      "description": "implements the service definition of DeleteVolumeResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteVolumeResponse"
    },
    {
      "name": "DeleteVpcEndpointsRequest",
      "description": "implements the service definition of DeleteVpcEndpointsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetAccessIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "NetAccessIds",
          "parameterName": "netAccessIds",
          "serialize": true
        }
      ],
      "typeName": "DeleteVpcEndpointsRequest"
    },
    {
      "name": "DeleteVpcEndpointsResponse",
      "description": "implements the service definition of DeleteVpcEndpointsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteVpcEndpointsResponse"
    },
    {
      "name": "DeleteVpnConnectionRequest",
      "description": "implements the service definition of DeleteVpnConnectionRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VpnConnectionId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnConnectionId",
          "parameterName": "vpnConnectionId",
          "serialize": true
        }
      ],
      "typeName": "DeleteVpnConnectionRequest"
    },
    {
      "name": "DeleteVpnConnectionResponse",
      "description": "implements the service definition of DeleteVpnConnectionResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteVpnConnectionResponse"
    },
    {
      "name": "DeleteVpnConnectionRouteRequest",
      "description": "implements the service definition of DeleteVpnConnectionRouteRequest",
      "fields": [
        {
          "name": "DestinationIpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationIpRange",
          "parameterName": "destinationIpRange",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VpnConnectionId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnConnectionId",
          "parameterName": "vpnConnectionId",
          "serialize": true
        }
      ],
      "typeName": "DeleteVpnConnectionRouteRequest"
    },
    {
      "name": "DeleteVpnConnectionRouteResponse",
      "description": "implements the service definition of DeleteVpnConnectionRouteResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteVpnConnectionRouteResponse"
    },
    {
      "name": "DeleteVpnGatewayRequest",
      "description": "implements the service definition of DeleteVpnGatewayRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "DeleteVpnGatewayRequest"
    },
    {
      "name": "DeleteVpnGatewayResponse",
      "description": "implements the service definition of DeleteVpnGatewayResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeleteVpnGatewayResponse"
    },
    {
      "name": "DeregisterImageRequest",
      "description": "implements the service definition of DeregisterImageRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        }
      ],
      "typeName": "DeregisterImageRequest"
    },
    {
      "name": "DeregisterImageResponse",
      "description": "implements the service definition of DeregisterImageResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeregisterImageResponse"
    },
    {
      "name": "DeregisterUserInGroupRequest",
      "description": "implements the service definition of DeregisterUserInGroupRequest",
      "fields": [
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "DeregisterUserInGroupRequest"
    },
    {
      "name": "DeregisterUserInGroupResponse",
      "description": "implements the service definition of DeregisterUserInGroupResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeregisterUserInGroupResponse"
    },
    {
      "name": "DeregisterVmsInListenerRuleRequest",
      "description": "implements the service definition of DeregisterVmsInListenerRuleRequest",
      "fields": [
        {
          "name": "ListenerRuleName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ListenerRuleName",
          "parameterName": "listenerRuleName",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "DeregisterVmsInListenerRuleRequest"
    },
    {
      "name": "DeregisterVmsInListenerRuleResponse",
      "description": "implements the service definition of DeregisterVmsInListenerRuleResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "DeregisterVmsInListenerRuleResponse"
    },
    {
      "name": "DeregisterVmsInLoadBalancerRequest",
      "description": "implements the service definition of DeregisterVmsInLoadBalancerRequest",
      "fields": [
        {
          "name": "BackendVmsIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "BackendVmsIds",
          "parameterName": "backendVmsIds",
          "serialize": true
        },
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        }
      ],
      "typeName": "DeregisterVmsInLoadBalancerRequest"
    },
    {
      "name": "DeregisterVmsInLoadBalancerResponse",
      "description": "implements the service definition of DeregisterVmsInLoadBalancerResponse",
      "fields": [
        {
          "name": "BackendVmsIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "BackendVmsIds",
          "parameterName": "backendVmsIds",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "DeregisterVmsInLoadBalancerResponse"
    },
    {
      "name": "DhcpConfigurations",
      "description": "implements the service definition of DhcpConfigurations",
      "fields": [
        {
          "name": "Key",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Key",
          "parameterName": "key",
          "serialize": true
        },
        {
          "name": "Values",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "Values",
          "parameterName": "values",
          "serialize": true
        }
      ],
      "typeName": "DhcpConfigurations"
    },
    {
      "name": "DhcpOptionsSet",
      "description": "implements the service definition of DhcpOptionsSet",
      "fields": [
        {
          "name": "DhcpConfigurations",
          "type": "DhcpConfigurations",
          "kind": 2,
          "nativeType": "DhcpConfigurations",
          "fieldName": "DhcpConfigurations",
          "parameterName": "dhcpConfigurations",
          "serialize": true
        },
        {
          "name": "DhcpOptionsSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DhcpOptionsSetId",
          "parameterName": "dhcpOptionsSetId",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "DhcpOptionsSet"
    },
    {
      "name": "DhcpOptionsSets",
      "description": "implements the service definition of DhcpOptionsSets",
      "fields": [
        {
          "name": "DhcpConfigurations",
          "type": "DhcpConfigurations",
          "kind": 2,
          "nativeType": "DhcpConfigurations",
          "fieldName": "DhcpConfigurations",
          "parameterName": "dhcpConfigurations",
          "serialize": true
        },
        {
          "name": "DhcpOptionsSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DhcpOptionsSetId",
          "parameterName": "dhcpOptionsSetId",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "DhcpOptionsSets"
    },
    {
      "name": "DirectLinkInterface",
      "description": "implements the service definition of DirectLinkInterface",
      "fields": [
        {
          "name": "BgpAsn",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "BgpAsn",
          "parameterName": "bgpAsn",
          "serialize": true
        },
        {
          "name": "BgpKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "BgpKey",
          "parameterName": "bgpKey",
          "serialize": true
        },
        {
          "name": "ClientPrivateIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientPrivateIp",
          "parameterName": "clientPrivateIp",
          "serialize": true
        },
        {
          "name": "DirectLinkInterfaceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkInterfaceName",
          "parameterName": "directLinkInterfaceName",
          "serialize": true
        },
        {
          "name": "OutscalePrivateIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OutscalePrivateIp",
          "parameterName": "outscalePrivateIp",
          "serialize": true
        },
        {
          "name": "Vlan",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Vlan",
          "parameterName": "vlan",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "DirectLinkInterface"
    },
    {
      "name": "DirectLinkInterfaces",
      "description": "implements the service definition of DirectLinkInterfaces",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "BgpAsn",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "BgpAsn",
          "parameterName": "bgpAsn",
          "serialize": true
        },
        {
          "name": "BgpKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "BgpKey",
          "parameterName": "bgpKey",
          "serialize": true
        },
        {
          "name": "ClientPrivateIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientPrivateIp",
          "parameterName": "clientPrivateIp",
          "serialize": true
        },
        {
          "name": "DirectLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkId",
          "parameterName": "directLinkId",
          "serialize": true
        },
        {
          "name": "DirectLinkInterfaceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkInterfaceId",
          "parameterName": "directLinkInterfaceId",
          "serialize": true
        },
        {
          "name": "DirectLinkInterfaceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkInterfaceName",
          "parameterName": "directLinkInterfaceName",
          "serialize": true
        },
        {
          "name": "OutscalePrivateIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OutscalePrivateIp",
          "parameterName": "outscalePrivateIp",
          "serialize": true
        },
        {
          "name": "Site",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Site",
          "parameterName": "site",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "Vlan",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Vlan",
          "parameterName": "vlan",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "DirectLinkInterfaces"
    },
    {
      "name": "DirectLinks",
      "description": "implements the service definition of DirectLinks",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "Bandwidth",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Bandwidth",
          "parameterName": "bandwidth",
          "serialize": true
        },
        {
          "name": "DirectLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkId",
          "parameterName": "directLinkId",
          "serialize": true
        },
        {
          "name": "DirectLinkName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkName",
          "parameterName": "directLinkName",
          "serialize": true
        },
        {
          "name": "RegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RegionName",
          "parameterName": "regionName",
          "serialize": true
        },
        {
          "name": "Site",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Site",
          "parameterName": "site",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        }
      ],
      "typeName": "DirectLinks"
    },
    {
      "name": "Filters",
      "description": "implements the service definition of Filters",
      "fields": [
        {
          "name": "LinkMain",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "LinkMain",
          "parameterName": "linkMain",
          "serialize": true
        },
        {
          "name": "LinkRouteTableLinkIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "LinkRouteTableLinkIds",
          "parameterName": "linkRouteTableLinkIds",
          "serialize": true
        },
        {
          "name": "LinkSubnetIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "LinkSubnetIds",
          "parameterName": "linkSubnetIds",
          "serialize": true
        },
        {
          "name": "NetIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "NetIds",
          "parameterName": "netIds",
          "serialize": true
        },
        {
          "name": "RouteCreationMethods",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteCreationMethods",
          "parameterName": "routeCreationMethods",
          "serialize": true
        },
        {
          "name": "RouteDestinationIpRanges",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteDestinationIpRanges",
          "parameterName": "routeDestinationIpRanges",
          "serialize": true
        },
        {
          "name": "RouteDestinationPrefixListIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteDestinationPrefixListIds",
          "parameterName": "routeDestinationPrefixListIds",
          "serialize": true
        },
        {
          "name": "RouteGatewayIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteGatewayIds",
          "parameterName": "routeGatewayIds",
          "serialize": true
        },
        {
          "name": "RouteNatServiceIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteNatServiceIds",
          "parameterName": "routeNatServiceIds",
          "serialize": true
        },
        {
          "name": "RouteNetPeeringIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteNetPeeringIds",
          "parameterName": "routeNetPeeringIds",
          "serialize": true
        },
        {
          "name": "RouteStates",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteStates",
          "parameterName": "routeStates",
          "serialize": true
        },
        {
          "name": "RouteTableIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteTableIds",
          "parameterName": "routeTableIds",
          "serialize": true
        },
        {
          "name": "RouteVmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteVmIds",
          "parameterName": "routeVmIds",
          "serialize": true
        },
        {
          "name": "TagKeys",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "TagKeys",
          "parameterName": "tagKeys",
          "serialize": true
        },
        {
          "name": "TagValues",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "TagValues",
          "parameterName": "tagValues",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "Filters"
    },
    {
      "name": "FirewallRulesSetLogging",
      "description": "implements the service definition of FirewallRulesSetLogging",
      "fields": [
        {
          "name": "IsEnabled",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsEnabled",
          "parameterName": "isEnabled",
          "serialize": true
        },
        {
          "name": "RateLimit",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RateLimit",
          "parameterName": "rateLimit",
          "serialize": true
        },
        {
          "name": "SyslogServer",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SyslogServer",
          "parameterName": "syslogServer",
          "serialize": true
        }
      ],
      "typeName": "FirewallRulesSetLogging"
    },
    {
      "name": "FirewallRulesSets",
      "description": "implements the service definition of FirewallRulesSets",
      "fields": [
        {
          "name": "FirewallRulesSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetId",
          "parameterName": "firewallRulesSetId",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetName",
          "parameterName": "firewallRulesSetName",
          "serialize": true
        }
      ],
      "typeName": "FirewallRulesSets"
    },
    {
      "name": "FirewallRulesSetsMembers",
      "description": "implements the service definition of FirewallRulesSetsMembers",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetId",
          "parameterName": "firewallRulesSetId",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        }
      ],
      "typeName": "FirewallRulesSetsMembers"
    },
    {
      "name": "GetBillableDigestRequest",
      "description": "implements the service definition of GetBillableDigestRequest",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "FromDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "FromDate",
          "parameterName": "fromDate",
          "serialize": true
        },
        {
          "name": "InvoiceState",
          "type": "string",
          "nativeType": "string",
          "fieldName": "InvoiceState",
          "parameterName": "invoiceState",
          "serialize": true
        },
        {
          "name": "IsConsolidated",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsConsolidated",
          "parameterName": "isConsolidated",
          "serialize": true
        },
        {
          "name": "ToDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "ToDate",
          "parameterName": "toDate",
          "serialize": true
        }
      ],
      "typeName": "GetBillableDigestRequest"
    },
    {
      "name": "GetBillableDigestResponse",
      "description": "implements the service definition of GetBillableDigestResponse",
      "fields": [
        {
          "name": "Items",
          "type": "Items",
          "kind": 2,
          "nativeType": "Items",
          "fieldName": "Items",
          "parameterName": "items",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "GetBillableDigestResponse"
    },
    {
      "name": "GetRegionConfigRequest",
      "description": "implements the service definition of GetRegionConfigRequest",
      "fields": [
        {
          "name": "FromDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "FromDate",
          "parameterName": "fromDate",
          "serialize": true
        }
      ],
      "typeName": "GetRegionConfigRequest"
    },
    {
      "name": "GetRegionConfigResponse",
      "description": "implements the service definition of GetRegionConfigResponse",
      "fields": [
        {
          "name": "RegionConfig",
          "type": "RegionConfig",
          "nativeType": "RegionConfig",
          "fieldName": "RegionConfig",
          "parameterName": "regionConfig",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "GetRegionConfigResponse"
    },
    {
      "name": "Group",
      "description": "implements the service definition of Group",
      "fields": [
        {
          "name": "GroupId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupId",
          "parameterName": "groupId",
          "serialize": true
        },
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        }
      ],
      "typeName": "Group"
    },
    {
      "name": "Groups",
      "description": "implements the service definition of Groups",
      "fields": [
        {
          "name": "GroupId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupId",
          "parameterName": "groupId",
          "serialize": true
        },
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        }
      ],
      "typeName": "Groups"
    },
    {
      "name": "HealthCheck",
      "description": "implements the service definition of HealthCheck",
      "fields": [
        {
          "name": "CheckInterval",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "CheckInterval",
          "parameterName": "checkInterval",
          "serialize": true
        },
        {
          "name": "CheckedVm",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CheckedVm",
          "parameterName": "checkedVm",
          "serialize": true
        },
        {
          "name": "HealthyThreshold",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "HealthyThreshold",
          "parameterName": "healthyThreshold",
          "serialize": true
        },
        {
          "name": "Timeout",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Timeout",
          "parameterName": "timeout",
          "serialize": true
        },
        {
          "name": "UnhealthyThreshold",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "UnhealthyThreshold",
          "parameterName": "unhealthyThreshold",
          "serialize": true
        }
      ],
      "typeName": "HealthCheck"
    },
    {
      "name": "ImageExportTask",
      "description": "implements the service definition of ImageExportTask",
      "fields": [
        {
          "name": "Comment",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Comment",
          "parameterName": "comment",
          "serialize": true
        },
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "OsuExport",
          "type": "OsuExport",
          "nativeType": "OsuExport",
          "fieldName": "OsuExport",
          "parameterName": "osuExport",
          "serialize": true
        },
        {
          "name": "Progress",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Progress",
          "parameterName": "progress",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "TaskId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "TaskId",
          "parameterName": "taskId",
          "serialize": true
        }
      ],
      "typeName": "ImageExportTask"
    },
    {
      "name": "ImageExportTasks",
      "description": "implements the service definition of ImageExportTasks",
      "fields": [
        {
          "name": "Comment",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Comment",
          "parameterName": "comment",
          "serialize": true
        },
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "OsuExport",
          "type": "OsuExport",
          "nativeType": "OsuExport",
          "fieldName": "OsuExport",
          "parameterName": "osuExport",
          "serialize": true
        },
        {
          "name": "Progress",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Progress",
          "parameterName": "progress",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "TaskId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "TaskId",
          "parameterName": "taskId",
          "serialize": true
        }
      ],
      "typeName": "ImageExportTasks"
    },
    {
      "name": "Images",
      "description": "implements the service definition of Images",
      "fields": [
        {
          "name": "AccountAlias",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountAlias",
          "parameterName": "accountAlias",
          "serialize": true
        },
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "Architecture",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Architecture",
          "parameterName": "architecture",
          "serialize": true
        },
        {
          "name": "BlockDeviceMappings",
          "type": "BlockDeviceMappings",
          "kind": 2,
          "nativeType": "BlockDeviceMappings",
          "fieldName": "BlockDeviceMappings",
          "parameterName": "blockDeviceMappings",
          "serialize": true
        },
        {
          "name": "CreationDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "CreationDate",
          "parameterName": "creationDate",
          "serialize": true
        },
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "IsPublic",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsPublic",
          "parameterName": "isPublic",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        },
        {
          "name": "OsuLocation",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OsuLocation",
          "parameterName": "osuLocation",
          "serialize": true
        },
        {
          "name": "ProductCodes",
          "type": "ProductCodes",
          "kind": 2,
          "nativeType": "ProductCodes",
          "fieldName": "ProductCodes",
          "parameterName": "productCodes",
          "serialize": true
        },
        {
          "name": "RootDeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RootDeviceName",
          "parameterName": "rootDeviceName",
          "serialize": true
        },
        {
          "name": "RootDeviceType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RootDeviceType",
          "parameterName": "rootDeviceType",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "StateComment",
          "type": "StateComment",
          "nativeType": "StateComment",
          "fieldName": "StateComment",
          "parameterName": "stateComment",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "Images"
    },
    {
      "name": "ImportKeyPairRequest",
      "description": "implements the service definition of ImportKeyPairRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        },
        {
          "name": "PublicKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicKey",
          "parameterName": "publicKey",
          "serialize": true
        }
      ],
      "typeName": "ImportKeyPairRequest"
    },
    {
      "name": "ImportKeyPairResponse",
      "description": "implements the service definition of ImportKeyPairResponse",
      "fields": [
        {
          "name": "KeypairFingerprint",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairFingerprint",
          "parameterName": "keypairFingerprint",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "keypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        }
      ],
      "typeName": "ImportKeyPairResponse"
    },
    {
      "name": "ImportServerCertificateRequest",
      "description": "implements the service definition of ImportServerCertificateRequest",
      "fields": [
        {
          "name": "PrivateKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrivateKey",
          "parameterName": "privateKey",
          "serialize": true
        },
        {
          "name": "ServerCertificateBody",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateBody",
          "parameterName": "serverCertificateBody",
          "serialize": true
        },
        {
          "name": "ServerCertificateChain",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateChain",
          "parameterName": "serverCertificateChain",
          "serialize": true
        },
        {
          "name": "ServerCertificateName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateName",
          "parameterName": "serverCertificateName",
          "serialize": true
        },
        {
          "name": "ServerCertificatePath",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificatePath",
          "parameterName": "serverCertificatePath",
          "serialize": true
        }
      ],
      "typeName": "ImportServerCertificateRequest"
    },
    {
      "name": "ImportServerCertificateResponse",
      "description": "implements the service definition of ImportServerCertificateResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "ServerCertificate",
          "type": "ServerCertificate",
          "nativeType": "ServerCertificate",
          "fieldName": "ServerCertificate",
          "parameterName": "serverCertificate",
          "serialize": true
        }
      ],
      "typeName": "ImportServerCertificateResponse"
    },
    {
      "name": "ImportSnaptShotRequest",
      "description": "implements the service definition of ImportSnaptShotRequest",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "OsuLocation",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OsuLocation",
          "parameterName": "osuLocation",
          "serialize": true
        },
        {
          "name": "SnapshotSize",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "SnapshotSize",
          "parameterName": "snapshotSize",
          "serialize": true
        }
      ],
      "typeName": "ImportSnaptShotRequest"
    },
    {
      "name": "ImportSnaptShotResponse",
      "description": "implements the service definition of ImportSnaptShotResponse",
      "fields": [
        {
          "name": "AccountAlias",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountAlias",
          "parameterName": "accountAlias",
          "serialize": true
        },
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "IsEncrypted",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsEncrypted",
          "parameterName": "isEncrypted",
          "serialize": true
        },
        {
          "name": "Progress",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Progress",
          "parameterName": "progress",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        },
        {
          "name": "SnapshotState",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotState",
          "parameterName": "snapshotState",
          "serialize": true
        },
        {
          "name": "StartDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "StartDate",
          "parameterName": "startDate",
          "serialize": true
        },
        {
          "name": "VolumeSize",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "VolumeSize",
          "parameterName": "volumeSize",
          "serialize": true
        }
      ],
      "typeName": "ImportSnaptShotResponse"
    },
    {
      "name": "InboundRules",
      "description": "implements the service definition of InboundRules",
      "fields": [
        {
          "name": "FirewallRulesSetsMembers",
          "type": "FirewallRulesSetsMembers",
          "kind": 2,
          "nativeType": "FirewallRulesSetsMembers",
          "fieldName": "FirewallRulesSetsMembers",
          "parameterName": "firewallRulesSetsMembers",
          "serialize": true
        },
        {
          "name": "FromPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "FromPortRange",
          "parameterName": "fromPortRange",
          "serialize": true
        },
        {
          "name": "IpProtocol",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpProtocol",
          "parameterName": "ipProtocol",
          "serialize": true
        },
        {
          "name": "IpRanges",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "IpRanges",
          "parameterName": "ipRanges",
          "serialize": true
        },
        {
          "name": "PrefixListIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "PrefixListIds",
          "parameterName": "prefixListIds",
          "serialize": true
        },
        {
          "name": "ToPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ToPortRange",
          "parameterName": "toPortRange",
          "serialize": true
        }
      ],
      "typeName": "InboundRules"
    },
    {
      "name": "Items",
      "description": "implements the service definition of Items",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "Catalog",
          "type": "Catalog",
          "kind": 2,
          "nativeType": "Catalog",
          "fieldName": "Catalog",
          "parameterName": "catalog",
          "serialize": true
        },
        {
          "name": "ComsuptionValue",
          "type": "number",
          "format": "float",
          "nativeType": "int",
          "fieldName": "ComsuptionValue",
          "parameterName": "comsuptionValue",
          "serialize": true
        },
        {
          "name": "Entry",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Entry",
          "parameterName": "entry",
          "serialize": true
        },
        {
          "name": "FromDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "FromDate",
          "parameterName": "fromDate",
          "serialize": true
        },
        {
          "name": "PayingAccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PayingAccountId",
          "parameterName": "payingAccountId",
          "serialize": true
        },
        {
          "name": "Service",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Service",
          "parameterName": "service",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "ToDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "ToDate",
          "parameterName": "toDate",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "Items"
    },
    {
      "name": "Keypairs",
      "description": "implements the service definition of Keypairs",
      "fields": [
        {
          "name": "KeypairFingerprint",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairFingerprint",
          "parameterName": "keypairFingerprint",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        }
      ],
      "typeName": "Keypairs"
    },
    {
      "name": "LinkDhcpOptionsRequest",
      "description": "implements the service definition of LinkDhcpOptionsRequest",
      "fields": [
        {
          "name": "DhcpOptionsSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DhcpOptionsSetId",
          "parameterName": "dhcpOptionsSetId",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        }
      ],
      "typeName": "LinkDhcpOptionsRequest"
    },
    {
      "name": "LinkDhcpOptionsResponse",
      "description": "implements the service definition of LinkDhcpOptionsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "LinkDhcpOptionsResponse"
    },
    {
      "name": "LinkLoadBalancerServerCertificateRequest",
      "description": "implements the service definition of LinkLoadBalancerServerCertificateRequest",
      "fields": [
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        },
        {
          "name": "LoadBalancerPort",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "LoadBalancerPort",
          "parameterName": "loadBalancerPort",
          "serialize": true
        },
        {
          "name": "ServerCertificateId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateId",
          "parameterName": "serverCertificateId",
          "serialize": true
        }
      ],
      "typeName": "LinkLoadBalancerServerCertificateRequest"
    },
    {
      "name": "LinkLoadBalancerServerCertificateResponse",
      "description": "implements the service definition of LinkLoadBalancerServerCertificateResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "LinkLoadBalancerServerCertificateResponse"
    },
    {
      "name": "LinkNetInternetGatewayRequest",
      "description": "implements the service definition of LinkNetInternetGatewayRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "NetInternetGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetInternetGatewayId",
          "parameterName": "netInternetGatewayId",
          "serialize": true
        }
      ],
      "typeName": "LinkNetInternetGatewayRequest"
    },
    {
      "name": "LinkNetInternetGatewayResponse",
      "description": "implements the service definition of LinkNetInternetGatewayResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "LinkNetInternetGatewayResponse"
    },
    {
      "name": "LinkNicRequest",
      "description": "implements the service definition of LinkNicRequest",
      "fields": [
        {
          "name": "DeviceNumber",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "DeviceNumber",
          "parameterName": "deviceNumber",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "LinkNicRequest"
    },
    {
      "name": "LinkNicResponse",
      "description": "implements the service definition of LinkNicResponse",
      "fields": [
        {
          "name": "NicLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicLinkId",
          "parameterName": "nicLinkId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "LinkNicResponse"
    },
    {
      "name": "LinkPolicyRequest",
      "description": "implements the service definition of LinkPolicyRequest",
      "fields": [
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        },
        {
          "name": "PolicyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyId",
          "parameterName": "policyId",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "LinkPolicyRequest"
    },
    {
      "name": "LinkPolicyResponse",
      "description": "implements the service definition of LinkPolicyResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "LinkPolicyResponse"
    },
    {
      "name": "LinkPrivateIpRequest",
      "description": "implements the service definition of LinkPrivateIpRequest",
      "fields": [
        {
          "name": "AllowRelink",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "AllowRelink",
          "parameterName": "allowRelink",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "PrivateIps",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "PrivateIps",
          "parameterName": "privateIps",
          "serialize": true
        },
        {
          "name": "SecondaryPrivateIpCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "SecondaryPrivateIpCount",
          "parameterName": "secondaryPrivateIpCount",
          "serialize": true
        }
      ],
      "typeName": "LinkPrivateIpRequest"
    },
    {
      "name": "LinkPrivateIpResponse",
      "description": "implements the service definition of LinkPrivateIpResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "LinkPrivateIpResponse"
    },
    {
      "name": "LinkPublicIpRequest",
      "description": "implements the service definition of LinkPublicIpRequest",
      "fields": [
        {
          "name": "AllowRelink",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "AllowRelink",
          "parameterName": "allowRelink",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "PrivateIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrivateIp",
          "parameterName": "privateIp",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        },
        {
          "name": "ReservationId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ReservationId",
          "parameterName": "reservationId",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "LinkPublicIpRequest"
    },
    {
      "name": "LinkPublicIpResponse",
      "description": "implements the service definition of LinkPublicIpResponse",
      "fields": [
        {
          "name": "LinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LinkId",
          "parameterName": "linkId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "LinkPublicIpResponse"
    },
    {
      "name": "LinkRouteTableRequest",
      "description": "implements the service definition of LinkRouteTableRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        }
      ],
      "typeName": "LinkRouteTableRequest"
    },
    {
      "name": "LinkRouteTableResponse",
      "description": "implements the service definition of LinkRouteTableResponse",
      "fields": [
        {
          "name": "LinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LinkId",
          "parameterName": "linkId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "LinkRouteTableResponse"
    },
    {
      "name": "LinkVolumeRequest",
      "description": "implements the service definition of LinkVolumeRequest",
      "fields": [
        {
          "name": "DeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DeviceName",
          "parameterName": "deviceName",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "LinkVolumeRequest"
    },
    {
      "name": "LinkVolumeResponse",
      "description": "implements the service definition of LinkVolumeResponse",
      "fields": [
        {
          "name": "DeleteOnVmDeletion",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DeleteOnVmDeletion",
          "parameterName": "deleteOnVmDeletion",
          "serialize": true
        },
        {
          "name": "DeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DeviceName",
          "parameterName": "deviceName",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "LinkVolumeResponse"
    },
    {
      "name": "LinkVpnGatewayRequest",
      "description": "implements the service definition of LinkVpnGatewayRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "LinkVpnGatewayRequest"
    },
    {
      "name": "LinkVpnGatewayResponse",
      "description": "implements the service definition of LinkVpnGatewayResponse",
      "fields": [
        {
          "name": "NetToVpnGatewayLink",
          "type": "NetToVpnGatewayLink",
          "nativeType": "NetToVpnGatewayLink",
          "fieldName": "NetToVpnGatewayLink",
          "parameterName": "netToVpnGatewayLink",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "LinkVpnGatewayResponse"
    },
    {
      "name": "LinkedVolumes",
      "description": "implements the service definition of LinkedVolumes",
      "fields": [
        {
          "name": "DeleteOnVmDeletion",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DeleteOnVmDeletion",
          "parameterName": "deleteOnVmDeletion",
          "serialize": true
        },
        {
          "name": "DeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DeviceName",
          "parameterName": "deviceName",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "LinkedVolumes"
    },
    {
      "name": "Links",
      "description": "implements the service definition of Links",
      "fields": [
        {
          "name": "Main",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "Main",
          "parameterName": "main",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        },
        {
          "name": "RouteTableToSubnetLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableToSubnetLinkId",
          "parameterName": "routeTableToSubnetLinkId",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        }
      ],
      "typeName": "Links"
    },
    {
      "name": "ListGroupsForUserRequest",
      "description": "implements the service definition of ListGroupsForUserRequest",
      "fields": [
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "ListGroupsForUserRequest"
    },
    {
      "name": "ListGroupsForUserResponse",
      "description": "implements the service definition of ListGroupsForUserResponse",
      "fields": [
        {
          "name": "Groups",
          "type": "Groups",
          "kind": 2,
          "nativeType": "Groups",
          "fieldName": "Groups",
          "parameterName": "groups",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ListGroupsForUserResponse"
    },
    {
      "name": "Listener",
      "description": "implements the service definition of Listener",
      "fields": [
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        },
        {
          "name": "LoadBalancerPort",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "LoadBalancerPort",
          "parameterName": "loadBalancerPort",
          "serialize": true
        }
      ],
      "typeName": "Listener"
    },
    {
      "name": "ListenerRule",
      "description": "implements the service definition of ListenerRule",
      "fields": [
        {
          "name": "Action",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Action",
          "parameterName": "action",
          "serialize": true
        },
        {
          "name": "HostNamePattern",
          "type": "string",
          "nativeType": "string",
          "fieldName": "HostNamePattern",
          "parameterName": "hostNamePattern",
          "serialize": true
        },
        {
          "name": "ListenerRuleId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ListenerRuleId",
          "parameterName": "listenerRuleId",
          "serialize": true
        },
        {
          "name": "ListenerRuleName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ListenerRuleName",
          "parameterName": "listenerRuleName",
          "serialize": true
        },
        {
          "name": "PathPattern",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PathPattern",
          "parameterName": "pathPattern",
          "serialize": true
        },
        {
          "name": "Priority",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Priority",
          "parameterName": "priority",
          "serialize": true
        }
      ],
      "typeName": "ListenerRule"
    },
    {
      "name": "ListenerRules",
      "description": "implements the service definition of ListenerRules",
      "fields": [
        {
          "name": "ListenerId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ListenerId",
          "parameterName": "listenerId",
          "serialize": true
        },
        {
          "name": "ListenerRule",
          "type": "ListenerRule",
          "nativeType": "ListenerRule",
          "fieldName": "ListenerRule",
          "parameterName": "listenerRule",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "ListenerRules"
    },
    {
      "name": "Listeners",
      "description": "implements the service definition of Listeners",
      "fields": [
        {
          "name": "BackendPort",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "BackendPort",
          "parameterName": "backendPort",
          "serialize": true
        },
        {
          "name": "BackendProtocol",
          "type": "string",
          "nativeType": "string",
          "fieldName": "BackendProtocol",
          "parameterName": "backendProtocol",
          "serialize": true
        },
        {
          "name": "LoadBalancerPort",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "LoadBalancerPort",
          "parameterName": "loadBalancerPort",
          "serialize": true
        },
        {
          "name": "LoadBalancerProtocol",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerProtocol",
          "parameterName": "loadBalancerProtocol",
          "serialize": true
        },
        {
          "name": "ServerCertificateId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateId",
          "parameterName": "serverCertificateId",
          "serialize": true
        }
      ],
      "typeName": "Listeners"
    },
    {
      "name": "LoadBalancerStickyCookiePolicies",
      "description": "implements the service definition of LoadBalancerStickyCookiePolicies",
      "fields": [
        {
          "name": "PolicyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyName",
          "parameterName": "policyName",
          "serialize": true
        }
      ],
      "typeName": "LoadBalancerStickyCookiePolicies"
    },
    {
      "name": "LoadBalancers",
      "description": "implements the service definition of LoadBalancers",
      "fields": [
        {
          "name": "ApplicationStickyCookiePolicies",
          "type": "ApplicationStickyCookiePolicies",
          "kind": 2,
          "nativeType": "ApplicationStickyCookiePolicies",
          "fieldName": "ApplicationStickyCookiePolicies",
          "parameterName": "applicationStickyCookiePolicies",
          "serialize": true
        },
        {
          "name": "BackendVmsIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "BackendVmsIds",
          "parameterName": "backendVmsIds",
          "serialize": true
        },
        {
          "name": "DnsName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DnsName",
          "parameterName": "dnsName",
          "serialize": true
        },
        {
          "name": "FirewallRulesSets",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "FirewallRulesSets",
          "parameterName": "firewallRulesSets",
          "serialize": true
        },
        {
          "name": "HealthCheck",
          "type": "HealthCheck",
          "nativeType": "HealthCheck",
          "fieldName": "HealthCheck",
          "parameterName": "healthCheck",
          "serialize": true
        },
        {
          "name": "Listeners",
          "type": "Listeners",
          "kind": 2,
          "nativeType": "Listeners",
          "fieldName": "Listeners",
          "parameterName": "listeners",
          "serialize": true
        },
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        },
        {
          "name": "LoadBalancerStickyCookiePolicies",
          "type": "LoadBalancerStickyCookiePolicies",
          "kind": 2,
          "nativeType": "LoadBalancerStickyCookiePolicies",
          "fieldName": "LoadBalancerStickyCookiePolicies",
          "parameterName": "loadBalancerStickyCookiePolicies",
          "serialize": true
        },
        {
          "name": "LoadBalancerType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerType",
          "parameterName": "loadBalancerType",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "SourceFirewallRulesSet",
          "type": "SourceFirewallRulesSet",
          "nativeType": "SourceFirewallRulesSet",
          "fieldName": "SourceFirewallRulesSet",
          "parameterName": "sourceFirewallRulesSet",
          "serialize": true
        },
        {
          "name": "SubRegionNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "SubRegionNames",
          "parameterName": "subRegionNames",
          "serialize": true
        },
        {
          "name": "Subnets",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "Subnets",
          "parameterName": "subnets",
          "serialize": true
        }
      ],
      "typeName": "LoadBalancers"
    },
    {
      "name": "Logs",
      "description": "implements the service definition of Logs",
      "fields": [
        {
          "name": "CallDuration",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "CallDuration",
          "parameterName": "callDuration",
          "serialize": true
        },
        {
          "name": "QueryAccessKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QueryAccessKey",
          "parameterName": "queryAccessKey",
          "serialize": true
        },
        {
          "name": "QueryApiName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QueryApiName",
          "parameterName": "queryApiName",
          "serialize": true
        },
        {
          "name": "QueryApiVersion",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QueryApiVersion",
          "parameterName": "queryApiVersion",
          "serialize": true
        },
        {
          "name": "QueryCallName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QueryCallName",
          "parameterName": "queryCallName",
          "serialize": true
        },
        {
          "name": "QueryDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "QueryDate",
          "parameterName": "queryDate",
          "serialize": true
        },
        {
          "name": "QueryIpAddress",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QueryIpAddress",
          "parameterName": "queryIpAddress",
          "serialize": true
        },
        {
          "name": "QueryRaw",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QueryRaw",
          "parameterName": "queryRaw",
          "serialize": true
        },
        {
          "name": "QuerySize",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "QuerySize",
          "parameterName": "querySize",
          "serialize": true
        },
        {
          "name": "QueryUserAgent",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QueryUserAgent",
          "parameterName": "queryUserAgent",
          "serialize": true
        },
        {
          "name": "ResponseId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ResponseId",
          "parameterName": "responseId",
          "serialize": true
        },
        {
          "name": "ResponseSize",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ResponseSize",
          "parameterName": "responseSize",
          "serialize": true
        },
        {
          "name": "ResponseStatusCode",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ResponseStatusCode",
          "parameterName": "responseStatusCode",
          "serialize": true
        }
      ],
      "typeName": "Logs"
    },
    {
      "name": "MaintenanceEvents",
      "description": "implements the service definition of MaintenanceEvents",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "NotAfter",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "NotAfter",
          "parameterName": "notAfter",
          "serialize": true
        },
        {
          "name": "NotBefore",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "NotBefore",
          "parameterName": "notBefore",
          "serialize": true
        },
        {
          "name": "Reason",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Reason",
          "parameterName": "reason",
          "serialize": true
        }
      ],
      "typeName": "MaintenanceEvents"
    },
    {
      "name": "NatService",
      "description": "implements the service definition of NatService",
      "fields": [
        {
          "name": "NatServiceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NatServiceId",
          "parameterName": "natServiceId",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "PublicIps",
          "type": "PublicIps",
          "kind": 2,
          "nativeType": "PublicIps",
          "fieldName": "PublicIps",
          "parameterName": "publicIps",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        }
      ],
      "typeName": "NatService"
    },
    {
      "name": "NatServices",
      "description": "implements the service definition of NatServices",
      "fields": [
        {
          "name": "NatServiceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NatServiceId",
          "parameterName": "natServiceId",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "PublicIps",
          "type": "PublicIps",
          "kind": 2,
          "nativeType": "PublicIps",
          "fieldName": "PublicIps",
          "parameterName": "publicIps",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        }
      ],
      "typeName": "NatServices"
    },
    {
      "name": "Net",
      "description": "implements the service definition of Net",
      "fields": [
        {
          "name": "DhcpOptionsSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DhcpOptionsSetId",
          "parameterName": "dhcpOptionsSetId",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Tenancy",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Tenancy",
          "parameterName": "tenancy",
          "serialize": true
        }
      ],
      "typeName": "Net"
    },
    {
      "name": "NetAccess",
      "description": "implements the service definition of NetAccess",
      "fields": [
        {
          "name": "NetAccessId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetAccessId",
          "parameterName": "netAccessId",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "PrefixListName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrefixListName",
          "parameterName": "prefixListName",
          "serialize": true
        },
        {
          "name": "RouteTableIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteTableIds",
          "parameterName": "routeTableIds",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        }
      ],
      "typeName": "NetAccess"
    },
    {
      "name": "NetAccesses",
      "description": "implements the service definition of NetAccesses",
      "fields": [
        {
          "name": "NetAccessId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetAccessId",
          "parameterName": "netAccessId",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "PrefixListName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrefixListName",
          "parameterName": "prefixListName",
          "serialize": true
        },
        {
          "name": "RouteTableIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RouteTableIds",
          "parameterName": "routeTableIds",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        }
      ],
      "typeName": "NetAccesses"
    },
    {
      "name": "NetInternetGateway",
      "description": "implements the service definition of NetInternetGateway",
      "fields": [
        {
          "name": "NetInternetGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetInternetGatewayId",
          "parameterName": "netInternetGatewayId",
          "serialize": true
        },
        {
          "name": "NetToNetInternetGatewayLinks",
          "type": "NetToNetInternetGatewayLinks",
          "kind": 2,
          "nativeType": "NetToNetInternetGatewayLinks",
          "fieldName": "NetToNetInternetGatewayLinks",
          "parameterName": "netToNetInternetGatewayLinks",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "NetInternetGateway"
    },
    {
      "name": "NetInternetGateways",
      "description": "implements the service definition of NetInternetGateways",
      "fields": [
        {
          "name": "NetInternetGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetInternetGatewayId",
          "parameterName": "netInternetGatewayId",
          "serialize": true
        },
        {
          "name": "NetToNetInternetGatewayLinks",
          "type": "NetToNetInternetGatewayLinks",
          "kind": 2,
          "nativeType": "NetToNetInternetGatewayLinks",
          "fieldName": "NetToNetInternetGatewayLinks",
          "parameterName": "netToNetInternetGatewayLinks",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "NetInternetGateways"
    },
    {
      "name": "NetPeering",
      "description": "implements the service definition of NetPeering",
      "fields": [
        {
          "name": "AccepterNet",
          "type": "AccepterNet",
          "nativeType": "AccepterNet",
          "fieldName": "AccepterNet",
          "parameterName": "accepterNet",
          "serialize": true
        },
        {
          "name": "NetPeeringId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetPeeringId",
          "parameterName": "netPeeringId",
          "serialize": true
        },
        {
          "name": "SourceNet",
          "type": "SourceNet",
          "nativeType": "SourceNet",
          "fieldName": "SourceNet",
          "parameterName": "sourceNet",
          "serialize": true
        },
        {
          "name": "State",
          "type": "State",
          "nativeType": "State",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "NetPeering"
    },
    {
      "name": "NetPeerings",
      "description": "implements the service definition of NetPeerings",
      "fields": [
        {
          "name": "AccepterNet",
          "type": "AccepterNet",
          "nativeType": "AccepterNet",
          "fieldName": "AccepterNet",
          "parameterName": "accepterNet",
          "serialize": true
        },
        {
          "name": "NetPeeringId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetPeeringId",
          "parameterName": "netPeeringId",
          "serialize": true
        },
        {
          "name": "SourceNet",
          "type": "SourceNet",
          "nativeType": "SourceNet",
          "fieldName": "SourceNet",
          "parameterName": "sourceNet",
          "serialize": true
        },
        {
          "name": "State",
          "type": "State",
          "nativeType": "State",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "NetPeerings"
    },
    {
      "name": "NetToNetInternetGatewayLinks",
      "description": "implements the service definition of NetToNetInternetGatewayLinks",
      "fields": [
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        }
      ],
      "typeName": "NetToNetInternetGatewayLinks"
    },
    {
      "name": "NetToVpnGatewayLink",
      "description": "implements the service definition of NetToVpnGatewayLink",
      "fields": [
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        }
      ],
      "typeName": "NetToVpnGatewayLink"
    },
    {
      "name": "NetToVpnGatewayLinks",
      "description": "implements the service definition of NetToVpnGatewayLinks",
      "fields": [
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        }
      ],
      "typeName": "NetToVpnGatewayLinks"
    },
    {
      "name": "Nets",
      "description": "implements the service definition of Nets",
      "fields": [
        {
          "name": "DhcpOptionsSetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DhcpOptionsSetId",
          "parameterName": "dhcpOptionsSetId",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Tenancy",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Tenancy",
          "parameterName": "tenancy",
          "serialize": true
        }
      ],
      "typeName": "Nets"
    },
    {
      "name": "Nic",
      "description": "implements the service definition of Nic",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "FirewallRulesSets",
          "type": "FirewallRulesSets",
          "kind": 2,
          "nativeType": "FirewallRulesSets",
          "fieldName": "FirewallRulesSets",
          "parameterName": "firewallRulesSets",
          "serialize": true
        },
        {
          "name": "IsSourceDestChecked",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsSourceDestChecked",
          "parameterName": "isSourceDestChecked",
          "serialize": true
        },
        {
          "name": "MacAddress",
          "type": "string",
          "nativeType": "string",
          "fieldName": "MacAddress",
          "parameterName": "macAddress",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "NicLink",
          "type": "NicLink",
          "nativeType": "NicLink",
          "fieldName": "NicLink",
          "parameterName": "nicLink",
          "serialize": true
        },
        {
          "name": "PrivateDnsName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrivateDnsName",
          "parameterName": "privateDnsName",
          "serialize": true
        },
        {
          "name": "PrivateIps",
          "type": "PrivateIps",
          "kind": 2,
          "nativeType": "PrivateIps",
          "fieldName": "PrivateIps",
          "parameterName": "privateIps",
          "serialize": true
        },
        {
          "name": "PublicIpToNicLink",
          "type": "PublicIpToNicLink",
          "nativeType": "PublicIpToNicLink",
          "fieldName": "PublicIpToNicLink",
          "parameterName": "publicIpToNicLink",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        },
        {
          "name": "SubregionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubregionName",
          "parameterName": "subregionName",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "Nic"
    },
    {
      "name": "NicLink",
      "description": "implements the service definition of NicLink",
      "fields": [
        {
          "name": "DeleteOnVmDeletion",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DeleteOnVmDeletion",
          "parameterName": "deleteOnVmDeletion",
          "serialize": true
        },
        {
          "name": "NicLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicLinkId",
          "parameterName": "nicLinkId",
          "serialize": true
        }
      ],
      "typeName": "NicLink"
    },
    {
      "name": "Nics",
      "description": "implements the service definition of Nics",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "FirewallRulesSets",
          "type": "FirewallRulesSets",
          "kind": 2,
          "nativeType": "FirewallRulesSets",
          "fieldName": "FirewallRulesSets",
          "parameterName": "firewallRulesSets",
          "serialize": true
        },
        {
          "name": "IsSourceDestChecked",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsSourceDestChecked",
          "parameterName": "isSourceDestChecked",
          "serialize": true
        },
        {
          "name": "MacAddress",
          "type": "string",
          "nativeType": "string",
          "fieldName": "MacAddress",
          "parameterName": "macAddress",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "NicLink",
          "type": "NicLink",
          "nativeType": "NicLink",
          "fieldName": "NicLink",
          "parameterName": "nicLink",
          "serialize": true
        },
        {
          "name": "PrivateDnsName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrivateDnsName",
          "parameterName": "privateDnsName",
          "serialize": true
        },
        {
          "name": "PrivateIps",
          "type": "PrivateIps",
          "kind": 2,
          "nativeType": "PrivateIps",
          "fieldName": "PrivateIps",
          "parameterName": "privateIps",
          "serialize": true
        },
        {
          "name": "PublicIpToNicLink",
          "type": "PublicIpToNicLink",
          "nativeType": "PublicIpToNicLink",
          "fieldName": "PublicIpToNicLink",
          "parameterName": "publicIpToNicLink",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        }
      ],
      "typeName": "Nics"
    },
    {
      "name": "OsuApiKey",
      "description": "implements the service definition of OsuApiKey",
      "fields": [
        {
          "name": "ApiKeyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ApiKeyId",
          "parameterName": "apiKeyId",
          "serialize": true
        },
        {
          "name": "SecretKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SecretKey",
          "parameterName": "secretKey",
          "serialize": true
        }
      ],
      "typeName": "OsuApiKey"
    },
    {
      "name": "OsuExport",
      "description": "implements the service definition of OsuExport",
      "fields": [
        {
          "name": "DiskImageFormat",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DiskImageFormat",
          "parameterName": "diskImageFormat",
          "serialize": true
        },
        {
          "name": "OsuApiKey",
          "type": "OsuApiKey",
          "nativeType": "OsuApiKey",
          "fieldName": "OsuApiKey",
          "parameterName": "osuApiKey",
          "serialize": true
        },
        {
          "name": "OsuBucket",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OsuBucket",
          "parameterName": "osuBucket",
          "serialize": true
        },
        {
          "name": "OsuManifestUrl",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OsuManifestUrl",
          "parameterName": "osuManifestUrl",
          "serialize": true
        },
        {
          "name": "OsuPrefix",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OsuPrefix",
          "parameterName": "osuPrefix",
          "serialize": true
        }
      ],
      "typeName": "OsuExport"
    },
    {
      "name": "OutboundRules",
      "description": "implements the service definition of OutboundRules",
      "fields": [
        {
          "name": "FirewallRulesSetsMembers",
          "type": "FirewallRulesSetsMembers",
          "kind": 2,
          "nativeType": "FirewallRulesSetsMembers",
          "fieldName": "FirewallRulesSetsMembers",
          "parameterName": "firewallRulesSetsMembers",
          "serialize": true
        },
        {
          "name": "FromPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "FromPortRange",
          "parameterName": "fromPortRange",
          "serialize": true
        },
        {
          "name": "IpProtocol",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpProtocol",
          "parameterName": "ipProtocol",
          "serialize": true
        },
        {
          "name": "IpRanges",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "IpRanges",
          "parameterName": "ipRanges",
          "serialize": true
        },
        {
          "name": "PrefixListIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "PrefixListIds",
          "parameterName": "prefixListIds",
          "serialize": true
        },
        {
          "name": "ToPortRange",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ToPortRange",
          "parameterName": "toPortRange",
          "serialize": true
        }
      ],
      "typeName": "OutboundRules"
    },
    {
      "name": "Permission",
      "description": "implements the service definition of Permission",
      "fields": [
        {
          "name": "Additions",
          "type": "Additions",
          "kind": 2,
          "nativeType": "Additions",
          "fieldName": "Additions",
          "parameterName": "additions",
          "serialize": true
        },
        {
          "name": "Removals",
          "type": "Removals",
          "kind": 2,
          "nativeType": "Removals",
          "fieldName": "Removals",
          "parameterName": "removals",
          "serialize": true
        }
      ],
      "typeName": "Permission"
    },
    {
      "name": "Permissions",
      "description": "implements the service definition of Permissions",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "GlobalPermission",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GlobalPermission",
          "parameterName": "globalPermission",
          "serialize": true
        }
      ],
      "typeName": "Permissions"
    },
    {
      "name": "PermissionsToCreateVolumes",
      "description": "implements the service definition of PermissionsToCreateVolumes",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "GlobalPermission",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GlobalPermission",
          "parameterName": "globalPermission",
          "serialize": true
        }
      ],
      "typeName": "PermissionsToCreateVolumes"
    },
    {
      "name": "Placement",
      "description": "implements the service definition of Placement",
      "fields": [
        {
          "name": "Affinity",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Affinity",
          "parameterName": "affinity",
          "serialize": true
        },
        {
          "name": "DedicatedHostId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DedicatedHostId",
          "parameterName": "dedicatedHostId",
          "serialize": true
        },
        {
          "name": "PlacementName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PlacementName",
          "parameterName": "placementName",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "Tenancy",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Tenancy",
          "parameterName": "tenancy",
          "serialize": true
        }
      ],
      "typeName": "Placement"
    },
    {
      "name": "Policies",
      "description": "implements the service definition of Policies",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "IsLinkable",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsLinkable",
          "parameterName": "isLinkable",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        },
        {
          "name": "PolicyDefaultVersionId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyDefaultVersionId",
          "parameterName": "policyDefaultVersionId",
          "serialize": true
        },
        {
          "name": "PolicyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyId",
          "parameterName": "policyId",
          "serialize": true
        },
        {
          "name": "PolicyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyName",
          "parameterName": "policyName",
          "serialize": true
        },
        {
          "name": "ResourcesCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ResourcesCount",
          "parameterName": "resourcesCount",
          "serialize": true
        }
      ],
      "typeName": "Policies"
    },
    {
      "name": "Policy",
      "description": "implements the service definition of Policy",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "IsLinkable",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsLinkable",
          "parameterName": "isLinkable",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        },
        {
          "name": "PolicyDefaultVersionId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyDefaultVersionId",
          "parameterName": "policyDefaultVersionId",
          "serialize": true
        },
        {
          "name": "PolicyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyId",
          "parameterName": "policyId",
          "serialize": true
        },
        {
          "name": "PolicyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyName",
          "parameterName": "policyName",
          "serialize": true
        },
        {
          "name": "ResourcesCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "ResourcesCount",
          "parameterName": "resourcesCount",
          "serialize": true
        }
      ],
      "typeName": "Policy"
    },
    {
      "name": "PrefixLists",
      "description": "implements the service definition of PrefixLists",
      "fields": [
        {
          "name": "IpRanges",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "IpRanges",
          "parameterName": "ipRanges",
          "serialize": true
        },
        {
          "name": "PrefixListId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrefixListId",
          "parameterName": "prefixListId",
          "serialize": true
        },
        {
          "name": "PrefixListName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrefixListName",
          "parameterName": "prefixListName",
          "serialize": true
        }
      ],
      "typeName": "PrefixLists"
    },
    {
      "name": "PricingDetails",
      "description": "implements the service definition of PricingDetails",
      "fields": [
        {
          "name": "Count",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Count",
          "parameterName": "count",
          "serialize": true
        }
      ],
      "typeName": "PricingDetails"
    },
    {
      "name": "PrivateIps",
      "description": "implements the service definition of PrivateIps",
      "fields": [
        {
          "name": "IsPrimary",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsPrimary",
          "parameterName": "isPrimary",
          "serialize": true
        },
        {
          "name": "PrivateDnsName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrivateDnsName",
          "parameterName": "privateDnsName",
          "serialize": true
        },
        {
          "name": "PrivateIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrivateIp",
          "parameterName": "privateIp",
          "serialize": true
        },
        {
          "name": "PublicIpToNicLink",
          "type": "PublicIpToNicLink",
          "nativeType": "PublicIpToNicLink",
          "fieldName": "PublicIpToNicLink",
          "parameterName": "publicIpToNicLink",
          "serialize": true
        }
      ],
      "typeName": "PrivateIps"
    },
    {
      "name": "ProductCodes",
      "description": "implements the service definition of ProductCodes",
      "fields": [
        {
          "name": "ProductCode",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ProductCode",
          "parameterName": "productCode",
          "serialize": true
        },
        {
          "name": "ProductType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ProductType",
          "parameterName": "productType",
          "serialize": true
        }
      ],
      "typeName": "ProductCodes"
    },
    {
      "name": "ProductTypes",
      "description": "implements the service definition of ProductTypes",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "ProductTypeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ProductTypeId",
          "parameterName": "productTypeId",
          "serialize": true
        },
        {
          "name": "Vendor",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Vendor",
          "parameterName": "vendor",
          "serialize": true
        }
      ],
      "typeName": "ProductTypes"
    },
    {
      "name": "PublicIpToNicLink",
      "description": "implements the service definition of PublicIpToNicLink",
      "fields": [
        {
          "name": "PublicDnsName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicDnsName",
          "parameterName": "publicDnsName",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        },
        {
          "name": "PublicIpAccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIpAccountId",
          "parameterName": "publicIpAccountId",
          "serialize": true
        }
      ],
      "typeName": "PublicIpToNicLink"
    },
    {
      "name": "PublicIps",
      "description": "implements the service definition of PublicIps",
      "fields": [
        {
          "name": "LinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LinkId",
          "parameterName": "linkId",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        }
      ],
      "typeName": "PublicIps"
    },
    {
      "name": "PurchaseReservedVmsOfferRequest",
      "description": "implements the service definition of PurchaseReservedVmsOfferRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "ReservedVmsOfferId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ReservedVmsOfferId",
          "parameterName": "reservedVmsOfferId",
          "serialize": true
        },
        {
          "name": "VmCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "VmCount",
          "parameterName": "vmCount",
          "serialize": true
        }
      ],
      "typeName": "PurchaseReservedVmsOfferRequest"
    },
    {
      "name": "PurchaseReservedVmsOfferResponse",
      "description": "implements the service definition of PurchaseReservedVmsOfferResponse",
      "fields": [
        {
          "name": "ReservedVmsId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ReservedVmsId",
          "parameterName": "reservedVmsId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "PurchaseReservedVmsOfferResponse"
    },
    {
      "name": "QuotaTypes",
      "description": "implements the service definition of QuotaTypes",
      "fields": [
        {
          "name": "QuotaType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QuotaType",
          "parameterName": "quotaType",
          "serialize": true
        },
        {
          "name": "Quotas",
          "type": "Quotas",
          "kind": 2,
          "nativeType": "Quotas",
          "fieldName": "Quotas",
          "parameterName": "quotas",
          "serialize": true
        }
      ],
      "typeName": "QuotaTypes"
    },
    {
      "name": "Quotas",
      "description": "implements the service definition of Quotas",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "MaxValue",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxValue",
          "parameterName": "maxValue",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        },
        {
          "name": "QuotaCollection",
          "type": "string",
          "nativeType": "string",
          "fieldName": "QuotaCollection",
          "parameterName": "quotaCollection",
          "serialize": true
        },
        {
          "name": "ShortDescription",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ShortDescription",
          "parameterName": "shortDescription",
          "serialize": true
        },
        {
          "name": "UsedValue",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "UsedValue",
          "parameterName": "usedValue",
          "serialize": true
        }
      ],
      "typeName": "Quotas"
    },
    {
      "name": "ReadAccountConsumptionRequest",
      "description": "implements the service definition of ReadAccountConsumptionRequest",
      "fields": [
        {
          "name": "FromDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "FromDate",
          "parameterName": "fromDate",
          "serialize": true
        },
        {
          "name": "ToDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "ToDate",
          "parameterName": "toDate",
          "serialize": true
        }
      ],
      "typeName": "ReadAccountConsumptionRequest"
    },
    {
      "name": "ReadAccountConsumptionResponse",
      "description": "implements the service definition of ReadAccountConsumptionResponse",
      "fields": [
        {
          "name": "ConsumptionEntries",
          "type": "ConsumptionEntries",
          "nativeType": "ConsumptionEntries",
          "fieldName": "ConsumptionEntries",
          "parameterName": "consumptionEntries",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadAccountConsumptionResponse"
    },
    {
      "name": "ReadAccountRequest",
      "description": "implements the service definition of ReadAccountRequest",
      "typeName": "ReadAccountRequest"
    },
    {
      "name": "ReadAccountResponse",
      "description": "implements the service definition of ReadAccountResponse",
      "fields": [
        {
          "name": "Account",
          "type": "Account",
          "nativeType": "Account",
          "fieldName": "Account",
          "parameterName": "account",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadAccountResponse"
    },
    {
      "name": "ReadAdminPasswordRequest",
      "description": "implements the service definition of ReadAdminPasswordRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "ReadAdminPasswordRequest"
    },
    {
      "name": "ReadAdminPasswordResponse",
      "description": "implements the service definition of ReadAdminPasswordResponse",
      "fields": [
        {
          "name": "AdminPassword",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AdminPassword",
          "parameterName": "adminPassword",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "ReadAdminPasswordResponse"
    },
    {
      "name": "ReadApiKeysRequest",
      "description": "implements the service definition of ReadApiKeysRequest",
      "fields": [
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "ReadApiKeysRequest"
    },
    {
      "name": "ReadApiKeysResponse",
      "description": "implements the service definition of ReadApiKeysResponse",
      "fields": [
        {
          "name": "ApiKeys",
          "type": "ApiKeys",
          "kind": 2,
          "nativeType": "ApiKeys",
          "fieldName": "ApiKeys",
          "parameterName": "apiKeys",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadApiKeysResponse"
    },
    {
      "name": "ReadApiLogsRequest",
      "description": "implements the service definition of ReadApiLogsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "With",
          "type": "With",
          "nativeType": "With",
          "fieldName": "With",
          "parameterName": "with",
          "serialize": true
        }
      ],
      "typeName": "ReadApiLogsRequest"
    },
    {
      "name": "ReadApiLogsResponse",
      "description": "implements the service definition of ReadApiLogsResponse",
      "fields": [
        {
          "name": "Logs",
          "type": "Logs",
          "kind": 2,
          "nativeType": "Logs",
          "fieldName": "Logs",
          "parameterName": "logs",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadApiLogsResponse"
    },
    {
      "name": "ReadCatalogRequest",
      "description": "implements the service definition of ReadCatalogRequest",
      "typeName": "ReadCatalogRequest"
    },
    {
      "name": "ReadCatalogResponse",
      "description": "implements the service definition of ReadCatalogResponse",
      "fields": [
        {
          "name": "Catalog",
          "type": "Catalog",
          "nativeType": "Catalog",
          "fieldName": "Catalog",
          "parameterName": "catalog",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadCatalogResponse"
    },
    {
      "name": "ReadClientEndpointsRequest",
      "description": "implements the service definition of ReadClientEndpointsRequest",
      "fields": [
        {
          "name": "ClientEndpointIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "ClientEndpointIds",
          "parameterName": "clientEndpointIds",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        }
      ],
      "typeName": "ReadClientEndpointsRequest"
    },
    {
      "name": "ReadClientEndpointsResponse",
      "description": "implements the service definition of ReadClientEndpointsResponse",
      "fields": [
        {
          "name": "ClientEndpoints",
          "type": "ClientEndpoints",
          "kind": 2,
          "nativeType": "ClientEndpoints",
          "fieldName": "ClientEndpoints",
          "parameterName": "clientEndpoints",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadClientEndpointsResponse"
    },
    {
      "name": "ReadConsoleOutputRequest",
      "description": "implements the service definition of ReadConsoleOutputRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "ReadConsoleOutputRequest"
    },
    {
      "name": "ReadConsoleOutputResponse",
      "description": "implements the service definition of ReadConsoleOutputResponse",
      "fields": [
        {
          "name": "ConsoleOutput",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ConsoleOutput",
          "parameterName": "consoleOutput",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "ReadConsoleOutputResponse"
    },
    {
      "name": "ReadDhcpOptionsRequest",
      "description": "implements the service definition of ReadDhcpOptionsRequest",
      "fields": [
        {
          "name": "DhcpOptionsSetIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "DhcpOptionsSetIds",
          "parameterName": "dhcpOptionsSetIds",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        }
      ],
      "typeName": "ReadDhcpOptionsRequest"
    },
    {
      "name": "ReadDhcpOptionsResponse",
      "description": "implements the service definition of ReadDhcpOptionsResponse",
      "fields": [
        {
          "name": "DhcpOptionsSets",
          "type": "DhcpOptionsSets",
          "kind": 2,
          "nativeType": "DhcpOptionsSets",
          "fieldName": "DhcpOptionsSets",
          "parameterName": "dhcpOptionsSets",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadDhcpOptionsResponse"
    },
    {
      "name": "ReadDirectLinkInterfacesRequest",
      "description": "implements the service definition of ReadDirectLinkInterfacesRequest",
      "fields": [
        {
          "name": "DirectLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkId",
          "parameterName": "directLinkId",
          "serialize": true
        },
        {
          "name": "DirectLinkInterfaceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkInterfaceId",
          "parameterName": "directLinkInterfaceId",
          "serialize": true
        }
      ],
      "typeName": "ReadDirectLinkInterfacesRequest"
    },
    {
      "name": "ReadDirectLinkInterfacesResponse",
      "description": "implements the service definition of ReadDirectLinkInterfacesResponse",
      "fields": [
        {
          "name": "DirectLinkInterfaces",
          "type": "DirectLinkInterfaces",
          "kind": 2,
          "nativeType": "DirectLinkInterfaces",
          "fieldName": "DirectLinkInterfaces",
          "parameterName": "directLinkInterfaces",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadDirectLinkInterfacesResponse"
    },
    {
      "name": "ReadDirectLinksRequest",
      "description": "implements the service definition of ReadDirectLinksRequest",
      "fields": [
        {
          "name": "DirectLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DirectLinkId",
          "parameterName": "directLinkId",
          "serialize": true
        }
      ],
      "typeName": "ReadDirectLinksRequest"
    },
    {
      "name": "ReadDirectLinksResponse",
      "description": "implements the service definition of ReadDirectLinksResponse",
      "fields": [
        {
          "name": "DirectLinks",
          "type": "DirectLinks",
          "kind": 2,
          "nativeType": "DirectLinks",
          "fieldName": "DirectLinks",
          "parameterName": "directLinks",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadDirectLinksResponse"
    },
    {
      "name": "ReadFirewallRulesSetsRequest",
      "description": "implements the service definition of ReadFirewallRulesSetsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "FirewallRulesSetIds",
          "parameterName": "firewallRulesSetIds",
          "serialize": true
        },
        {
          "name": "Names",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "Names",
          "parameterName": "names",
          "serialize": true
        }
      ],
      "typeName": "ReadFirewallRulesSetsRequest"
    },
    {
      "name": "ReadFirewallRulesSetsResponse",
      "description": "implements the service definition of ReadFirewallRulesSetsResponse",
      "fields": [
        {
          "name": "FirewallRulesSets",
          "type": "FirewallRulesSets",
          "kind": 2,
          "nativeType": "FirewallRulesSets",
          "fieldName": "FirewallRulesSets",
          "parameterName": "firewallRulesSets",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadFirewallRulesSetsResponse"
    },
    {
      "name": "ReadGroupsRequest",
      "description": "implements the service definition of ReadGroupsRequest",
      "fields": [
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        }
      ],
      "typeName": "ReadGroupsRequest"
    },
    {
      "name": "ReadGroupsResponse",
      "description": "implements the service definition of ReadGroupsResponse",
      "fields": [
        {
          "name": "Groups",
          "type": "Groups",
          "kind": 2,
          "nativeType": "Groups",
          "fieldName": "Groups",
          "parameterName": "groups",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadGroupsResponse"
    },
    {
      "name": "ReadImageAttributeRequest",
      "description": "implements the service definition of ReadImageAttributeRequest",
      "fields": [
        {
          "name": "Attribute",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Attribute",
          "parameterName": "attribute",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        }
      ],
      "typeName": "ReadImageAttributeRequest"
    },
    {
      "name": "ReadImageAttributeResponse",
      "description": "implements the service definition of ReadImageAttributeResponse",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "Permissions",
          "type": "Permissions",
          "kind": 2,
          "nativeType": "Permissions",
          "fieldName": "Permissions",
          "parameterName": "permissions",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadImageAttributeResponse"
    },
    {
      "name": "ReadImageExportTasksRequest",
      "description": "implements the service definition of ReadImageExportTasksRequest",
      "fields": [
        {
          "name": "TaskIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "TaskIds",
          "parameterName": "taskIds",
          "serialize": true
        }
      ],
      "typeName": "ReadImageExportTasksRequest"
    },
    {
      "name": "ReadImageExportTasksResponse",
      "description": "implements the service definition of ReadImageExportTasksResponse",
      "fields": [
        {
          "name": "ImageExportTasks",
          "type": "ImageExportTasks",
          "kind": 2,
          "nativeType": "ImageExportTasks",
          "fieldName": "ImageExportTasks",
          "parameterName": "imageExportTasks",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadImageExportTasksResponse"
    },
    {
      "name": "ReadImagesRequest",
      "description": "implements the service definition of ReadImagesRequest",
      "fields": [
        {
          "name": "AccountIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "AccountIds",
          "parameterName": "accountIds",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "ImageIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "ImageIds",
          "parameterName": "imageIds",
          "serialize": true
        },
        {
          "name": "Permissions",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "Permissions",
          "parameterName": "permissions",
          "serialize": true
        }
      ],
      "typeName": "ReadImagesRequest"
    },
    {
      "name": "ReadImagesResponse",
      "description": "implements the service definition of ReadImagesResponse",
      "fields": [
        {
          "name": "Images",
          "type": "Images",
          "kind": 2,
          "nativeType": "Images",
          "fieldName": "Images",
          "parameterName": "images",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadImagesResponse"
    },
    {
      "name": "ReadKeypairsRequest",
      "description": "implements the service definition of ReadKeypairsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "KeypairNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "KeypairNames",
          "parameterName": "keypairNames",
          "serialize": true
        }
      ],
      "typeName": "ReadKeypairsRequest"
    },
    {
      "name": "ReadKeypairsResponse",
      "description": "implements the service definition of ReadKeypairsResponse",
      "fields": [
        {
          "name": "Keypairs",
          "type": "Keypairs",
          "kind": 2,
          "nativeType": "Keypairs",
          "fieldName": "Keypairs",
          "parameterName": "keypairs",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadKeypairsResponse"
    },
    {
      "name": "ReadListenerRulesRequest",
      "description": "implements the service definition of ReadListenerRulesRequest",
      "fields": [
        {
          "name": "ListenerRuleNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "ListenerRuleNames",
          "parameterName": "listenerRuleNames",
          "serialize": true
        }
      ],
      "typeName": "ReadListenerRulesRequest"
    },
    {
      "name": "ReadListenerRulesResponse",
      "description": "implements the service definition of ReadListenerRulesResponse",
      "fields": [
        {
          "name": "ListenerRules",
          "type": "ListenerRules",
          "kind": 2,
          "nativeType": "ListenerRules",
          "fieldName": "ListenerRules",
          "parameterName": "listenerRules",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadListenerRulesResponse"
    },
    {
      "name": "ReadLoadBalancerAttributesRequest",
      "description": "implements the service definition of ReadLoadBalancerAttributesRequest",
      "fields": [
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        }
      ],
      "typeName": "ReadLoadBalancerAttributesRequest"
    },
    {
      "name": "ReadLoadBalancerAttributesResponse",
      "description": "implements the service definition of ReadLoadBalancerAttributesResponse",
      "fields": [
        {
          "name": "AccessLog",
          "type": "AccessLog",
          "nativeType": "AccessLog",
          "fieldName": "AccessLog",
          "parameterName": "accessLog",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadLoadBalancerAttributesResponse"
    },
    {
      "name": "ReadLoadBalancersRequest",
      "description": "implements the service definition of ReadLoadBalancersRequest",
      "fields": [
        {
          "name": "LoadBalancerNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "LoadBalancerNames",
          "parameterName": "loadBalancerNames",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        }
      ],
      "typeName": "ReadLoadBalancersRequest"
    },
    {
      "name": "ReadLoadBalancersResponse",
      "description": "implements the service definition of ReadLoadBalancersResponse",
      "fields": [
        {
          "name": "LoadBalancers",
          "type": "LoadBalancers",
          "kind": 2,
          "nativeType": "LoadBalancers",
          "fieldName": "LoadBalancers",
          "parameterName": "loadBalancers",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadLoadBalancersResponse"
    },
    {
      "name": "ReadNatServicesRequest",
      "description": "implements the service definition of ReadNatServicesRequest",
      "fields": [
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NatServiceIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "NatServiceIds",
          "parameterName": "natServiceIds",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        }
      ],
      "typeName": "ReadNatServicesRequest"
    },
    {
      "name": "ReadNatServicesResponse",
      "description": "implements the service definition of ReadNatServicesResponse",
      "fields": [
        {
          "name": "NatServices",
          "type": "NatServices",
          "kind": 2,
          "nativeType": "NatServices",
          "fieldName": "NatServices",
          "parameterName": "natServices",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadNatServicesResponse"
    },
    {
      "name": "ReadNetAccessesRequest",
      "description": "implements the service definition of ReadNetAccessesRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "NetAccessIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "NetAccessIds",
          "parameterName": "netAccessIds",
          "serialize": true
        }
      ],
      "typeName": "ReadNetAccessesRequest"
    },
    {
      "name": "ReadNetAccessesResponse",
      "description": "implements the service definition of ReadNetAccessesResponse",
      "fields": [
        {
          "name": "NetAccesses",
          "type": "NetAccesses",
          "kind": 2,
          "nativeType": "NetAccesses",
          "fieldName": "NetAccesses",
          "parameterName": "netAccesses",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadNetAccessesResponse"
    },
    {
      "name": "ReadNetInternetGatewaysRequest",
      "description": "implements the service definition of ReadNetInternetGatewaysRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "NetInternetGatewayIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "NetInternetGatewayIds",
          "parameterName": "netInternetGatewayIds",
          "serialize": true
        }
      ],
      "typeName": "ReadNetInternetGatewaysRequest"
    },
    {
      "name": "ReadNetInternetGatewaysResponse",
      "description": "implements the service definition of ReadNetInternetGatewaysResponse",
      "fields": [
        {
          "name": "NetInternetGateways",
          "type": "NetInternetGateways",
          "kind": 2,
          "nativeType": "NetInternetGateways",
          "fieldName": "NetInternetGateways",
          "parameterName": "netInternetGateways",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadNetInternetGatewaysResponse"
    },
    {
      "name": "ReadNetOptionsRequest",
      "description": "implements the service definition of ReadNetOptionsRequest",
      "fields": [
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        }
      ],
      "typeName": "ReadNetOptionsRequest"
    },
    {
      "name": "ReadNetOptionsResponse",
      "description": "implements the service definition of ReadNetOptionsResponse",
      "fields": [
        {
          "name": "FirewallRulesSetLogging",
          "type": "FirewallRulesSetLogging",
          "nativeType": "FirewallRulesSetLogging",
          "fieldName": "FirewallRulesSetLogging",
          "parameterName": "firewallRulesSetLogging",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadNetOptionsResponse"
    },
    {
      "name": "ReadNetPeeringsRequest",
      "description": "implements the service definition of ReadNetPeeringsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "NetPeerings",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "NetPeerings",
          "parameterName": "netPeerings",
          "serialize": true
        }
      ],
      "typeName": "ReadNetPeeringsRequest"
    },
    {
      "name": "ReadNetPeeringsResponse",
      "description": "implements the service definition of ReadNetPeeringsResponse",
      "fields": [
        {
          "name": "NetPeerings",
          "type": "NetPeerings",
          "kind": 2,
          "nativeType": "NetPeerings",
          "fieldName": "NetPeerings",
          "parameterName": "netPeerings",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadNetPeeringsResponse"
    },
    {
      "name": "ReadNetServicesRequest",
      "description": "implements the service definition of ReadNetServicesRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        }
      ],
      "typeName": "ReadNetServicesRequest"
    },
    {
      "name": "ReadNetServicesResponse",
      "description": "implements the service definition of ReadNetServicesResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "ServiceNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "ServiceNames",
          "parameterName": "serviceNames",
          "serialize": true
        }
      ],
      "typeName": "ReadNetServicesResponse"
    },
    {
      "name": "ReadNetsRequest",
      "description": "implements the service definition of ReadNetsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        }
      ],
      "typeName": "ReadNetsRequest"
    },
    {
      "name": "ReadNetsResponse",
      "description": "implements the service definition of ReadNetsResponse",
      "fields": [
        {
          "name": "Nets",
          "type": "Nets",
          "kind": 2,
          "nativeType": "Nets",
          "fieldName": "Nets",
          "parameterName": "nets",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadNetsResponse"
    },
    {
      "name": "ReadNicsRequest",
      "description": "implements the service definition of ReadNicsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "NicIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "NicIds",
          "parameterName": "nicIds",
          "serialize": true
        }
      ],
      "typeName": "ReadNicsRequest"
    },
    {
      "name": "ReadNicsResponse",
      "description": "implements the service definition of ReadNicsResponse",
      "fields": [
        {
          "name": "Nics",
          "type": "Nics",
          "kind": 2,
          "nativeType": "Nics",
          "fieldName": "Nics",
          "parameterName": "nics",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadNicsResponse"
    },
    {
      "name": "ReadPoliciesRequest",
      "description": "implements the service definition of ReadPoliciesRequest",
      "fields": [
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        },
        {
          "name": "IsLinked",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsLinked",
          "parameterName": "isLinked",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "ReadPoliciesRequest"
    },
    {
      "name": "ReadPoliciesResponse",
      "description": "implements the service definition of ReadPoliciesResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "Policies",
          "type": "Policies",
          "kind": 2,
          "nativeType": "Policies",
          "fieldName": "Policies",
          "parameterName": "policies",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadPoliciesResponse"
    },
    {
      "name": "ReadPrefixListsRequest",
      "description": "implements the service definition of ReadPrefixListsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "PrefixListIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "PrefixListIds",
          "parameterName": "prefixListIds",
          "serialize": true
        }
      ],
      "typeName": "ReadPrefixListsRequest"
    },
    {
      "name": "ReadPrefixListsResponse",
      "description": "implements the service definition of ReadPrefixListsResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "PrefixLists",
          "type": "PrefixLists",
          "kind": 2,
          "nativeType": "PrefixLists",
          "fieldName": "PrefixLists",
          "parameterName": "prefixLists",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadPrefixListsResponse"
    },
    {
      "name": "ReadProductTypesRequest",
      "description": "implements the service definition of ReadProductTypesRequest",
      "fields": [
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        }
      ],
      "typeName": "ReadProductTypesRequest"
    },
    {
      "name": "ReadProductTypesResponse",
      "description": "implements the service definition of ReadProductTypesResponse",
      "fields": [
        {
          "name": "ProductTypes",
          "type": "ProductTypes",
          "kind": 2,
          "nativeType": "ProductTypes",
          "fieldName": "ProductTypes",
          "parameterName": "productTypes",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadProductTypesResponse"
    },
    {
      "name": "ReadPublicCatalogRequest",
      "description": "implements the service definition of ReadPublicCatalogRequest",
      "typeName": "ReadPublicCatalogRequest"
    },
    {
      "name": "ReadPublicCatalogResponse",
      "description": "implements the service definition of ReadPublicCatalogResponse",
      "fields": [
        {
          "name": "Catalog",
          "type": "Catalog",
          "nativeType": "Catalog",
          "fieldName": "Catalog",
          "parameterName": "catalog",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadPublicCatalogResponse"
    },
    {
      "name": "ReadPublicIpRangesRequest",
      "description": "implements the service definition of ReadPublicIpRangesRequest",
      "typeName": "ReadPublicIpRangesRequest"
    },
    {
      "name": "ReadPublicIpRangesResponse",
      "description": "implements the service definition of ReadPublicIpRangesResponse",
      "fields": [
        {
          "name": "PublicIps",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "PublicIps",
          "parameterName": "publicIps",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadPublicIpRangesResponse"
    },
    {
      "name": "ReadPublicIpsRequest",
      "description": "implements the service definition of ReadPublicIpsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        }
      ],
      "typeName": "ReadPublicIpsRequest"
    },
    {
      "name": "ReadPublicIpsResponse",
      "description": "implements the service definition of ReadPublicIpsResponse",
      "fields": [
        {
          "name": "PublicIps",
          "type": "PublicIps",
          "kind": 2,
          "nativeType": "PublicIps",
          "fieldName": "PublicIps",
          "parameterName": "publicIps",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadPublicIpsResponse"
    },
    {
      "name": "ReadQuotasRequest",
      "description": "implements the service definition of ReadQuotasRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "QuotaNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "QuotaNames",
          "parameterName": "quotaNames",
          "serialize": true
        }
      ],
      "typeName": "ReadQuotasRequest"
    },
    {
      "name": "ReadQuotasResponse",
      "description": "implements the service definition of ReadQuotasResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "QuotaTypes",
          "type": "QuotaTypes",
          "kind": 2,
          "nativeType": "QuotaTypes",
          "fieldName": "QuotaTypes",
          "parameterName": "quotaTypes",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadQuotasResponse"
    },
    {
      "name": "ReadRegionsRequest",
      "description": "implements the service definition of ReadRegionsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "RegionNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RegionNames",
          "parameterName": "regionNames",
          "serialize": true
        }
      ],
      "typeName": "ReadRegionsRequest"
    },
    {
      "name": "ReadRegionsResponse",
      "description": "implements the service definition of ReadRegionsResponse",
      "fields": [
        {
          "name": "Regions",
          "type": "Regions",
          "kind": 2,
          "nativeType": "Regions",
          "fieldName": "Regions",
          "parameterName": "regions",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadRegionsResponse"
    },
    {
      "name": "ReadReservedVmOffersRequest",
      "description": "implements the service definition of ReadReservedVmOffersRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "OfferingType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OfferingType",
          "parameterName": "offeringType",
          "serialize": true
        },
        {
          "name": "ProductType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ProductType",
          "parameterName": "productType",
          "serialize": true
        },
        {
          "name": "ReservedVmsOfferIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "ReservedVmsOfferIds",
          "parameterName": "reservedVmsOfferIds",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "Tenancy",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Tenancy",
          "parameterName": "tenancy",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        }
      ],
      "typeName": "ReadReservedVmOffersRequest"
    },
    {
      "name": "ReadReservedVmOffersResponse",
      "description": "implements the service definition of ReadReservedVmOffersResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ReservedVmsOffers",
          "type": "ReservedVmsOffers",
          "kind": 2,
          "nativeType": "ReservedVmsOffers",
          "fieldName": "ReservedVmsOffers",
          "parameterName": "reservedVmsOffers",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadReservedVmOffersResponse"
    },
    {
      "name": "ReadReservedVmsRequest",
      "description": "implements the service definition of ReadReservedVmsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "OfferingType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OfferingType",
          "parameterName": "offeringType",
          "serialize": true
        },
        {
          "name": "ReservedVmsIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "ReservedVmsIds",
          "parameterName": "reservedVmsIds",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        }
      ],
      "typeName": "ReadReservedVmsRequest"
    },
    {
      "name": "ReadReservedVmsResponse",
      "description": "implements the service definition of ReadReservedVmsResponse",
      "fields": [
        {
          "name": "ReservedVms",
          "type": "ReservedVms",
          "kind": 2,
          "nativeType": "ReservedVms",
          "fieldName": "ReservedVms",
          "parameterName": "reservedVms",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadReservedVmsResponse"
    },
    {
      "name": "ReadRouteTablesRequest",
      "description": "implements the service definition of ReadRouteTablesRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        }
      ],
      "typeName": "ReadRouteTablesRequest"
    },
    {
      "name": "ReadRouteTablesResponse",
      "description": "implements the service definition of ReadRouteTablesResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "RouteTables",
          "type": "RouteTables",
          "kind": 2,
          "nativeType": "RouteTables",
          "fieldName": "RouteTables",
          "parameterName": "routeTables",
          "serialize": true
        }
      ],
      "typeName": "ReadRouteTablesResponse"
    },
    {
      "name": "ReadServerCertificatesRequest",
      "description": "implements the service definition of ReadServerCertificatesRequest",
      "fields": [
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        }
      ],
      "typeName": "ReadServerCertificatesRequest"
    },
    {
      "name": "ReadServerCertificatesResponse",
      "description": "implements the service definition of ReadServerCertificatesResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "ServerCertificates",
          "type": "ServerCertificates",
          "kind": 2,
          "nativeType": "ServerCertificates",
          "fieldName": "ServerCertificates",
          "parameterName": "serverCertificates",
          "serialize": true
        }
      ],
      "typeName": "ReadServerCertificatesResponse"
    },
    {
      "name": "ReadSitesRequest",
      "description": "implements the service definition of ReadSitesRequest",
      "typeName": "ReadSitesRequest"
    },
    {
      "name": "ReadSitesResponse",
      "description": "implements the service definition of ReadSitesResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Sites",
          "type": "Sites",
          "kind": 2,
          "nativeType": "Sites",
          "fieldName": "Sites",
          "parameterName": "sites",
          "serialize": true
        }
      ],
      "typeName": "ReadSitesResponse"
    },
    {
      "name": "ReadSnapshotAttributeRequest",
      "description": "implements the service definition of ReadSnapshotAttributeRequest",
      "fields": [
        {
          "name": "Attribute",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Attribute",
          "parameterName": "attribute",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        }
      ],
      "typeName": "ReadSnapshotAttributeRequest"
    },
    {
      "name": "ReadSnapshotAttributeResponse",
      "description": "implements the service definition of ReadSnapshotAttributeResponse",
      "fields": [
        {
          "name": "PermissionsToCreateVolumes",
          "type": "PermissionsToCreateVolumes",
          "kind": 2,
          "nativeType": "PermissionsToCreateVolumes",
          "fieldName": "PermissionsToCreateVolumes",
          "parameterName": "permissionsToCreateVolumes",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        }
      ],
      "typeName": "ReadSnapshotAttributeResponse"
    },
    {
      "name": "ReadSnapshotExportTasksRequest",
      "description": "implements the service definition of ReadSnapshotExportTasksRequest",
      "fields": [
        {
          "name": "TaskIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "TaskIds",
          "parameterName": "taskIds",
          "serialize": true
        }
      ],
      "typeName": "ReadSnapshotExportTasksRequest"
    },
    {
      "name": "ReadSnapshotExportTasksResponse",
      "description": "implements the service definition of ReadSnapshotExportTasksResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "SnapshotExportTasks",
          "type": "SnapshotExportTasks",
          "kind": 2,
          "nativeType": "SnapshotExportTasks",
          "fieldName": "SnapshotExportTasks",
          "parameterName": "snapshotExportTasks",
          "serialize": true
        }
      ],
      "typeName": "ReadSnapshotExportTasksResponse"
    },
    {
      "name": "ReadSnapshotsRequest",
      "description": "implements the service definition of ReadSnapshotsRequest",
      "fields": [
        {
          "name": "AccountIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "AccountIds",
          "parameterName": "accountIds",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "PermissionsToCreateVolumes",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "PermissionsToCreateVolumes",
          "parameterName": "permissionsToCreateVolumes",
          "serialize": true
        },
        {
          "name": "SnapshotIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "SnapshotIds",
          "parameterName": "snapshotIds",
          "serialize": true
        }
      ],
      "typeName": "ReadSnapshotsRequest"
    },
    {
      "name": "ReadSnapshotsResponse",
      "description": "implements the service definition of ReadSnapshotsResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Snapshots",
          "type": "Snapshots",
          "kind": 2,
          "nativeType": "Snapshots",
          "fieldName": "Snapshots",
          "parameterName": "snapshots",
          "serialize": true
        }
      ],
      "typeName": "ReadSnapshotsResponse"
    },
    {
      "name": "ReadSubRegionsRequest",
      "description": "implements the service definition of ReadSubRegionsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "SubRegionNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "SubRegionNames",
          "parameterName": "subRegionNames",
          "serialize": true
        }
      ],
      "typeName": "ReadSubRegionsRequest"
    },
    {
      "name": "ReadSubRegionsResponse",
      "description": "implements the service definition of ReadSubRegionsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "SubRegions",
          "type": "SubRegions",
          "kind": 2,
          "nativeType": "SubRegions",
          "fieldName": "SubRegions",
          "parameterName": "subRegions",
          "serialize": true
        }
      ],
      "typeName": "ReadSubRegionsResponse"
    },
    {
      "name": "ReadSubnetsRequest",
      "description": "implements the service definition of ReadSubnetsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "SubnetIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "SubnetIds",
          "parameterName": "subnetIds",
          "serialize": true
        }
      ],
      "typeName": "ReadSubnetsRequest"
    },
    {
      "name": "ReadSubnetsResponse",
      "description": "implements the service definition of ReadSubnetsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Subnets",
          "type": "Subnets",
          "kind": 2,
          "nativeType": "Subnets",
          "fieldName": "Subnets",
          "parameterName": "subnets",
          "serialize": true
        }
      ],
      "typeName": "ReadSubnetsResponse"
    },
    {
      "name": "ReadTagsRequest",
      "description": "implements the service definition of ReadTagsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        }
      ],
      "typeName": "ReadTagsRequest"
    },
    {
      "name": "ReadTagsResponse",
      "description": "implements the service definition of ReadTagsResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "ReadTagsResponse"
    },
    {
      "name": "ReadUsersRequest",
      "description": "implements the service definition of ReadUsersRequest",
      "fields": [
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        }
      ],
      "typeName": "ReadUsersRequest"
    },
    {
      "name": "ReadUsersResponse",
      "description": "implements the service definition of ReadUsersResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Users",
          "type": "Users",
          "kind": 2,
          "nativeType": "Users",
          "fieldName": "Users",
          "parameterName": "users",
          "serialize": true
        }
      ],
      "typeName": "ReadUsersResponse"
    },
    {
      "name": "ReadVmAttributeRequest",
      "description": "implements the service definition of ReadVmAttributeRequest",
      "fields": [
        {
          "name": "Attribute",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Attribute",
          "parameterName": "attribute",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "ReadVmAttributeRequest"
    },
    {
      "name": "ReadVmAttributeResponse",
      "description": "implements the service definition of ReadVmAttributeResponse",
      "fields": [
        {
          "name": "BlockDeviceMappings",
          "type": "BlockDeviceMappings",
          "kind": 2,
          "nativeType": "BlockDeviceMappings",
          "fieldName": "BlockDeviceMappings",
          "parameterName": "blockDeviceMappings",
          "serialize": true
        },
        {
          "name": "BsuOptimized",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "BsuOptimized",
          "parameterName": "bsuOptimized",
          "serialize": true
        },
        {
          "name": "DeletionProtection",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DeletionProtection",
          "parameterName": "deletionProtection",
          "serialize": true
        },
        {
          "name": "FirewallRulesSets",
          "type": "FirewallRulesSets",
          "kind": 2,
          "nativeType": "FirewallRulesSets",
          "fieldName": "FirewallRulesSets",
          "parameterName": "firewallRulesSets",
          "serialize": true
        },
        {
          "name": "IsSourceDestChecked",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsSourceDestChecked",
          "parameterName": "isSourceDestChecked",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        },
        {
          "name": "ProductCodes",
          "type": "ProductCodes",
          "kind": 2,
          "nativeType": "ProductCodes",
          "fieldName": "ProductCodes",
          "parameterName": "productCodes",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "RootDeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RootDeviceName",
          "parameterName": "rootDeviceName",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "UserData",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserData",
          "parameterName": "userData",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        },
        {
          "name": "VmInitiatedShutdownBehavior",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmInitiatedShutdownBehavior",
          "parameterName": "vmInitiatedShutdownBehavior",
          "serialize": true
        }
      ],
      "typeName": "ReadVmAttributeResponse"
    },
    {
      "name": "ReadVmTypesRequest",
      "description": "implements the service definition of ReadVmTypesRequest",
      "fields": [
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        }
      ],
      "typeName": "ReadVmTypesRequest"
    },
    {
      "name": "ReadVmTypesResponse",
      "description": "implements the service definition of ReadVmTypesResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Types",
          "type": "Types",
          "kind": 2,
          "nativeType": "Types",
          "fieldName": "Types",
          "parameterName": "types",
          "serialize": true
        }
      ],
      "typeName": "ReadVmTypesResponse"
    },
    {
      "name": "ReadVmsHealthRequest",
      "description": "implements the service definition of ReadVmsHealthRequest",
      "fields": [
        {
          "name": "BackendVmsIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "BackendVmsIds",
          "parameterName": "backendVmsIds",
          "serialize": true
        },
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        }
      ],
      "typeName": "ReadVmsHealthRequest"
    },
    {
      "name": "ReadVmsHealthResponse",
      "description": "implements the service definition of ReadVmsHealthResponse",
      "fields": [
        {
          "name": "BackendVmsHealth",
          "type": "BackendVmsHealth",
          "kind": 2,
          "nativeType": "BackendVmsHealth",
          "fieldName": "BackendVmsHealth",
          "parameterName": "backendVmsHealth",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ReadVmsHealthResponse"
    },
    {
      "name": "ReadVmsRequest",
      "description": "implements the service definition of ReadVmsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        }
      ],
      "typeName": "ReadVmsRequest"
    },
    {
      "name": "ReadVmsResponse",
      "description": "implements the service definition of ReadVmsResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Vms",
          "type": "Vms",
          "kind": 2,
          "nativeType": "Vms",
          "fieldName": "Vms",
          "parameterName": "vms",
          "serialize": true
        }
      ],
      "typeName": "ReadVmsResponse"
    },
    {
      "name": "ReadVmsStateRequest",
      "description": "implements the service definition of ReadVmsStateRequest",
      "fields": [
        {
          "name": "AllVms",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "AllVms",
          "parameterName": "allVms",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        }
      ],
      "typeName": "ReadVmsStateRequest"
    },
    {
      "name": "ReadVmsStateResponse",
      "description": "implements the service definition of ReadVmsStateResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "VmStates",
          "type": "VmStates",
          "kind": 2,
          "nativeType": "VmStates",
          "fieldName": "VmStates",
          "parameterName": "vmStates",
          "serialize": true
        }
      ],
      "typeName": "ReadVmsStateResponse"
    },
    {
      "name": "ReadVolumesRequest",
      "description": "implements the service definition of ReadVolumesRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "MaxResults",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxResults",
          "parameterName": "maxResults",
          "serialize": true
        },
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        }
      ],
      "typeName": "ReadVolumesRequest"
    },
    {
      "name": "ReadVolumesResponse",
      "description": "implements the service definition of ReadVolumesResponse",
      "fields": [
        {
          "name": "NextResultsToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NextResultsToken",
          "parameterName": "nextResultsToken",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Volumes",
          "type": "Volumes",
          "kind": 2,
          "nativeType": "Volumes",
          "fieldName": "Volumes",
          "parameterName": "volumes",
          "serialize": true
        }
      ],
      "typeName": "ReadVolumesResponse"
    },
    {
      "name": "ReadVpnConnectionsRequest",
      "description": "implements the service definition of ReadVpnConnectionsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "VpnConnectionIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VpnConnectionIds",
          "parameterName": "vpnConnectionIds",
          "serialize": true
        }
      ],
      "typeName": "ReadVpnConnectionsRequest"
    },
    {
      "name": "ReadVpnConnectionsResponse",
      "description": "implements the service definition of ReadVpnConnectionsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "vpnConnections",
          "type": "vpnConnections",
          "kind": 2,
          "nativeType": "VpnConnections",
          "fieldName": "VpnConnections",
          "parameterName": "vpnConnections",
          "serialize": true
        }
      ],
      "typeName": "ReadVpnConnectionsResponse"
    },
    {
      "name": "ReadVpnGatewaysRequest",
      "description": "implements the service definition of ReadVpnGatewaysRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Filters",
          "type": "Filters",
          "kind": 2,
          "nativeType": "Filters",
          "fieldName": "Filters",
          "parameterName": "filters",
          "serialize": true
        },
        {
          "name": "VpnGatewayIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VpnGatewayIds",
          "parameterName": "vpnGatewayIds",
          "serialize": true
        }
      ],
      "typeName": "ReadVpnGatewaysRequest"
    },
    {
      "name": "ReadVpnGatewaysResponse",
      "description": "implements the service definition of ReadVpnGatewaysResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "VpnGateways",
          "type": "VpnGateways",
          "kind": 2,
          "nativeType": "VpnGateways",
          "fieldName": "VpnGateways",
          "parameterName": "vpnGateways",
          "serialize": true
        }
      ],
      "typeName": "ReadVpnGatewaysResponse"
    },
    {
      "name": "RebootVmsRequest",
      "description": "implements the service definition of RebootVmsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "RebootVmsRequest"
    },
    {
      "name": "RebootVmsResponse",
      "description": "implements the service definition of RebootVmsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "RebootVmsResponse"
    },
    {
      "name": "RecurringCharges",
      "description": "implements the service definition of RecurringCharges",
      "fields": [
        {
          "name": "Frequency",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Frequency",
          "parameterName": "frequency",
          "serialize": true
        }
      ],
      "typeName": "RecurringCharges"
    },
    {
      "name": "RegionConfig",
      "description": "implements the service definition of RegionConfig",
      "fields": [
        {
          "name": "FromDate",
          "type": "string",
          "format": "date",
          "nativeType": "string",
          "fieldName": "FromDate",
          "parameterName": "fromDate",
          "serialize": true
        },
        {
          "name": "Regions",
          "type": "Regions",
          "kind": 2,
          "nativeType": "Regions",
          "fieldName": "Regions",
          "parameterName": "regions",
          "serialize": true
        },
        {
          "name": "TargetRegion",
          "type": "TargetRegion",
          "nativeType": "TargetRegion",
          "fieldName": "TargetRegion",
          "parameterName": "targetRegion",
          "serialize": true
        }
      ],
      "typeName": "RegionConfig"
    },
    {
      "name": "Regions",
      "description": "implements the service definition of Regions",
      "fields": [
        {
          "name": "RegionEndpoint",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RegionEndpoint",
          "parameterName": "regionEndpoint",
          "serialize": true
        },
        {
          "name": "RegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RegionName",
          "parameterName": "regionName",
          "serialize": true
        }
      ],
      "typeName": "Regions"
    },
    {
      "name": "RegisterImageRequest",
      "description": "implements the service definition of RegisterImageRequest",
      "fields": [
        {
          "name": "Architecture",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Architecture",
          "parameterName": "architecture",
          "serialize": true
        },
        {
          "name": "BlockDeviceMappings",
          "type": "BlockDeviceMappings",
          "kind": 2,
          "nativeType": "BlockDeviceMappings",
          "fieldName": "BlockDeviceMappings",
          "parameterName": "blockDeviceMappings",
          "serialize": true
        },
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        },
        {
          "name": "OsuLocation",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OsuLocation",
          "parameterName": "osuLocation",
          "serialize": true
        },
        {
          "name": "RootDeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RootDeviceName",
          "parameterName": "rootDeviceName",
          "serialize": true
        }
      ],
      "typeName": "RegisterImageRequest"
    },
    {
      "name": "RegisterImageResponse",
      "description": "implements the service definition of RegisterImageResponse",
      "fields": [
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "RegisterImageResponse"
    },
    {
      "name": "RegisterUserInGroupRequest",
      "description": "implements the service definition of RegisterUserInGroupRequest",
      "fields": [
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "RegisterUserInGroupRequest"
    },
    {
      "name": "RegisterUserInGroupResponse",
      "description": "implements the service definition of RegisterUserInGroupResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "RegisterUserInGroupResponse"
    },
    {
      "name": "RegisterVmsInListenerRuleRequest",
      "description": "implements the service definition of RegisterVmsInListenerRuleRequest",
      "fields": [
        {
          "name": "ListenerRuleName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ListenerRuleName",
          "parameterName": "listenerRuleName",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "RegisterVmsInListenerRuleRequest"
    },
    {
      "name": "RegisterVmsInListenerRuleResponse",
      "description": "implements the service definition of RegisterVmsInListenerRuleResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "RegisterVmsInListenerRuleResponse"
    },
    {
      "name": "RegisterVmsInLoadBalancerRequest",
      "description": "implements the service definition of RegisterVmsInLoadBalancerRequest",
      "fields": [
        {
          "name": "BackendVmsIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "BackendVmsIds",
          "parameterName": "backendVmsIds",
          "serialize": true
        },
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        }
      ],
      "typeName": "RegisterVmsInLoadBalancerRequest"
    },
    {
      "name": "RegisterVmsInLoadBalancerResponse",
      "description": "implements the service definition of RegisterVmsInLoadBalancerResponse",
      "fields": [
        {
          "name": "BackendVmsIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "BackendVmsIds",
          "parameterName": "backendVmsIds",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "RegisterVmsInLoadBalancerResponse"
    },
    {
      "name": "RejectNetPeeringRequest",
      "description": "implements the service definition of RejectNetPeeringRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetPeeringId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetPeeringId",
          "parameterName": "netPeeringId",
          "serialize": true
        }
      ],
      "typeName": "RejectNetPeeringRequest"
    },
    {
      "name": "RejectNetPeeringResponse",
      "description": "implements the service definition of RejectNetPeeringResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "RejectNetPeeringResponse"
    },
    {
      "name": "Removals",
      "description": "implements the service definition of Removals",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "GlobalPermission",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GlobalPermission",
          "parameterName": "globalPermission",
          "serialize": true
        }
      ],
      "typeName": "Removals"
    },
    {
      "name": "ReservedVms",
      "description": "implements the service definition of ReservedVms",
      "fields": [
        {
          "name": "CurrencyCode",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CurrencyCode",
          "parameterName": "currencyCode",
          "serialize": true
        },
        {
          "name": "OfferingType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OfferingType",
          "parameterName": "offeringType",
          "serialize": true
        },
        {
          "name": "ProductType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ProductType",
          "parameterName": "productType",
          "serialize": true
        },
        {
          "name": "RecurringCharges",
          "type": "RecurringCharges",
          "kind": 2,
          "nativeType": "RecurringCharges",
          "fieldName": "RecurringCharges",
          "parameterName": "recurringCharges",
          "serialize": true
        },
        {
          "name": "ReservedVmsId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ReservedVmsId",
          "parameterName": "reservedVmsId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "Tenancy",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Tenancy",
          "parameterName": "tenancy",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "VmCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "VmCount",
          "parameterName": "vmCount",
          "serialize": true
        }
      ],
      "typeName": "ReservedVms"
    },
    {
      "name": "ReservedVmsOffers",
      "description": "implements the service definition of ReservedVmsOffers",
      "fields": [
        {
          "name": "CurrencyCode",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CurrencyCode",
          "parameterName": "currencyCode",
          "serialize": true
        },
        {
          "name": "Duration",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Duration",
          "parameterName": "duration",
          "serialize": true
        },
        {
          "name": "FixedPrice",
          "type": "number",
          "format": "float",
          "nativeType": "int",
          "fieldName": "FixedPrice",
          "parameterName": "fixedPrice",
          "serialize": true
        },
        {
          "name": "OfferingType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OfferingType",
          "parameterName": "offeringType",
          "serialize": true
        },
        {
          "name": "PricingDetails",
          "type": "PricingDetails",
          "kind": 2,
          "nativeType": "PricingDetails",
          "fieldName": "PricingDetails",
          "parameterName": "pricingDetails",
          "serialize": true
        },
        {
          "name": "ProductType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ProductType",
          "parameterName": "productType",
          "serialize": true
        },
        {
          "name": "RecurringCharges",
          "type": "RecurringCharges",
          "kind": 2,
          "nativeType": "RecurringCharges",
          "fieldName": "RecurringCharges",
          "parameterName": "recurringCharges",
          "serialize": true
        },
        {
          "name": "ReservedVmsOfferId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ReservedVmsOfferId",
          "parameterName": "reservedVmsOfferId",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "Tenancy",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Tenancy",
          "parameterName": "tenancy",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "UsagePrice",
          "type": "number",
          "format": "float",
          "nativeType": "int",
          "fieldName": "UsagePrice",
          "parameterName": "usagePrice",
          "serialize": true
        }
      ],
      "typeName": "ReservedVmsOffers"
    },
    {
      "name": "ResetAccountPasswordRequest",
      "description": "implements the service definition of ResetAccountPasswordRequest",
      "fields": [
        {
          "name": "Password",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Password",
          "parameterName": "password",
          "serialize": true
        },
        {
          "name": "PasswordToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PasswordToken",
          "parameterName": "passwordToken",
          "serialize": true
        }
      ],
      "typeName": "ResetAccountPasswordRequest"
    },
    {
      "name": "ResetAccountPasswordResponse",
      "description": "implements the service definition of ResetAccountPasswordResponse",
      "fields": [
        {
          "name": "Email",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Email",
          "parameterName": "email",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "ResetAccountPasswordResponse"
    },
    {
      "name": "ResponseContext",
      "description": "implements the service definition of ResponseContext",
      "fields": [
        {
          "name": "RequestId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RequestId",
          "parameterName": "requestId",
          "serialize": true
        }
      ],
      "typeName": "ResponseContext"
    },
    {
      "name": "RoutePropagatingVpnGateways",
      "description": "implements the service definition of RoutePropagatingVpnGateways",
      "fields": [
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "RoutePropagatingVpnGateways"
    },
    {
      "name": "RouteTable",
      "description": "implements the service definition of RouteTable",
      "fields": [
        {
          "name": "Links",
          "type": "Links",
          "kind": 2,
          "nativeType": "Links",
          "fieldName": "Links",
          "parameterName": "links",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "RoutePropagatingVpnGateways",
          "type": "RoutePropagatingVpnGateways",
          "kind": 2,
          "nativeType": "RoutePropagatingVpnGateways",
          "fieldName": "RoutePropagatingVpnGateways",
          "parameterName": "routePropagatingVpnGateways",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        },
        {
          "name": "Routes",
          "type": "Routes",
          "kind": 2,
          "nativeType": "Routes",
          "fieldName": "Routes",
          "parameterName": "routes",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "RouteTable"
    },
    {
      "name": "RouteTables",
      "description": "implements the service definition of RouteTables",
      "fields": [
        {
          "name": "Links",
          "type": "Links",
          "kind": 2,
          "nativeType": "Links",
          "fieldName": "Links",
          "parameterName": "links",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "RoutePropagatingVpnGateways",
          "type": "RoutePropagatingVpnGateways",
          "kind": 2,
          "nativeType": "RoutePropagatingVpnGateways",
          "fieldName": "RoutePropagatingVpnGateways",
          "parameterName": "routePropagatingVpnGateways",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        },
        {
          "name": "Routes",
          "type": "Routes",
          "kind": 2,
          "nativeType": "Routes",
          "fieldName": "Routes",
          "parameterName": "routes",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "RouteTables"
    },
    {
      "name": "Routes",
      "description": "implements the service definition of Routes",
      "fields": [
        {
          "name": "CreationMethod",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CreationMethod",
          "parameterName": "creationMethod",
          "serialize": true
        },
        {
          "name": "DestinationIpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationIpRange",
          "parameterName": "destinationIpRange",
          "serialize": true
        },
        {
          "name": "DestinationPrefixListId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationPrefixListId",
          "parameterName": "destinationPrefixListId",
          "serialize": true
        },
        {
          "name": "GatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GatewayId",
          "parameterName": "gatewayId",
          "serialize": true
        },
        {
          "name": "NatServiceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NatServiceId",
          "parameterName": "natServiceId",
          "serialize": true
        },
        {
          "name": "NetPeeringId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetPeeringId",
          "parameterName": "netPeeringId",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "VmAccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmAccountId",
          "parameterName": "vmAccountId",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "Routes"
    },
    {
      "name": "SendResetPasswordEmailRequest",
      "description": "implements the service definition of SendResetPasswordEmailRequest",
      "fields": [
        {
          "name": "Email",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Email",
          "parameterName": "email",
          "serialize": true
        }
      ],
      "typeName": "SendResetPasswordEmailRequest"
    },
    {
      "name": "SendResetPasswordEmailResponse",
      "description": "implements the service definition of SendResetPasswordEmailResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "SendResetPasswordEmailResponse"
    },
    {
      "name": "ServerCertificate",
      "description": "implements the service definition of ServerCertificate",
      "fields": [
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        },
        {
          "name": "ServerCertificateId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateId",
          "parameterName": "serverCertificateId",
          "serialize": true
        },
        {
          "name": "ServerCertificateName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateName",
          "parameterName": "serverCertificateName",
          "serialize": true
        }
      ],
      "typeName": "ServerCertificate"
    },
    {
      "name": "ServerCertificates",
      "description": "implements the service definition of ServerCertificates",
      "fields": [
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        },
        {
          "name": "ServerCertificateId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateId",
          "parameterName": "serverCertificateId",
          "serialize": true
        },
        {
          "name": "ServerCertificateName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateName",
          "parameterName": "serverCertificateName",
          "serialize": true
        }
      ],
      "typeName": "ServerCertificates"
    },
    {
      "name": "Sites",
      "description": "implements the service definition of Sites",
      "fields": [
        {
          "name": "Code",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Code",
          "parameterName": "code",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        }
      ],
      "typeName": "Sites"
    },
    {
      "name": "SnapshotExportTask",
      "description": "implements the service definition of SnapshotExportTask",
      "fields": [
        {
          "name": "Comment",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Comment",
          "parameterName": "comment",
          "serialize": true
        },
        {
          "name": "OsuExport",
          "type": "OsuExport",
          "nativeType": "OsuExport",
          "fieldName": "OsuExport",
          "parameterName": "osuExport",
          "serialize": true
        },
        {
          "name": "Progress",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Progress",
          "parameterName": "progress",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "TaskId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "TaskId",
          "parameterName": "taskId",
          "serialize": true
        }
      ],
      "typeName": "SnapshotExportTask"
    },
    {
      "name": "SnapshotExportTasks",
      "description": "implements the service definition of SnapshotExportTasks",
      "fields": [
        {
          "name": "Comment",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Comment",
          "parameterName": "comment",
          "serialize": true
        },
        {
          "name": "OsuExport",
          "type": "OsuExport",
          "nativeType": "OsuExport",
          "fieldName": "OsuExport",
          "parameterName": "osuExport",
          "serialize": true
        },
        {
          "name": "Progress",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Progress",
          "parameterName": "progress",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "TaskId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "TaskId",
          "parameterName": "taskId",
          "serialize": true
        }
      ],
      "typeName": "SnapshotExportTasks"
    },
    {
      "name": "Snapshots",
      "description": "implements the service definition of Snapshots",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "Progress",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Progress",
          "parameterName": "progress",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        },
        {
          "name": "VolumeSize",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "VolumeSize",
          "parameterName": "volumeSize",
          "serialize": true
        }
      ],
      "typeName": "Snapshots"
    },
    {
      "name": "SourceFirewallRulesSet",
      "description": "implements the service definition of SourceFirewallRulesSet",
      "fields": [
        {
          "name": "FirewallRulesSetAccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetAccountId",
          "parameterName": "firewallRulesSetAccountId",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirewallRulesSetName",
          "parameterName": "firewallRulesSetName",
          "serialize": true
        }
      ],
      "typeName": "SourceFirewallRulesSet"
    },
    {
      "name": "SourceNet",
      "description": "implements the service definition of SourceNet",
      "fields": [
        {
          "name": "AccountId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "AccountId",
          "parameterName": "accountId",
          "serialize": true
        },
        {
          "name": "IpRanges",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "IpRanges",
          "parameterName": "ipRanges",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        }
      ],
      "typeName": "SourceNet"
    },
    {
      "name": "StartVmsRequest",
      "description": "implements the service definition of StartVmsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "StartVmsRequest"
    },
    {
      "name": "StartVmsResponse",
      "description": "implements the service definition of StartVmsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Vms",
          "type": "Vms",
          "kind": 2,
          "nativeType": "Vms",
          "fieldName": "Vms",
          "parameterName": "vms",
          "serialize": true
        }
      ],
      "typeName": "StartVmsResponse"
    },
    {
      "name": "State",
      "description": "implements the service definition of State",
      "fields": [
        {
          "name": "Message",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Message",
          "parameterName": "message",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        }
      ],
      "typeName": "State"
    },
    {
      "name": "StateComment",
      "description": "implements the service definition of StateComment",
      "fields": [
        {
          "name": "StateCode",
          "type": "string",
          "nativeType": "string",
          "fieldName": "StateCode",
          "parameterName": "stateCode",
          "serialize": true
        },
        {
          "name": "StateMessage",
          "type": "string",
          "nativeType": "string",
          "fieldName": "StateMessage",
          "parameterName": "stateMessage",
          "serialize": true
        }
      ],
      "typeName": "StateComment"
    },
    {
      "name": "StopVmsRequest",
      "description": "implements the service definition of StopVmsRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "ForceStop",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "ForceStop",
          "parameterName": "forceStop",
          "serialize": true
        },
        {
          "name": "VmIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "VmIds",
          "parameterName": "vmIds",
          "serialize": true
        }
      ],
      "typeName": "StopVmsRequest"
    },
    {
      "name": "StopVmsResponse",
      "description": "implements the service definition of StopVmsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "Vms",
          "type": "Vms",
          "kind": 2,
          "nativeType": "Vms",
          "fieldName": "Vms",
          "parameterName": "vms",
          "serialize": true
        }
      ],
      "typeName": "StopVmsResponse"
    },
    {
      "name": "SubRegions",
      "description": "implements the service definition of SubRegions",
      "fields": [
        {
          "name": "RegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RegionName",
          "parameterName": "regionName",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        }
      ],
      "typeName": "SubRegions"
    },
    {
      "name": "Subnet",
      "description": "implements the service definition of Subnet",
      "fields": [
        {
          "name": "AvailableIpsCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "AvailableIpsCount",
          "parameterName": "availableIpsCount",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "Subnet"
    },
    {
      "name": "Subnets",
      "description": "implements the service definition of Subnets",
      "fields": [
        {
          "name": "AvailableIpsCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "AvailableIpsCount",
          "parameterName": "availableIpsCount",
          "serialize": true
        },
        {
          "name": "IpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "IpRange",
          "parameterName": "ipRange",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        }
      ],
      "typeName": "Subnets"
    },
    {
      "name": "Tags",
      "description": "implements the service definition of Tags",
      "fields": [
        {
          "name": "Key",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Key",
          "parameterName": "key",
          "serialize": true
        },
        {
          "name": "Value",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Value",
          "parameterName": "value",
          "serialize": true
        }
      ],
      "typeName": "Tags"
    },
    {
      "name": "TargetRegion",
      "description": "implements the service definition of TargetRegion",
      "fields": [
        {
          "name": "RegionDomain",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RegionDomain",
          "parameterName": "regionDomain",
          "serialize": true
        },
        {
          "name": "RegionId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RegionId",
          "parameterName": "regionId",
          "serialize": true
        },
        {
          "name": "RegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RegionName",
          "parameterName": "regionName",
          "serialize": true
        }
      ],
      "typeName": "TargetRegion"
    },
    {
      "name": "Transition",
      "description": "implements the service definition of Transition",
      "fields": [
        {
          "name": "Code",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Code",
          "parameterName": "code",
          "serialize": true
        },
        {
          "name": "Message",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Message",
          "parameterName": "message",
          "serialize": true
        }
      ],
      "typeName": "Transition"
    },
    {
      "name": "Types",
      "description": "implements the service definition of Types",
      "fields": [
        {
          "name": "IsBsuOptimized",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsBsuOptimized",
          "parameterName": "isBsuOptimized",
          "serialize": true
        },
        {
          "name": "MaxPrivateIps",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MaxPrivateIps",
          "parameterName": "maxPrivateIps",
          "serialize": true
        },
        {
          "name": "MemorySize",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "MemorySize",
          "parameterName": "memorySize",
          "serialize": true
        },
        {
          "name": "Name",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Name",
          "parameterName": "name",
          "serialize": true
        },
        {
          "name": "StorageCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "StorageCount",
          "parameterName": "storageCount",
          "serialize": true
        },
        {
          "name": "StorageSize",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "StorageSize",
          "parameterName": "storageSize",
          "serialize": true
        },
        {
          "name": "VcoreCount",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "VcoreCount",
          "parameterName": "vcoreCount",
          "serialize": true
        }
      ],
      "typeName": "Types"
    },
    {
      "name": "UnlinkNetInternetGatewayRequest",
      "description": "implements the service definition of UnlinkNetInternetGatewayRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "NetInternetGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetInternetGatewayId",
          "parameterName": "netInternetGatewayId",
          "serialize": true
        }
      ],
      "typeName": "UnlinkNetInternetGatewayRequest"
    },
    {
      "name": "UnlinkNetInternetGatewayResponse",
      "description": "implements the service definition of UnlinkNetInternetGatewayResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UnlinkNetInternetGatewayResponse"
    },
    {
      "name": "UnlinkNicRequest",
      "description": "implements the service definition of UnlinkNicRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NicLinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicLinkId",
          "parameterName": "nicLinkId",
          "serialize": true
        }
      ],
      "typeName": "UnlinkNicRequest"
    },
    {
      "name": "UnlinkNicResponse",
      "description": "implements the service definition of UnlinkNicResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UnlinkNicResponse"
    },
    {
      "name": "UnlinkPolicyRequest",
      "description": "implements the service definition of UnlinkPolicyRequest",
      "fields": [
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        },
        {
          "name": "PolicyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PolicyId",
          "parameterName": "policyId",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "UnlinkPolicyRequest"
    },
    {
      "name": "UnlinkPolicyResponse",
      "description": "implements the service definition of UnlinkPolicyResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UnlinkPolicyResponse"
    },
    {
      "name": "UnlinkPrivateIpsRequest",
      "description": "implements the service definition of UnlinkPrivateIpsRequest",
      "fields": [
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "PrivateIps",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "PrivateIps",
          "parameterName": "privateIps",
          "serialize": true
        }
      ],
      "typeName": "UnlinkPrivateIpsRequest"
    },
    {
      "name": "UnlinkPrivateIpsResponse",
      "description": "implements the service definition of UnlinkPrivateIpsResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UnlinkPrivateIpsResponse"
    },
    {
      "name": "UnlinkPublicIpRequest",
      "description": "implements the service definition of UnlinkPublicIpRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "LinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LinkId",
          "parameterName": "linkId",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        }
      ],
      "typeName": "UnlinkPublicIpRequest"
    },
    {
      "name": "UnlinkPublicIpResponse",
      "description": "implements the service definition of UnlinkPublicIpResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UnlinkPublicIpResponse"
    },
    {
      "name": "UnlinkRouteTableRequest",
      "description": "implements the service definition of UnlinkRouteTableRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "LinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LinkId",
          "parameterName": "linkId",
          "serialize": true
        }
      ],
      "typeName": "UnlinkRouteTableRequest"
    },
    {
      "name": "UnlinkRouteTableResponse",
      "description": "implements the service definition of UnlinkRouteTableResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UnlinkRouteTableResponse"
    },
    {
      "name": "UnlinkVolumeRequest",
      "description": "implements the service definition of UnlinkVolumeRequest",
      "fields": [
        {
          "name": "DeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DeviceName",
          "parameterName": "deviceName",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "ForceUnlink",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "ForceUnlink",
          "parameterName": "forceUnlink",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "UnlinkVolumeRequest"
    },
    {
      "name": "UnlinkVolumeResponse",
      "description": "implements the service definition of UnlinkVolumeResponse",
      "fields": [
        {
          "name": "DeleteOnVmDeletion",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DeleteOnVmDeletion",
          "parameterName": "deleteOnVmDeletion",
          "serialize": true
        },
        {
          "name": "DeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DeviceName",
          "parameterName": "deviceName",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "UnlinkVolumeResponse"
    },
    {
      "name": "UnlinkVpnGatewayRequest",
      "description": "implements the service definition of UnlinkVpnGatewayRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "UnlinkVpnGatewayRequest"
    },
    {
      "name": "UnlinkVpnGatewayResponse",
      "description": "implements the service definition of UnlinkVpnGatewayResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UnlinkVpnGatewayResponse"
    },
    {
      "name": "UpdateAccountRequest",
      "description": "implements the service definition of UpdateAccountRequest",
      "fields": [
        {
          "name": "City",
          "type": "string",
          "nativeType": "string",
          "fieldName": "City",
          "parameterName": "city",
          "serialize": true
        },
        {
          "name": "CompanyName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "CompanyName",
          "parameterName": "companyName",
          "serialize": true
        },
        {
          "name": "Country",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Country",
          "parameterName": "country",
          "serialize": true
        },
        {
          "name": "Email",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Email",
          "parameterName": "email",
          "serialize": true
        },
        {
          "name": "FirstName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "FirstName",
          "parameterName": "firstName",
          "serialize": true
        },
        {
          "name": "JobTitle",
          "type": "string",
          "nativeType": "string",
          "fieldName": "JobTitle",
          "parameterName": "jobTitle",
          "serialize": true
        },
        {
          "name": "LastName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LastName",
          "parameterName": "lastName",
          "serialize": true
        },
        {
          "name": "Mobile",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Mobile",
          "parameterName": "mobile",
          "serialize": true
        },
        {
          "name": "Password",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Password",
          "parameterName": "password",
          "serialize": true
        },
        {
          "name": "Phone",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Phone",
          "parameterName": "phone",
          "serialize": true
        },
        {
          "name": "StateProvince",
          "type": "string",
          "nativeType": "string",
          "fieldName": "StateProvince",
          "parameterName": "stateProvince",
          "serialize": true
        },
        {
          "name": "VatNumber",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VatNumber",
          "parameterName": "vatNumber",
          "serialize": true
        },
        {
          "name": "ZipCode",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ZipCode",
          "parameterName": "zipCode",
          "serialize": true
        }
      ],
      "typeName": "UpdateAccountRequest"
    },
    {
      "name": "UpdateAccountResponse",
      "description": "implements the service definition of UpdateAccountResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateAccountResponse"
    },
    {
      "name": "UpdateApiKeyRequest",
      "description": "implements the service definition of UpdateApiKeyRequest",
      "fields": [
        {
          "name": "ApiKeyId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ApiKeyId",
          "parameterName": "apiKeyId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        }
      ],
      "typeName": "UpdateApiKeyRequest"
    },
    {
      "name": "UpdateApiKeyResponse",
      "description": "implements the service definition of UpdateApiKeyResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateApiKeyResponse"
    },
    {
      "name": "UpdateGroupRequest",
      "description": "implements the service definition of UpdateGroupRequest",
      "fields": [
        {
          "name": "GroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GroupName",
          "parameterName": "groupName",
          "serialize": true
        },
        {
          "name": "NewGroupName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NewGroupName",
          "parameterName": "newGroupName",
          "serialize": true
        },
        {
          "name": "NewPath",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NewPath",
          "parameterName": "newPath",
          "serialize": true
        }
      ],
      "typeName": "UpdateGroupRequest"
    },
    {
      "name": "UpdateGroupResponse",
      "description": "implements the service definition of UpdateGroupResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateGroupResponse"
    },
    {
      "name": "UpdateHealthCheckRequest",
      "description": "implements the service definition of UpdateHealthCheckRequest",
      "fields": [
        {
          "name": "HealthCheck",
          "type": "HealthCheck",
          "nativeType": "HealthCheck",
          "fieldName": "HealthCheck",
          "parameterName": "healthCheck",
          "serialize": true
        },
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        }
      ],
      "typeName": "UpdateHealthCheckRequest"
    },
    {
      "name": "UpdateHealthCheckResponse",
      "description": "implements the service definition of UpdateHealthCheckResponse",
      "fields": [
        {
          "name": "HealthCheck",
          "type": "HealthCheck",
          "nativeType": "HealthCheck",
          "fieldName": "HealthCheck",
          "parameterName": "healthCheck",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateHealthCheckResponse"
    },
    {
      "name": "UpdateImageAttributeRequest",
      "description": "implements the service definition of UpdateImageAttributeRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "Permission",
          "type": "Permission",
          "nativeType": "Permission",
          "fieldName": "Permission",
          "parameterName": "permission",
          "serialize": true
        }
      ],
      "typeName": "UpdateImageAttributeRequest"
    },
    {
      "name": "UpdateImageAttributeResponse",
      "description": "implements the service definition of UpdateImageAttributeResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateImageAttributeResponse"
    },
    {
      "name": "UpdateKeypairRequest",
      "description": "implements the service definition of UpdateKeypairRequest",
      "fields": [
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        },
        {
          "name": "PublicKey",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicKey",
          "parameterName": "publicKey",
          "serialize": true
        }
      ],
      "typeName": "UpdateKeypairRequest"
    },
    {
      "name": "UpdateKeypairResponse",
      "description": "implements the service definition of UpdateKeypairResponse",
      "fields": [
        {
          "name": "KeypairFingerprint",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairFingerprint",
          "parameterName": "keypairFingerprint",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateKeypairResponse"
    },
    {
      "name": "UpdateListenerRuleRequest",
      "description": "implements the service definition of UpdateListenerRuleRequest",
      "fields": [
        {
          "name": "Attribute",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Attribute",
          "parameterName": "attribute",
          "serialize": true
        },
        {
          "name": "ListenerRuleName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ListenerRuleName",
          "parameterName": "listenerRuleName",
          "serialize": true
        },
        {
          "name": "Value",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Value",
          "parameterName": "value",
          "serialize": true
        }
      ],
      "typeName": "UpdateListenerRuleRequest"
    },
    {
      "name": "UpdateListenerRuleResponse",
      "description": "implements the service definition of UpdateListenerRuleResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateListenerRuleResponse"
    },
    {
      "name": "UpdateLoadBalancerAttributesRequest",
      "description": "implements the service definition of UpdateLoadBalancerAttributesRequest",
      "fields": [
        {
          "name": "AccessLog",
          "type": "AccessLog",
          "nativeType": "AccessLog",
          "fieldName": "AccessLog",
          "parameterName": "accessLog",
          "serialize": true
        },
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        }
      ],
      "typeName": "UpdateLoadBalancerAttributesRequest"
    },
    {
      "name": "UpdateLoadBalancerAttributesResponse",
      "description": "implements the service definition of UpdateLoadBalancerAttributesResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateLoadBalancerAttributesResponse"
    },
    {
      "name": "UpdateLoadBalancerPoliciesRequest",
      "description": "implements the service definition of UpdateLoadBalancerPoliciesRequest",
      "fields": [
        {
          "name": "LoadBalancerName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LoadBalancerName",
          "parameterName": "loadBalancerName",
          "serialize": true
        },
        {
          "name": "LoadBalancerPort",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "LoadBalancerPort",
          "parameterName": "loadBalancerPort",
          "serialize": true
        },
        {
          "name": "PolicyNames",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "PolicyNames",
          "parameterName": "policyNames",
          "serialize": true
        }
      ],
      "typeName": "UpdateLoadBalancerPoliciesRequest"
    },
    {
      "name": "UpdateLoadBalancerPoliciesResponse",
      "description": "implements the service definition of UpdateLoadBalancerPoliciesResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateLoadBalancerPoliciesResponse"
    },
    {
      "name": "UpdateNetAccessRequest",
      "description": "implements the service definition of UpdateNetAccessRequest",
      "fields": [
        {
          "name": "AddRouteTableIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "AddRouteTableIds",
          "parameterName": "addRouteTableIds",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "NetAccessId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetAccessId",
          "parameterName": "netAccessId",
          "serialize": true
        },
        {
          "name": "RemoveRouteTableIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "RemoveRouteTableIds",
          "parameterName": "removeRouteTableIds",
          "serialize": true
        }
      ],
      "typeName": "UpdateNetAccessRequest"
    },
    {
      "name": "UpdateNetAccessResponse",
      "description": "implements the service definition of UpdateNetAccessResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateNetAccessResponse"
    },
    {
      "name": "UpdateNetOptionsRequest",
      "description": "implements the service definition of UpdateNetOptionsRequest",
      "fields": [
        {
          "name": "FirewallRulesSetLogging",
          "type": "FirewallRulesSetLogging",
          "nativeType": "FirewallRulesSetLogging",
          "fieldName": "FirewallRulesSetLogging",
          "parameterName": "firewallRulesSetLogging",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        }
      ],
      "typeName": "UpdateNetOptionsRequest"
    },
    {
      "name": "UpdateNetOptionsResponse",
      "description": "implements the service definition of UpdateNetOptionsResponse",
      "fields": [
        {
          "name": "FirewallRulesSetLogging",
          "type": "FirewallRulesSetLogging",
          "nativeType": "FirewallRulesSetLogging",
          "fieldName": "FirewallRulesSetLogging",
          "parameterName": "firewallRulesSetLogging",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateNetOptionsResponse"
    },
    {
      "name": "UpdateNicAttributeRequest",
      "description": "implements the service definition of UpdateNicAttributeRequest",
      "fields": [
        {
          "name": "Description",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Description",
          "parameterName": "description",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "FirewallRulesSetIds",
          "parameterName": "firewallRulesSetIds",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "NicLink",
          "type": "NicLink",
          "nativeType": "NicLink",
          "fieldName": "NicLink",
          "parameterName": "nicLink",
          "serialize": true
        }
      ],
      "typeName": "UpdateNicAttributeRequest"
    },
    {
      "name": "UpdateNicAttributeResponse",
      "description": "implements the service definition of UpdateNicAttributeResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateNicAttributeResponse"
    },
    {
      "name": "UpdateRoutePropagationRequest",
      "description": "implements the service definition of UpdateRoutePropagationRequest",
      "fields": [
        {
          "name": "Enable",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "Enable",
          "parameterName": "enable",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "UpdateRoutePropagationRequest"
    },
    {
      "name": "UpdateRoutePropagationResponse",
      "description": "implements the service definition of UpdateRoutePropagationResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateRoutePropagationResponse"
    },
    {
      "name": "UpdateRouteRequest",
      "description": "implements the service definition of UpdateRouteRequest",
      "fields": [
        {
          "name": "DestinationIpRange",
          "type": "string",
          "nativeType": "string",
          "fieldName": "DestinationIpRange",
          "parameterName": "destinationIpRange",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "GatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "GatewayId",
          "parameterName": "gatewayId",
          "serialize": true
        },
        {
          "name": "NatServiceId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NatServiceId",
          "parameterName": "natServiceId",
          "serialize": true
        },
        {
          "name": "NetPeeringId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetPeeringId",
          "parameterName": "netPeeringId",
          "serialize": true
        },
        {
          "name": "NicId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NicId",
          "parameterName": "nicId",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "UpdateRouteRequest"
    },
    {
      "name": "UpdateRouteResponse",
      "description": "implements the service definition of UpdateRouteResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateRouteResponse"
    },
    {
      "name": "UpdateRouteTableLinkRequest",
      "description": "implements the service definition of UpdateRouteTableLinkRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "LinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LinkId",
          "parameterName": "linkId",
          "serialize": true
        },
        {
          "name": "RouteTableId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RouteTableId",
          "parameterName": "routeTableId",
          "serialize": true
        }
      ],
      "typeName": "UpdateRouteTableLinkRequest"
    },
    {
      "name": "UpdateRouteTableLinkResponse",
      "description": "implements the service definition of UpdateRouteTableLinkResponse",
      "fields": [
        {
          "name": "LinkId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "LinkId",
          "parameterName": "linkId",
          "serialize": true
        },
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateRouteTableLinkResponse"
    },
    {
      "name": "UpdateServerCertificateRequest",
      "description": "implements the service definition of UpdateServerCertificateRequest",
      "fields": [
        {
          "name": "NewPath",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NewPath",
          "parameterName": "newPath",
          "serialize": true
        },
        {
          "name": "NewServerCertificateName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NewServerCertificateName",
          "parameterName": "newServerCertificateName",
          "serialize": true
        },
        {
          "name": "ServerCertificateName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ServerCertificateName",
          "parameterName": "serverCertificateName",
          "serialize": true
        }
      ],
      "typeName": "UpdateServerCertificateRequest"
    },
    {
      "name": "UpdateServerCertificateResponse",
      "description": "implements the service definition of UpdateServerCertificateResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateServerCertificateResponse"
    },
    {
      "name": "UpdateSnapshotAttributeRequest",
      "description": "implements the service definition of UpdateSnapshotAttributeRequest",
      "fields": [
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "PermissionsToCreateVolumes",
          "type": "PermissionsToCreateVolumes",
          "nativeType": "PermissionsToCreateVolumes",
          "fieldName": "PermissionsToCreateVolumes",
          "parameterName": "permissionsToCreateVolumes",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        }
      ],
      "typeName": "UpdateSnapshotAttributeRequest"
    },
    {
      "name": "UpdateSnapshotAttributeResponse",
      "description": "implements the service definition of UpdateSnapshotAttributeResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateSnapshotAttributeResponse"
    },
    {
      "name": "UpdateUserRequest",
      "description": "implements the service definition of UpdateUserRequest",
      "fields": [
        {
          "name": "NewPath",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NewPath",
          "parameterName": "newPath",
          "serialize": true
        },
        {
          "name": "NewUserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NewUserName",
          "parameterName": "newUserName",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "UpdateUserRequest"
    },
    {
      "name": "UpdateUserResponse",
      "description": "implements the service definition of UpdateUserResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateUserResponse"
    },
    {
      "name": "UpdateVmAttributeRequest",
      "description": "implements the service definition of UpdateVmAttributeRequest",
      "fields": [
        {
          "name": "BlockDeviceMappings",
          "type": "BlockDeviceMappings",
          "kind": 2,
          "nativeType": "BlockDeviceMappings",
          "fieldName": "BlockDeviceMappings",
          "parameterName": "blockDeviceMappings",
          "serialize": true
        },
        {
          "name": "BsuOptimized",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "BsuOptimized",
          "parameterName": "bsuOptimized",
          "serialize": true
        },
        {
          "name": "DeletionProtection",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DeletionProtection",
          "parameterName": "deletionProtection",
          "serialize": true
        },
        {
          "name": "DryRun",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "DryRun",
          "parameterName": "dryRun",
          "serialize": true
        },
        {
          "name": "FirewallRulesSetIds",
          "type": "string",
          "kind": 2,
          "nativeType": "string",
          "fieldName": "FirewallRulesSetIds",
          "parameterName": "firewallRulesSetIds",
          "serialize": true
        },
        {
          "name": "IsSourceDestChecked",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsSourceDestChecked",
          "parameterName": "isSourceDestChecked",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "UserData",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserData",
          "parameterName": "userData",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        },
        {
          "name": "VmInitiatedShutdownBehavior",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmInitiatedShutdownBehavior",
          "parameterName": "vmInitiatedShutdownBehavior",
          "serialize": true
        }
      ],
      "typeName": "UpdateVmAttributeRequest"
    },
    {
      "name": "UpdateVmAttributeResponse",
      "description": "implements the service definition of UpdateVmAttributeResponse",
      "fields": [
        {
          "name": "ResponseContext",
          "type": "ResponseContext",
          "nativeType": "ResponseContext",
          "fieldName": "ResponseContext",
          "parameterName": "responseContext",
          "serialize": true
        }
      ],
      "typeName": "UpdateVmAttributeResponse"
    },
    {
      "name": "User",
      "description": "implements the service definition of User",
      "fields": [
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        },
        {
          "name": "UserId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserId",
          "parameterName": "userId",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "User"
    },
    {
      "name": "Users",
      "description": "implements the service definition of Users",
      "fields": [
        {
          "name": "Path",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Path",
          "parameterName": "path",
          "serialize": true
        },
        {
          "name": "UserId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserId",
          "parameterName": "userId",
          "serialize": true
        },
        {
          "name": "UserName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "UserName",
          "parameterName": "userName",
          "serialize": true
        }
      ],
      "typeName": "Users"
    },
    {
      "name": "VmStates",
      "description": "implements the service definition of VmStates",
      "fields": [
        {
          "name": "MaintenanceEvents",
          "type": "MaintenanceEvents",
          "kind": 2,
          "nativeType": "MaintenanceEvents",
          "fieldName": "MaintenanceEvents",
          "parameterName": "maintenanceEvents",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        },
        {
          "name": "VmState",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmState",
          "parameterName": "vmState",
          "serialize": true
        }
      ],
      "typeName": "VmStates"
    },
    {
      "name": "Vms",
      "description": "implements the service definition of Vms",
      "fields": [
        {
          "name": "Architecture",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Architecture",
          "parameterName": "architecture",
          "serialize": true
        },
        {
          "name": "BlockDeviceMappings",
          "type": "BlockDeviceMappings",
          "kind": 2,
          "nativeType": "BlockDeviceMappings",
          "fieldName": "BlockDeviceMappings",
          "parameterName": "blockDeviceMappings",
          "serialize": true
        },
        {
          "name": "BsuOptimized",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "BsuOptimized",
          "parameterName": "bsuOptimized",
          "serialize": true
        },
        {
          "name": "ClientToken",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientToken",
          "parameterName": "clientToken",
          "serialize": true
        },
        {
          "name": "Comment",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Comment",
          "parameterName": "comment",
          "serialize": true
        },
        {
          "name": "FirewallRulesSets",
          "type": "FirewallRulesSets",
          "kind": 2,
          "nativeType": "FirewallRulesSets",
          "fieldName": "FirewallRulesSets",
          "parameterName": "firewallRulesSets",
          "serialize": true
        },
        {
          "name": "ImageId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ImageId",
          "parameterName": "imageId",
          "serialize": true
        },
        {
          "name": "IsSourceDestChecked",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "IsSourceDestChecked",
          "parameterName": "isSourceDestChecked",
          "serialize": true
        },
        {
          "name": "KeypairName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "KeypairName",
          "parameterName": "keypairName",
          "serialize": true
        },
        {
          "name": "LaunchNumber",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "LaunchNumber",
          "parameterName": "launchNumber",
          "serialize": true
        },
        {
          "name": "NetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "NetId",
          "parameterName": "netId",
          "serialize": true
        },
        {
          "name": "Nics",
          "type": "Nics",
          "kind": 2,
          "nativeType": "Nics",
          "fieldName": "Nics",
          "parameterName": "nics",
          "serialize": true
        },
        {
          "name": "OsFamily",
          "type": "string",
          "nativeType": "string",
          "fieldName": "OsFamily",
          "parameterName": "osFamily",
          "serialize": true
        },
        {
          "name": "Placement",
          "type": "Placement",
          "nativeType": "Placement",
          "fieldName": "Placement",
          "parameterName": "placement",
          "serialize": true
        },
        {
          "name": "PrivateDnsName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrivateDnsName",
          "parameterName": "privateDnsName",
          "serialize": true
        },
        {
          "name": "PrivateIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PrivateIp",
          "parameterName": "privateIp",
          "serialize": true
        },
        {
          "name": "ProductCodes",
          "type": "ProductCodes",
          "kind": 2,
          "nativeType": "ProductCodes",
          "fieldName": "ProductCodes",
          "parameterName": "productCodes",
          "serialize": true
        },
        {
          "name": "PublicDnsName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicDnsName",
          "parameterName": "publicDnsName",
          "serialize": true
        },
        {
          "name": "PublicIp",
          "type": "string",
          "nativeType": "string",
          "fieldName": "PublicIp",
          "parameterName": "publicIp",
          "serialize": true
        },
        {
          "name": "ReservationId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ReservationId",
          "parameterName": "reservationId",
          "serialize": true
        },
        {
          "name": "RootDeviceName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RootDeviceName",
          "parameterName": "rootDeviceName",
          "serialize": true
        },
        {
          "name": "RootDeviceType",
          "type": "string",
          "nativeType": "string",
          "fieldName": "RootDeviceType",
          "parameterName": "rootDeviceType",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubnetId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubnetId",
          "parameterName": "subnetId",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Transition",
          "type": "Transition",
          "nativeType": "Transition",
          "fieldName": "Transition",
          "parameterName": "transition",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "VmId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VmId",
          "parameterName": "vmId",
          "serialize": true
        }
      ],
      "typeName": "Vms"
    },
    {
      "name": "Volumes",
      "description": "implements the service definition of Volumes",
      "fields": [
        {
          "name": "Iops",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Iops",
          "parameterName": "iops",
          "serialize": true
        },
        {
          "name": "LinkedVolumes",
          "type": "LinkedVolumes",
          "kind": 2,
          "nativeType": "LinkedVolumes",
          "fieldName": "LinkedVolumes",
          "parameterName": "linkedVolumes",
          "serialize": true
        },
        {
          "name": "Size",
          "type": "integer",
          "nativeType": "int64",
          "fieldName": "Size",
          "parameterName": "size",
          "serialize": true
        },
        {
          "name": "SnapshotId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SnapshotId",
          "parameterName": "snapshotId",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "SubRegionName",
          "type": "string",
          "nativeType": "string",
          "fieldName": "SubRegionName",
          "parameterName": "subRegionName",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "VolumeId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VolumeId",
          "parameterName": "volumeId",
          "serialize": true
        }
      ],
      "typeName": "Volumes"
    },
    {
      "name": "VpnConnection",
      "description": "implements the service definition of VpnConnection",
      "fields": [
        {
          "name": "ClientEndpointConfiguration",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientEndpointConfiguration",
          "parameterName": "clientEndpointConfiguration",
          "serialize": true
        },
        {
          "name": "ClientEndpointId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientEndpointId",
          "parameterName": "clientEndpointId",
          "serialize": true
        },
        {
          "name": "Routes",
          "type": "Routes",
          "kind": 2,
          "nativeType": "Routes",
          "fieldName": "Routes",
          "parameterName": "routes",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "StaticRoutesOnly",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "StaticRoutesOnly",
          "parameterName": "staticRoutesOnly",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "VpnConnectionId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnConnectionId",
          "parameterName": "vpnConnectionId",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "VpnConnection"
    },
    {
      "name": "VpnGateway",
      "description": "implements the service definition of VpnGateway",
      "fields": [
        {
          "name": "NetToVpnGatewayLinks",
          "type": "NetToVpnGatewayLinks",
          "kind": 2,
          "nativeType": "NetToVpnGatewayLinks",
          "fieldName": "NetToVpnGatewayLinks",
          "parameterName": "netToVpnGatewayLinks",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "VpnGateway"
    },
    {
      "name": "VpnGateways",
      "description": "implements the service definition of VpnGateways",
      "fields": [
        {
          "name": "NetToVpnGatewayLinks",
          "type": "NetToVpnGatewayLinks",
          "kind": 2,
          "nativeType": "NetToVpnGatewayLinks",
          "fieldName": "NetToVpnGatewayLinks",
          "parameterName": "netToVpnGatewayLinks",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "VpnGateways"
    },
    {
      "name": "With",
      "description": "implements the service definition of With",
      "fields": [
        {
          "name": "CallDuration",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "CallDuration",
          "parameterName": "callDuration",
          "serialize": true
        },
        {
          "name": "QueryAccessKey",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "QueryAccessKey",
          "parameterName": "queryAccessKey",
          "serialize": true
        },
        {
          "name": "QueryApiName",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "QueryApiName",
          "parameterName": "queryApiName",
          "serialize": true
        },
        {
          "name": "QueryApiVersion",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "QueryApiVersion",
          "parameterName": "queryApiVersion",
          "serialize": true
        },
        {
          "name": "QueryCallName",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "QueryCallName",
          "parameterName": "queryCallName",
          "serialize": true
        },
        {
          "name": "QueryDate",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "QueryDate",
          "parameterName": "queryDate",
          "serialize": true
        },
        {
          "name": "QueryIpAddress",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "QueryIpAddress",
          "parameterName": "queryIpAddress",
          "serialize": true
        },
        {
          "name": "QueryRaw",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "QueryRaw",
          "parameterName": "queryRaw",
          "serialize": true
        },
        {
          "name": "QuerySize",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "QuerySize",
          "parameterName": "querySize",
          "serialize": true
        },
        {
          "name": "QueryUserAgent",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "QueryUserAgent",
          "parameterName": "queryUserAgent",
          "serialize": true
        },
        {
          "name": "ResponseId",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "ResponseId",
          "parameterName": "responseId",
          "serialize": true
        },
        {
          "name": "ResponseSize",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "ResponseSize",
          "parameterName": "responseSize",
          "serialize": true
        },
        {
          "name": "ResponseStatusCode",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "ResponseStatusCode",
          "parameterName": "responseStatusCode",
          "serialize": true
        }
      ],
      "typeName": "With"
    },
    {
      "name": "vpnConnections",
      "description": "implements the service definition of vpnConnections",
      "fields": [
        {
          "name": "ClientEndpointConfiguration",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientEndpointConfiguration",
          "parameterName": "clientEndpointConfiguration",
          "serialize": true
        },
        {
          "name": "ClientEndpointId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "ClientEndpointId",
          "parameterName": "clientEndpointId",
          "serialize": true
        },
        {
          "name": "Routes",
          "type": "Routes",
          "kind": 2,
          "nativeType": "Routes",
          "fieldName": "Routes",
          "parameterName": "routes",
          "serialize": true
        },
        {
          "name": "State",
          "type": "string",
          "nativeType": "string",
          "fieldName": "State",
          "parameterName": "state",
          "serialize": true
        },
        {
          "name": "StaticRoutesOnly",
          "type": "boolean",
          "nativeType": "Boolean",
          "fieldName": "StaticRoutesOnly",
          "parameterName": "staticRoutesOnly",
          "serialize": true
        },
        {
          "name": "Tags",
          "type": "Tags",
          "kind": 2,
          "nativeType": "Tags",
          "fieldName": "Tags",
          "parameterName": "tags",
          "serialize": true
        },
        {
          "name": "Type",
          "type": "string",
          "nativeType": "string",
          "fieldName": "Type",
          "parameterName": "myType",
          "serialize": true
        },
        {
          "name": "VpnConnectionId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnConnectionId",
          "parameterName": "vpnConnectionId",
          "serialize": true
        },
        {
          "name": "VpnGatewayId",
          "type": "string",
          "nativeType": "string",
          "fieldName": "VpnGatewayId",
          "parameterName": "vpnGatewayId",
          "serialize": true
        }
      ],
      "typeName": "VpnConnections"
    },
    {
      "name": "POST_AcceptNetPeeringParameters",
      "description": "POST_AcceptNetPeeringParameters holds parameters to POST_AcceptNetPeering",
      "fields": [
        {
          "name": "acceptnetpeeringrequest",
          "type": "AcceptNetPeeringRequest",
          "nativeType": "AcceptNetPeeringRequest",
          "fieldName": "Acceptnetpeeringrequest",
          "parameterName": "acceptnetpeeringrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_AcceptNetPeeringParameters"
    },
    {
      "name": "POST_AcceptNetPeeringResponses",
      "description": "POST_AcceptNetPeeringResponses holds responses of POST_AcceptNetPeering",
      "fields": [
        {
          "name": "200",
          "type": "AcceptNetPeeringResponse",
          "kind": 3,
          "nativeType": "AcceptNetPeeringResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_AcceptNetPeeringResponses"
    },
    {
      "name": "POST_AuthenticateAccountParameters",
      "description": "POST_AuthenticateAccountParameters holds parameters to POST_AuthenticateAccount",
      "fields": [
        {
          "name": "authenticateaccountrequest",
          "type": "AuthenticateAccountRequest",
          "nativeType": "AuthenticateAccountRequest",
          "fieldName": "Authenticateaccountrequest",
          "parameterName": "authenticateaccountrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_AuthenticateAccountParameters"
    },
    {
      "name": "POST_AuthenticateAccountResponses",
      "description": "POST_AuthenticateAccountResponses holds responses of POST_AuthenticateAccount",
      "fields": [
        {
          "name": "200",
          "type": "AuthenticateAccountResponse",
          "kind": 3,
          "nativeType": "AuthenticateAccountResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_AuthenticateAccountResponses"
    },
    {
      "name": "POST_CancelExportTaskParameters",
      "description": "POST_CancelExportTaskParameters holds parameters to POST_CancelExportTask",
      "fields": [
        {
          "name": "cancelexporttaskrequest",
          "type": "CancelExportTaskRequest",
          "nativeType": "CancelExportTaskRequest",
          "fieldName": "Cancelexporttaskrequest",
          "parameterName": "cancelexporttaskrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CancelExportTaskParameters"
    },
    {
      "name": "POST_CancelExportTaskResponses",
      "description": "POST_CancelExportTaskResponses holds responses of POST_CancelExportTask",
      "fields": [
        {
          "name": "200",
          "type": "CancelExportTaskResponse",
          "kind": 3,
          "nativeType": "CancelExportTaskResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CancelExportTaskResponses"
    },
    {
      "name": "POST_CheckSignatureParameters",
      "description": "POST_CheckSignatureParameters holds parameters to POST_CheckSignature",
      "fields": [
        {
          "name": "checksignaturerequest",
          "type": "CheckSignatureRequest",
          "nativeType": "CheckSignatureRequest",
          "fieldName": "Checksignaturerequest",
          "parameterName": "checksignaturerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CheckSignatureParameters"
    },
    {
      "name": "POST_CheckSignatureResponses",
      "description": "POST_CheckSignatureResponses holds responses of POST_CheckSignature",
      "fields": [
        {
          "name": "200",
          "type": "CheckSignatureResponse",
          "kind": 3,
          "nativeType": "CheckSignatureResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CheckSignatureResponses"
    },
    {
      "name": "POST_CopyAccountParameters",
      "description": "POST_CopyAccountParameters holds parameters to POST_CopyAccount",
      "fields": [
        {
          "name": "copyaccountrequest",
          "type": "CopyAccountRequest",
          "nativeType": "CopyAccountRequest",
          "fieldName": "Copyaccountrequest",
          "parameterName": "copyaccountrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CopyAccountParameters"
    },
    {
      "name": "POST_CopyAccountResponses",
      "description": "POST_CopyAccountResponses holds responses of POST_CopyAccount",
      "fields": [
        {
          "name": "200",
          "type": "CopyAccountResponse",
          "kind": 3,
          "nativeType": "CopyAccountResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CopyAccountResponses"
    },
    {
      "name": "POST_CopyImageParameters",
      "description": "POST_CopyImageParameters holds parameters to POST_CopyImage",
      "fields": [
        {
          "name": "copyimagerequest",
          "type": "CopyImageRequest",
          "nativeType": "CopyImageRequest",
          "fieldName": "Copyimagerequest",
          "parameterName": "copyimagerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CopyImageParameters"
    },
    {
      "name": "POST_CopyImageResponses",
      "description": "POST_CopyImageResponses holds responses of POST_CopyImage",
      "fields": [
        {
          "name": "200",
          "type": "CopyImageResponse",
          "kind": 3,
          "nativeType": "CopyImageResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CopyImageResponses"
    },
    {
      "name": "POST_CopySnapshotParameters",
      "description": "POST_CopySnapshotParameters holds parameters to POST_CopySnapshot",
      "fields": [
        {
          "name": "copysnapshotrequest",
          "type": "CopySnapshotRequest",
          "nativeType": "CopySnapshotRequest",
          "fieldName": "Copysnapshotrequest",
          "parameterName": "copysnapshotrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CopySnapshotParameters"
    },
    {
      "name": "POST_CopySnapshotResponses",
      "description": "POST_CopySnapshotResponses holds responses of POST_CopySnapshot",
      "fields": [
        {
          "name": "200",
          "type": "CopySnapshotResponse",
          "kind": 3,
          "nativeType": "CopySnapshotResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CopySnapshotResponses"
    },
    {
      "name": "POST_CreateAccountParameters",
      "description": "POST_CreateAccountParameters holds parameters to POST_CreateAccount",
      "fields": [
        {
          "name": "createaccountrequest",
          "type": "CreateAccountRequest",
          "nativeType": "CreateAccountRequest",
          "fieldName": "Createaccountrequest",
          "parameterName": "createaccountrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateAccountParameters"
    },
    {
      "name": "POST_CreateAccountResponses",
      "description": "POST_CreateAccountResponses holds responses of POST_CreateAccount",
      "fields": [
        {
          "name": "200",
          "type": "CreateAccountResponse",
          "kind": 3,
          "nativeType": "CreateAccountResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateAccountResponses"
    },
    {
      "name": "POST_CreateApiKeyParameters",
      "description": "POST_CreateApiKeyParameters holds parameters to POST_CreateApiKey",
      "fields": [
        {
          "name": "createapikeyrequest",
          "type": "CreateApiKeyRequest",
          "nativeType": "CreateApiKeyRequest",
          "fieldName": "Createapikeyrequest",
          "parameterName": "createapikeyrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateApiKeyParameters"
    },
    {
      "name": "POST_CreateApiKeyResponses",
      "description": "POST_CreateApiKeyResponses holds responses of POST_CreateApiKey",
      "fields": [
        {
          "name": "200",
          "type": "CreateApiKeyResponse",
          "kind": 3,
          "nativeType": "CreateApiKeyResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateApiKeyResponses"
    },
    {
      "name": "POST_CreateClientEndpointParameters",
      "description": "POST_CreateClientEndpointParameters holds parameters to POST_CreateClientEndpoint",
      "fields": [
        {
          "name": "createclientendpointrequest",
          "type": "CreateClientEndpointRequest",
          "nativeType": "CreateClientEndpointRequest",
          "fieldName": "Createclientendpointrequest",
          "parameterName": "createclientendpointrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateClientEndpointParameters"
    },
    {
      "name": "POST_CreateClientEndpointResponses",
      "description": "POST_CreateClientEndpointResponses holds responses of POST_CreateClientEndpoint",
      "fields": [
        {
          "name": "200",
          "type": "CreateClientEndpointResponse",
          "kind": 3,
          "nativeType": "CreateClientEndpointResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateClientEndpointResponses"
    },
    {
      "name": "POST_CreateDhcpOptionsParameters",
      "description": "POST_CreateDhcpOptionsParameters holds parameters to POST_CreateDhcpOptions",
      "fields": [
        {
          "name": "createdhcpoptionsrequest",
          "type": "CreateDhcpOptionsRequest",
          "nativeType": "CreateDhcpOptionsRequest",
          "fieldName": "Createdhcpoptionsrequest",
          "parameterName": "createdhcpoptionsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateDhcpOptionsParameters"
    },
    {
      "name": "POST_CreateDhcpOptionsResponses",
      "description": "POST_CreateDhcpOptionsResponses holds responses of POST_CreateDhcpOptions",
      "fields": [
        {
          "name": "200",
          "type": "CreateDhcpOptionsResponse",
          "kind": 3,
          "nativeType": "CreateDhcpOptionsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateDhcpOptionsResponses"
    },
    {
      "name": "POST_CreateDirectLinkParameters",
      "description": "POST_CreateDirectLinkParameters holds parameters to POST_CreateDirectLink",
      "fields": [
        {
          "name": "createdirectlinkrequest",
          "type": "CreateDirectLinkRequest",
          "nativeType": "CreateDirectLinkRequest",
          "fieldName": "Createdirectlinkrequest",
          "parameterName": "createdirectlinkrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateDirectLinkParameters"
    },
    {
      "name": "POST_CreateDirectLinkResponses",
      "description": "POST_CreateDirectLinkResponses holds responses of POST_CreateDirectLink",
      "fields": [
        {
          "name": "200",
          "type": "CreateDirectLinkResponse",
          "kind": 3,
          "nativeType": "CreateDirectLinkResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateDirectLinkResponses"
    },
    {
      "name": "POST_CreateDirectLinkInterfaceParameters",
      "description": "POST_CreateDirectLinkInterfaceParameters holds parameters to POST_CreateDirectLinkInterface",
      "fields": [
        {
          "name": "createdirectlinkinterfacerequest",
          "type": "CreateDirectLinkInterfaceRequest",
          "nativeType": "CreateDirectLinkInterfaceRequest",
          "fieldName": "Createdirectlinkinterfacerequest",
          "parameterName": "createdirectlinkinterfacerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateDirectLinkInterfaceParameters"
    },
    {
      "name": "POST_CreateDirectLinkInterfaceResponses",
      "description": "POST_CreateDirectLinkInterfaceResponses holds responses of POST_CreateDirectLinkInterface",
      "fields": [
        {
          "name": "200",
          "type": "CreateDirectLinkInterfaceResponse",
          "kind": 3,
          "nativeType": "CreateDirectLinkInterfaceResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateDirectLinkInterfaceResponses"
    },
    {
      "name": "POST_CreateFirewallRuleInboundParameters",
      "description": "POST_CreateFirewallRuleInboundParameters holds parameters to POST_CreateFirewallRuleInbound",
      "fields": [
        {
          "name": "createfirewallruleinboundrequest",
          "type": "CreateFirewallRuleInboundRequest",
          "nativeType": "CreateFirewallRuleInboundRequest",
          "fieldName": "Createfirewallruleinboundrequest",
          "parameterName": "createfirewallruleinboundrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateFirewallRuleInboundParameters"
    },
    {
      "name": "POST_CreateFirewallRuleInboundResponses",
      "description": "POST_CreateFirewallRuleInboundResponses holds responses of POST_CreateFirewallRuleInbound",
      "fields": [
        {
          "name": "200",
          "type": "CreateFirewallRuleInboundResponse",
          "kind": 3,
          "nativeType": "CreateFirewallRuleInboundResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateFirewallRuleInboundResponses"
    },
    {
      "name": "POST_CreateFirewallRuleOutboundParameters",
      "description": "POST_CreateFirewallRuleOutboundParameters holds parameters to POST_CreateFirewallRuleOutbound",
      "fields": [
        {
          "name": "createfirewallruleoutboundrequest",
          "type": "CreateFirewallRuleOutboundRequest",
          "nativeType": "CreateFirewallRuleOutboundRequest",
          "fieldName": "Createfirewallruleoutboundrequest",
          "parameterName": "createfirewallruleoutboundrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateFirewallRuleOutboundParameters"
    },
    {
      "name": "POST_CreateFirewallRuleOutboundResponses",
      "description": "POST_CreateFirewallRuleOutboundResponses holds responses of POST_CreateFirewallRuleOutbound",
      "fields": [
        {
          "name": "200",
          "type": "CreateFirewallRuleOutboundResponse",
          "kind": 3,
          "nativeType": "CreateFirewallRuleOutboundResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateFirewallRuleOutboundResponses"
    },
    {
      "name": "POST_CreateFirewallRulesSetParameters",
      "description": "POST_CreateFirewallRulesSetParameters holds parameters to POST_CreateFirewallRulesSet",
      "fields": [
        {
          "name": "createfirewallrulessetrequest",
          "type": "CreateFirewallRulesSetRequest",
          "nativeType": "CreateFirewallRulesSetRequest",
          "fieldName": "Createfirewallrulessetrequest",
          "parameterName": "createfirewallrulessetrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateFirewallRulesSetParameters"
    },
    {
      "name": "POST_CreateFirewallRulesSetResponses",
      "description": "POST_CreateFirewallRulesSetResponses holds responses of POST_CreateFirewallRulesSet",
      "fields": [
        {
          "name": "200",
          "type": "CreateFirewallRulesSetResponse",
          "kind": 3,
          "nativeType": "CreateFirewallRulesSetResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateFirewallRulesSetResponses"
    },
    {
      "name": "POST_CreateGroupParameters",
      "description": "POST_CreateGroupParameters holds parameters to POST_CreateGroup",
      "fields": [
        {
          "name": "creategrouprequest",
          "type": "CreateGroupRequest",
          "nativeType": "CreateGroupRequest",
          "fieldName": "Creategrouprequest",
          "parameterName": "creategrouprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateGroupParameters"
    },
    {
      "name": "POST_CreateGroupResponses",
      "description": "POST_CreateGroupResponses holds responses of POST_CreateGroup",
      "fields": [
        {
          "name": "200",
          "type": "CreateGroupResponse",
          "kind": 3,
          "nativeType": "CreateGroupResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateGroupResponses"
    },
    {
      "name": "POST_CreateImageParameters",
      "description": "POST_CreateImageParameters holds parameters to POST_CreateImage",
      "fields": [
        {
          "name": "createimagerequest",
          "type": "CreateImageRequest",
          "nativeType": "CreateImageRequest",
          "fieldName": "Createimagerequest",
          "parameterName": "createimagerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateImageParameters"
    },
    {
      "name": "POST_CreateImageResponses",
      "description": "POST_CreateImageResponses holds responses of POST_CreateImage",
      "fields": [
        {
          "name": "200",
          "type": "CreateImageResponse",
          "kind": 3,
          "nativeType": "CreateImageResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateImageResponses"
    },
    {
      "name": "POST_CreateImageExportTaskParameters",
      "description": "POST_CreateImageExportTaskParameters holds parameters to POST_CreateImageExportTask",
      "fields": [
        {
          "name": "createimageexporttaskrequest",
          "type": "CreateImageExportTaskRequest",
          "nativeType": "CreateImageExportTaskRequest",
          "fieldName": "Createimageexporttaskrequest",
          "parameterName": "createimageexporttaskrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateImageExportTaskParameters"
    },
    {
      "name": "POST_CreateImageExportTaskResponses",
      "description": "POST_CreateImageExportTaskResponses holds responses of POST_CreateImageExportTask",
      "fields": [
        {
          "name": "200",
          "type": "CreateImageExportTaskResponse",
          "kind": 3,
          "nativeType": "CreateImageExportTaskResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateImageExportTaskResponses"
    },
    {
      "name": "POST_CreateKeypairParameters",
      "description": "POST_CreateKeypairParameters holds parameters to POST_CreateKeypair",
      "fields": [
        {
          "name": "createkeypairrequest",
          "type": "CreateKeypairRequest",
          "nativeType": "CreateKeypairRequest",
          "fieldName": "Createkeypairrequest",
          "parameterName": "createkeypairrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateKeypairParameters"
    },
    {
      "name": "POST_CreateKeypairResponses",
      "description": "POST_CreateKeypairResponses holds responses of POST_CreateKeypair",
      "fields": [
        {
          "name": "200",
          "type": "CreateKeypairResponse",
          "kind": 3,
          "nativeType": "CreateKeypairResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateKeypairResponses"
    },
    {
      "name": "POST_CreateListenerRuleParameters",
      "description": "POST_CreateListenerRuleParameters holds parameters to POST_CreateListenerRule",
      "fields": [
        {
          "name": "createlistenerrulerequest",
          "type": "CreateListenerRuleRequest",
          "nativeType": "CreateListenerRuleRequest",
          "fieldName": "Createlistenerrulerequest",
          "parameterName": "createlistenerrulerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateListenerRuleParameters"
    },
    {
      "name": "POST_CreateListenerRuleResponses",
      "description": "POST_CreateListenerRuleResponses holds responses of POST_CreateListenerRule",
      "fields": [
        {
          "name": "200",
          "type": "CreateListenerRuleResponse",
          "kind": 3,
          "nativeType": "CreateListenerRuleResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateListenerRuleResponses"
    },
    {
      "name": "POST_CreateLoadBalancerParameters",
      "description": "POST_CreateLoadBalancerParameters holds parameters to POST_CreateLoadBalancer",
      "fields": [
        {
          "name": "createloadbalancerrequest",
          "type": "CreateLoadBalancerRequest",
          "nativeType": "CreateLoadBalancerRequest",
          "fieldName": "Createloadbalancerrequest",
          "parameterName": "createloadbalancerrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateLoadBalancerParameters"
    },
    {
      "name": "POST_CreateLoadBalancerResponses",
      "description": "POST_CreateLoadBalancerResponses holds responses of POST_CreateLoadBalancer",
      "fields": [
        {
          "name": "200",
          "type": "CreateLoadBalancerResponse",
          "kind": 3,
          "nativeType": "CreateLoadBalancerResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateLoadBalancerResponses"
    },
    {
      "name": "POST_CreateLoadBalancerListenersParameters",
      "description": "POST_CreateLoadBalancerListenersParameters holds parameters to POST_CreateLoadBalancerListeners",
      "fields": [
        {
          "name": "createloadbalancerlistenersrequest",
          "type": "CreateLoadBalancerListenersRequest",
          "nativeType": "CreateLoadBalancerListenersRequest",
          "fieldName": "Createloadbalancerlistenersrequest",
          "parameterName": "createloadbalancerlistenersrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateLoadBalancerListenersParameters"
    },
    {
      "name": "POST_CreateLoadBalancerListenersResponses",
      "description": "POST_CreateLoadBalancerListenersResponses holds responses of POST_CreateLoadBalancerListeners",
      "fields": [
        {
          "name": "200",
          "type": "CreateLoadBalancerListenersResponse",
          "kind": 3,
          "nativeType": "CreateLoadBalancerListenersResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateLoadBalancerListenersResponses"
    },
    {
      "name": "POST_CreateNatServiceParameters",
      "description": "POST_CreateNatServiceParameters holds parameters to POST_CreateNatService",
      "fields": [
        {
          "name": "createnatservicerequest",
          "type": "CreateNatServiceRequest",
          "nativeType": "CreateNatServiceRequest",
          "fieldName": "Createnatservicerequest",
          "parameterName": "createnatservicerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateNatServiceParameters"
    },
    {
      "name": "POST_CreateNatServiceResponses",
      "description": "POST_CreateNatServiceResponses holds responses of POST_CreateNatService",
      "fields": [
        {
          "name": "200",
          "type": "CreateNatServiceResponse",
          "kind": 3,
          "nativeType": "CreateNatServiceResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateNatServiceResponses"
    },
    {
      "name": "POST_CreateNetParameters",
      "description": "POST_CreateNetParameters holds parameters to POST_CreateNet",
      "fields": [
        {
          "name": "createnetrequest",
          "type": "CreateNetRequest",
          "nativeType": "CreateNetRequest",
          "fieldName": "Createnetrequest",
          "parameterName": "createnetrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateNetParameters"
    },
    {
      "name": "POST_CreateNetResponses",
      "description": "POST_CreateNetResponses holds responses of POST_CreateNet",
      "fields": [
        {
          "name": "200",
          "type": "CreateNetResponse",
          "kind": 3,
          "nativeType": "CreateNetResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateNetResponses"
    },
    {
      "name": "POST_CreateNetAccessParameters",
      "description": "POST_CreateNetAccessParameters holds parameters to POST_CreateNetAccess",
      "fields": [
        {
          "name": "createnetaccessrequest",
          "type": "CreateNetAccessRequest",
          "nativeType": "CreateNetAccessRequest",
          "fieldName": "Createnetaccessrequest",
          "parameterName": "createnetaccessrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateNetAccessParameters"
    },
    {
      "name": "POST_CreateNetAccessResponses",
      "description": "POST_CreateNetAccessResponses holds responses of POST_CreateNetAccess",
      "fields": [
        {
          "name": "200",
          "type": "CreateNetAccessResponse",
          "kind": 3,
          "nativeType": "CreateNetAccessResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateNetAccessResponses"
    },
    {
      "name": "POST_CreateNetInternetGatewayParameters",
      "description": "POST_CreateNetInternetGatewayParameters holds parameters to POST_CreateNetInternetGateway",
      "fields": [
        {
          "name": "createnetinternetgatewayrequest",
          "type": "CreateNetInternetGatewayRequest",
          "nativeType": "CreateNetInternetGatewayRequest",
          "fieldName": "Createnetinternetgatewayrequest",
          "parameterName": "createnetinternetgatewayrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateNetInternetGatewayParameters"
    },
    {
      "name": "POST_CreateNetInternetGatewayResponses",
      "description": "POST_CreateNetInternetGatewayResponses holds responses of POST_CreateNetInternetGateway",
      "fields": [
        {
          "name": "200",
          "type": "CreateNetInternetGatewayResponse",
          "kind": 3,
          "nativeType": "CreateNetInternetGatewayResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateNetInternetGatewayResponses"
    },
    {
      "name": "POST_CreateNetPeeringParameters",
      "description": "POST_CreateNetPeeringParameters holds parameters to POST_CreateNetPeering",
      "fields": [
        {
          "name": "createnetpeeringrequest",
          "type": "CreateNetPeeringRequest",
          "nativeType": "CreateNetPeeringRequest",
          "fieldName": "Createnetpeeringrequest",
          "parameterName": "createnetpeeringrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateNetPeeringParameters"
    },
    {
      "name": "POST_CreateNetPeeringResponses",
      "description": "POST_CreateNetPeeringResponses holds responses of POST_CreateNetPeering",
      "fields": [
        {
          "name": "200",
          "type": "CreateNetPeeringResponse",
          "kind": 3,
          "nativeType": "CreateNetPeeringResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateNetPeeringResponses"
    },
    {
      "name": "POST_CreateNicParameters",
      "description": "POST_CreateNicParameters holds parameters to POST_CreateNic",
      "fields": [
        {
          "name": "createnicrequest",
          "type": "CreateNicRequest",
          "nativeType": "CreateNicRequest",
          "fieldName": "Createnicrequest",
          "parameterName": "createnicrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateNicParameters"
    },
    {
      "name": "POST_CreateNicResponses",
      "description": "POST_CreateNicResponses holds responses of POST_CreateNic",
      "fields": [
        {
          "name": "200",
          "type": "CreateNicResponse",
          "kind": 3,
          "nativeType": "CreateNicResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateNicResponses"
    },
    {
      "name": "POST_CreatePolicyParameters",
      "description": "POST_CreatePolicyParameters holds parameters to POST_CreatePolicy",
      "fields": [
        {
          "name": "createpolicyrequest",
          "type": "CreatePolicyRequest",
          "nativeType": "CreatePolicyRequest",
          "fieldName": "Createpolicyrequest",
          "parameterName": "createpolicyrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreatePolicyParameters"
    },
    {
      "name": "POST_CreatePolicyResponses",
      "description": "POST_CreatePolicyResponses holds responses of POST_CreatePolicy",
      "fields": [
        {
          "name": "200",
          "type": "CreatePolicyResponse",
          "kind": 3,
          "nativeType": "CreatePolicyResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreatePolicyResponses"
    },
    {
      "name": "POST_CreatePublicIpParameters",
      "description": "POST_CreatePublicIpParameters holds parameters to POST_CreatePublicIp",
      "fields": [
        {
          "name": "createpubliciprequest",
          "type": "CreatePublicIpRequest",
          "nativeType": "CreatePublicIpRequest",
          "fieldName": "Createpubliciprequest",
          "parameterName": "createpubliciprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreatePublicIpParameters"
    },
    {
      "name": "POST_CreatePublicIpResponses",
      "description": "POST_CreatePublicIpResponses holds responses of POST_CreatePublicIp",
      "fields": [
        {
          "name": "200",
          "type": "CreatePublicIpResponse",
          "kind": 3,
          "nativeType": "CreatePublicIpResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreatePublicIpResponses"
    },
    {
      "name": "POST_CreateRouteParameters",
      "description": "POST_CreateRouteParameters holds parameters to POST_CreateRoute",
      "fields": [
        {
          "name": "createrouterequest",
          "type": "CreateRouteRequest",
          "nativeType": "CreateRouteRequest",
          "fieldName": "Createrouterequest",
          "parameterName": "createrouterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateRouteParameters"
    },
    {
      "name": "POST_CreateRouteResponses",
      "description": "POST_CreateRouteResponses holds responses of POST_CreateRoute",
      "fields": [
        {
          "name": "200",
          "type": "CreateRouteResponse",
          "kind": 3,
          "nativeType": "CreateRouteResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateRouteResponses"
    },
    {
      "name": "POST_CreateRouteTableParameters",
      "description": "POST_CreateRouteTableParameters holds parameters to POST_CreateRouteTable",
      "fields": [
        {
          "name": "createroutetablerequest",
          "type": "CreateRouteTableRequest",
          "nativeType": "CreateRouteTableRequest",
          "fieldName": "Createroutetablerequest",
          "parameterName": "createroutetablerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateRouteTableParameters"
    },
    {
      "name": "POST_CreateRouteTableResponses",
      "description": "POST_CreateRouteTableResponses holds responses of POST_CreateRouteTable",
      "fields": [
        {
          "name": "200",
          "type": "CreateRouteTableResponse",
          "kind": 3,
          "nativeType": "CreateRouteTableResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateRouteTableResponses"
    },
    {
      "name": "POST_CreateSnapshotParameters",
      "description": "POST_CreateSnapshotParameters holds parameters to POST_CreateSnapshot",
      "fields": [
        {
          "name": "createsnapshotrequest",
          "type": "CreateSnapshotRequest",
          "nativeType": "CreateSnapshotRequest",
          "fieldName": "Createsnapshotrequest",
          "parameterName": "createsnapshotrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateSnapshotParameters"
    },
    {
      "name": "POST_CreateSnapshotResponses",
      "description": "POST_CreateSnapshotResponses holds responses of POST_CreateSnapshot",
      "fields": [
        {
          "name": "200",
          "type": "CreateSnapshotResponse",
          "kind": 3,
          "nativeType": "CreateSnapshotResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateSnapshotResponses"
    },
    {
      "name": "POST_CreateSnapshotExportTaskParameters",
      "description": "POST_CreateSnapshotExportTaskParameters holds parameters to POST_CreateSnapshotExportTask",
      "fields": [
        {
          "name": "createsnapshotexporttaskrequest",
          "type": "CreateSnapshotExportTaskRequest",
          "nativeType": "CreateSnapshotExportTaskRequest",
          "fieldName": "Createsnapshotexporttaskrequest",
          "parameterName": "createsnapshotexporttaskrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateSnapshotExportTaskParameters"
    },
    {
      "name": "POST_CreateSnapshotExportTaskResponses",
      "description": "POST_CreateSnapshotExportTaskResponses holds responses of POST_CreateSnapshotExportTask",
      "fields": [
        {
          "name": "200",
          "type": "CreateSnapshotExportTaskResponse",
          "kind": 3,
          "nativeType": "CreateSnapshotExportTaskResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateSnapshotExportTaskResponses"
    },
    {
      "name": "POST_CreateStickyCookiePolicyParameters",
      "description": "POST_CreateStickyCookiePolicyParameters holds parameters to POST_CreateStickyCookiePolicy",
      "fields": [
        {
          "name": "createstickycookiepolicyrequest",
          "type": "CreateStickyCookiePolicyRequest",
          "nativeType": "CreateStickyCookiePolicyRequest",
          "fieldName": "Createstickycookiepolicyrequest",
          "parameterName": "createstickycookiepolicyrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateStickyCookiePolicyParameters"
    },
    {
      "name": "POST_CreateStickyCookiePolicyResponses",
      "description": "POST_CreateStickyCookiePolicyResponses holds responses of POST_CreateStickyCookiePolicy",
      "fields": [
        {
          "name": "200",
          "type": "CreateStickyCookiePolicyResponse",
          "kind": 3,
          "nativeType": "CreateStickyCookiePolicyResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateStickyCookiePolicyResponses"
    },
    {
      "name": "POST_CreateSubnetParameters",
      "description": "POST_CreateSubnetParameters holds parameters to POST_CreateSubnet",
      "fields": [
        {
          "name": "createsubnetrequest",
          "type": "CreateSubnetRequest",
          "nativeType": "CreateSubnetRequest",
          "fieldName": "Createsubnetrequest",
          "parameterName": "createsubnetrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateSubnetParameters"
    },
    {
      "name": "POST_CreateSubnetResponses",
      "description": "POST_CreateSubnetResponses holds responses of POST_CreateSubnet",
      "fields": [
        {
          "name": "200",
          "type": "CreateSubnetResponse",
          "kind": 3,
          "nativeType": "CreateSubnetResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateSubnetResponses"
    },
    {
      "name": "POST_CreateTagsParameters",
      "description": "POST_CreateTagsParameters holds parameters to POST_CreateTags",
      "fields": [
        {
          "name": "createtagsrequest",
          "type": "CreateTagsRequest",
          "nativeType": "CreateTagsRequest",
          "fieldName": "Createtagsrequest",
          "parameterName": "createtagsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateTagsParameters"
    },
    {
      "name": "POST_CreateTagsResponses",
      "description": "POST_CreateTagsResponses holds responses of POST_CreateTags",
      "fields": [
        {
          "name": "200",
          "type": "CreateTagsResponse",
          "kind": 3,
          "nativeType": "CreateTagsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateTagsResponses"
    },
    {
      "name": "POST_CreateUserParameters",
      "description": "POST_CreateUserParameters holds parameters to POST_CreateUser",
      "fields": [
        {
          "name": "createuserrequest",
          "type": "CreateUserRequest",
          "nativeType": "CreateUserRequest",
          "fieldName": "Createuserrequest",
          "parameterName": "createuserrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateUserParameters"
    },
    {
      "name": "POST_CreateUserResponses",
      "description": "POST_CreateUserResponses holds responses of POST_CreateUser",
      "fields": [
        {
          "name": "200",
          "type": "CreateUserResponse",
          "kind": 3,
          "nativeType": "CreateUserResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateUserResponses"
    },
    {
      "name": "POST_CreateVmsParameters",
      "description": "POST_CreateVmsParameters holds parameters to POST_CreateVms",
      "fields": [
        {
          "name": "createvmsrequest",
          "type": "CreateVmsRequest",
          "nativeType": "CreateVmsRequest",
          "fieldName": "Createvmsrequest",
          "parameterName": "createvmsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateVmsParameters"
    },
    {
      "name": "POST_CreateVmsResponses",
      "description": "POST_CreateVmsResponses holds responses of POST_CreateVms",
      "fields": [
        {
          "name": "200",
          "type": "CreateVmsResponse",
          "kind": 3,
          "nativeType": "CreateVmsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateVmsResponses"
    },
    {
      "name": "POST_CreateVolumeParameters",
      "description": "POST_CreateVolumeParameters holds parameters to POST_CreateVolume",
      "fields": [
        {
          "name": "createvolumerequest",
          "type": "CreateVolumeRequest",
          "nativeType": "CreateVolumeRequest",
          "fieldName": "Createvolumerequest",
          "parameterName": "createvolumerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateVolumeParameters"
    },
    {
      "name": "POST_CreateVolumeResponses",
      "description": "POST_CreateVolumeResponses holds responses of POST_CreateVolume",
      "fields": [
        {
          "name": "200",
          "type": "CreateVolumeResponse",
          "kind": 3,
          "nativeType": "CreateVolumeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateVolumeResponses"
    },
    {
      "name": "POST_CreateVpnConnectionParameters",
      "description": "POST_CreateVpnConnectionParameters holds parameters to POST_CreateVpnConnection",
      "fields": [
        {
          "name": "createvpnconnectionrequest",
          "type": "CreateVpnConnectionRequest",
          "nativeType": "CreateVpnConnectionRequest",
          "fieldName": "Createvpnconnectionrequest",
          "parameterName": "createvpnconnectionrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateVpnConnectionParameters"
    },
    {
      "name": "POST_CreateVpnConnectionResponses",
      "description": "POST_CreateVpnConnectionResponses holds responses of POST_CreateVpnConnection",
      "fields": [
        {
          "name": "200",
          "type": "CreateVpnConnectionResponse",
          "kind": 3,
          "nativeType": "CreateVpnConnectionResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateVpnConnectionResponses"
    },
    {
      "name": "POST_CreateVpnConnectionRouteParameters",
      "description": "POST_CreateVpnConnectionRouteParameters holds parameters to POST_CreateVpnConnectionRoute",
      "fields": [
        {
          "name": "createvpnconnectionrouterequest",
          "type": "CreateVpnConnectionRouteRequest",
          "nativeType": "CreateVpnConnectionRouteRequest",
          "fieldName": "Createvpnconnectionrouterequest",
          "parameterName": "createvpnconnectionrouterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateVpnConnectionRouteParameters"
    },
    {
      "name": "POST_CreateVpnConnectionRouteResponses",
      "description": "POST_CreateVpnConnectionRouteResponses holds responses of POST_CreateVpnConnectionRoute",
      "fields": [
        {
          "name": "200",
          "type": "CreateVpnConnectionRouteResponse",
          "kind": 3,
          "nativeType": "CreateVpnConnectionRouteResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateVpnConnectionRouteResponses"
    },
    {
      "name": "POST_CreateVpnGatewayParameters",
      "description": "POST_CreateVpnGatewayParameters holds parameters to POST_CreateVpnGateway",
      "fields": [
        {
          "name": "createvpngatewayrequest",
          "type": "CreateVpnGatewayRequest",
          "nativeType": "CreateVpnGatewayRequest",
          "fieldName": "Createvpngatewayrequest",
          "parameterName": "createvpngatewayrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_CreateVpnGatewayParameters"
    },
    {
      "name": "POST_CreateVpnGatewayResponses",
      "description": "POST_CreateVpnGatewayResponses holds responses of POST_CreateVpnGateway",
      "fields": [
        {
          "name": "200",
          "type": "CreateVpnGatewayResponse",
          "kind": 3,
          "nativeType": "CreateVpnGatewayResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_CreateVpnGatewayResponses"
    },
    {
      "name": "POST_DeleteApiKeyParameters",
      "description": "POST_DeleteApiKeyParameters holds parameters to POST_DeleteApiKey",
      "fields": [
        {
          "name": "deleteapikeyrequest",
          "type": "DeleteApiKeyRequest",
          "nativeType": "DeleteApiKeyRequest",
          "fieldName": "Deleteapikeyrequest",
          "parameterName": "deleteapikeyrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteApiKeyParameters"
    },
    {
      "name": "POST_DeleteApiKeyResponses",
      "description": "POST_DeleteApiKeyResponses holds responses of POST_DeleteApiKey",
      "fields": [
        {
          "name": "200",
          "type": "DeleteApiKeyResponse",
          "kind": 3,
          "nativeType": "DeleteApiKeyResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteApiKeyResponses"
    },
    {
      "name": "POST_DeleteClientEndpointParameters",
      "description": "POST_DeleteClientEndpointParameters holds parameters to POST_DeleteClientEndpoint",
      "fields": [
        {
          "name": "deleteclientendpointrequest",
          "type": "DeleteClientEndpointRequest",
          "nativeType": "DeleteClientEndpointRequest",
          "fieldName": "Deleteclientendpointrequest",
          "parameterName": "deleteclientendpointrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteClientEndpointParameters"
    },
    {
      "name": "POST_DeleteClientEndpointResponses",
      "description": "POST_DeleteClientEndpointResponses holds responses of POST_DeleteClientEndpoint",
      "fields": [
        {
          "name": "200",
          "type": "DeleteClientEndpointResponse",
          "kind": 3,
          "nativeType": "DeleteClientEndpointResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteClientEndpointResponses"
    },
    {
      "name": "POST_DeleteDhcpOptionsParameters",
      "description": "POST_DeleteDhcpOptionsParameters holds parameters to POST_DeleteDhcpOptions",
      "fields": [
        {
          "name": "deletedhcpoptionsrequest",
          "type": "DeleteDhcpOptionsRequest",
          "nativeType": "DeleteDhcpOptionsRequest",
          "fieldName": "Deletedhcpoptionsrequest",
          "parameterName": "deletedhcpoptionsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteDhcpOptionsParameters"
    },
    {
      "name": "POST_DeleteDhcpOptionsResponses",
      "description": "POST_DeleteDhcpOptionsResponses holds responses of POST_DeleteDhcpOptions",
      "fields": [
        {
          "name": "200",
          "type": "DeleteDhcpOptionsResponse",
          "kind": 3,
          "nativeType": "DeleteDhcpOptionsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteDhcpOptionsResponses"
    },
    {
      "name": "POST_DeleteDirectLinkParameters",
      "description": "POST_DeleteDirectLinkParameters holds parameters to POST_DeleteDirectLink",
      "fields": [
        {
          "name": "deletedirectlinkrequest",
          "type": "DeleteDirectLinkRequest",
          "nativeType": "DeleteDirectLinkRequest",
          "fieldName": "Deletedirectlinkrequest",
          "parameterName": "deletedirectlinkrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteDirectLinkParameters"
    },
    {
      "name": "POST_DeleteDirectLinkResponses",
      "description": "POST_DeleteDirectLinkResponses holds responses of POST_DeleteDirectLink",
      "fields": [
        {
          "name": "200",
          "type": "DeleteDirectLinkResponse",
          "kind": 3,
          "nativeType": "DeleteDirectLinkResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteDirectLinkResponses"
    },
    {
      "name": "POST_DeleteDirectLinkInterfaceParameters",
      "description": "POST_DeleteDirectLinkInterfaceParameters holds parameters to POST_DeleteDirectLinkInterface",
      "fields": [
        {
          "name": "deletedirectlinkinterfacerequest",
          "type": "DeleteDirectLinkInterfaceRequest",
          "nativeType": "DeleteDirectLinkInterfaceRequest",
          "fieldName": "Deletedirectlinkinterfacerequest",
          "parameterName": "deletedirectlinkinterfacerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteDirectLinkInterfaceParameters"
    },
    {
      "name": "POST_DeleteDirectLinkInterfaceResponses",
      "description": "POST_DeleteDirectLinkInterfaceResponses holds responses of POST_DeleteDirectLinkInterface",
      "fields": [
        {
          "name": "200",
          "type": "DeleteDirectLinkInterfaceResponse",
          "kind": 3,
          "nativeType": "DeleteDirectLinkInterfaceResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteDirectLinkInterfaceResponses"
    },
    {
      "name": "POST_DeleteFirewallRuleInboundParameters",
      "description": "POST_DeleteFirewallRuleInboundParameters holds parameters to POST_DeleteFirewallRuleInbound",
      "fields": [
        {
          "name": "deletefirewallruleinboundrequest",
          "type": "DeleteFirewallRuleInboundRequest",
          "nativeType": "DeleteFirewallRuleInboundRequest",
          "fieldName": "Deletefirewallruleinboundrequest",
          "parameterName": "deletefirewallruleinboundrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteFirewallRuleInboundParameters"
    },
    {
      "name": "POST_DeleteFirewallRuleInboundResponses",
      "description": "POST_DeleteFirewallRuleInboundResponses holds responses of POST_DeleteFirewallRuleInbound",
      "fields": [
        {
          "name": "200",
          "type": "DeleteFirewallRuleInboundResponse",
          "kind": 3,
          "nativeType": "DeleteFirewallRuleInboundResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteFirewallRuleInboundResponses"
    },
    {
      "name": "POST_DeleteFirewallRuleOutboundParameters",
      "description": "POST_DeleteFirewallRuleOutboundParameters holds parameters to POST_DeleteFirewallRuleOutbound",
      "fields": [
        {
          "name": "deletefirewallruleoutboundrequest",
          "type": "DeleteFirewallRuleOutboundRequest",
          "nativeType": "DeleteFirewallRuleOutboundRequest",
          "fieldName": "Deletefirewallruleoutboundrequest",
          "parameterName": "deletefirewallruleoutboundrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteFirewallRuleOutboundParameters"
    },
    {
      "name": "POST_DeleteFirewallRuleOutboundResponses",
      "description": "POST_DeleteFirewallRuleOutboundResponses holds responses of POST_DeleteFirewallRuleOutbound",
      "fields": [
        {
          "name": "200",
          "type": "DeleteFirewallRuleOutboundResponse",
          "kind": 3,
          "nativeType": "DeleteFirewallRuleOutboundResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteFirewallRuleOutboundResponses"
    },
    {
      "name": "POST_DeleteFirewallRulesSetParameters",
      "description": "POST_DeleteFirewallRulesSetParameters holds parameters to POST_DeleteFirewallRulesSet",
      "fields": [
        {
          "name": "deletefirewallrulessetrequest",
          "type": "DeleteFirewallRulesSetRequest",
          "nativeType": "DeleteFirewallRulesSetRequest",
          "fieldName": "Deletefirewallrulessetrequest",
          "parameterName": "deletefirewallrulessetrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteFirewallRulesSetParameters"
    },
    {
      "name": "POST_DeleteFirewallRulesSetResponses",
      "description": "POST_DeleteFirewallRulesSetResponses holds responses of POST_DeleteFirewallRulesSet",
      "fields": [
        {
          "name": "200",
          "type": "DeleteFirewallRulesSetResponse",
          "kind": 3,
          "nativeType": "DeleteFirewallRulesSetResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteFirewallRulesSetResponses"
    },
    {
      "name": "POST_DeleteGroupParameters",
      "description": "POST_DeleteGroupParameters holds parameters to POST_DeleteGroup",
      "fields": [
        {
          "name": "deletegrouprequest",
          "type": "DeleteGroupRequest",
          "nativeType": "DeleteGroupRequest",
          "fieldName": "Deletegrouprequest",
          "parameterName": "deletegrouprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteGroupParameters"
    },
    {
      "name": "POST_DeleteGroupResponses",
      "description": "POST_DeleteGroupResponses holds responses of POST_DeleteGroup",
      "fields": [
        {
          "name": "200",
          "type": "DeleteGroupResponse",
          "kind": 3,
          "nativeType": "DeleteGroupResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteGroupResponses"
    },
    {
      "name": "POST_DeleteKeypairParameters",
      "description": "POST_DeleteKeypairParameters holds parameters to POST_DeleteKeypair",
      "fields": [
        {
          "name": "deletekeypairrequest",
          "type": "DeleteKeypairRequest",
          "nativeType": "DeleteKeypairRequest",
          "fieldName": "Deletekeypairrequest",
          "parameterName": "deletekeypairrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteKeypairParameters"
    },
    {
      "name": "POST_DeleteKeypairResponses",
      "description": "POST_DeleteKeypairResponses holds responses of POST_DeleteKeypair",
      "fields": [
        {
          "name": "200",
          "type": "DeleteKeypairResponse",
          "kind": 3,
          "nativeType": "DeleteKeypairResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteKeypairResponses"
    },
    {
      "name": "POST_DeleteListenerRuleParameters",
      "description": "POST_DeleteListenerRuleParameters holds parameters to POST_DeleteListenerRule",
      "fields": [
        {
          "name": "deletelistenerrulerequest",
          "type": "DeleteListenerRuleRequest",
          "nativeType": "DeleteListenerRuleRequest",
          "fieldName": "Deletelistenerrulerequest",
          "parameterName": "deletelistenerrulerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteListenerRuleParameters"
    },
    {
      "name": "POST_DeleteListenerRuleResponses",
      "description": "POST_DeleteListenerRuleResponses holds responses of POST_DeleteListenerRule",
      "fields": [
        {
          "name": "200",
          "type": "DeleteListenerRuleResponse",
          "kind": 3,
          "nativeType": "DeleteListenerRuleResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteListenerRuleResponses"
    },
    {
      "name": "POST_DeleteLoadBalancerParameters",
      "description": "POST_DeleteLoadBalancerParameters holds parameters to POST_DeleteLoadBalancer",
      "fields": [
        {
          "name": "deleteloadbalancerrequest",
          "type": "DeleteLoadBalancerRequest",
          "nativeType": "DeleteLoadBalancerRequest",
          "fieldName": "Deleteloadbalancerrequest",
          "parameterName": "deleteloadbalancerrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteLoadBalancerParameters"
    },
    {
      "name": "POST_DeleteLoadBalancerResponses",
      "description": "POST_DeleteLoadBalancerResponses holds responses of POST_DeleteLoadBalancer",
      "fields": [
        {
          "name": "200",
          "type": "DeleteLoadBalancerResponse",
          "kind": 3,
          "nativeType": "DeleteLoadBalancerResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteLoadBalancerResponses"
    },
    {
      "name": "POST_DeleteLoadBalancerListenersParameters",
      "description": "POST_DeleteLoadBalancerListenersParameters holds parameters to POST_DeleteLoadBalancerListeners",
      "fields": [
        {
          "name": "deleteloadbalancerlistenersrequest",
          "type": "DeleteLoadBalancerListenersRequest",
          "nativeType": "DeleteLoadBalancerListenersRequest",
          "fieldName": "Deleteloadbalancerlistenersrequest",
          "parameterName": "deleteloadbalancerlistenersrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteLoadBalancerListenersParameters"
    },
    {
      "name": "POST_DeleteLoadBalancerListenersResponses",
      "description": "POST_DeleteLoadBalancerListenersResponses holds responses of POST_DeleteLoadBalancerListeners",
      "fields": [
        {
          "name": "200",
          "type": "DeleteLoadBalancerListenersResponse",
          "kind": 3,
          "nativeType": "DeleteLoadBalancerListenersResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteLoadBalancerListenersResponses"
    },
    {
      "name": "POST_DeleteLoadBalancerPolicyParameters",
      "description": "POST_DeleteLoadBalancerPolicyParameters holds parameters to POST_DeleteLoadBalancerPolicy",
      "fields": [
        {
          "name": "deleteloadbalancerpolicyrequest",
          "type": "DeleteLoadBalancerPolicyRequest",
          "nativeType": "DeleteLoadBalancerPolicyRequest",
          "fieldName": "Deleteloadbalancerpolicyrequest",
          "parameterName": "deleteloadbalancerpolicyrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteLoadBalancerPolicyParameters"
    },
    {
      "name": "POST_DeleteLoadBalancerPolicyResponses",
      "description": "POST_DeleteLoadBalancerPolicyResponses holds responses of POST_DeleteLoadBalancerPolicy",
      "fields": [
        {
          "name": "200",
          "type": "DeleteLoadBalancerPolicyResponse",
          "kind": 3,
          "nativeType": "DeleteLoadBalancerPolicyResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteLoadBalancerPolicyResponses"
    },
    {
      "name": "POST_DeleteNatServiceParameters",
      "description": "POST_DeleteNatServiceParameters holds parameters to POST_DeleteNatService",
      "fields": [
        {
          "name": "deletenatservicerequest",
          "type": "DeleteNatServiceRequest",
          "nativeType": "DeleteNatServiceRequest",
          "fieldName": "Deletenatservicerequest",
          "parameterName": "deletenatservicerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteNatServiceParameters"
    },
    {
      "name": "POST_DeleteNatServiceResponses",
      "description": "POST_DeleteNatServiceResponses holds responses of POST_DeleteNatService",
      "fields": [
        {
          "name": "200",
          "type": "DeleteNatServiceResponse",
          "kind": 3,
          "nativeType": "DeleteNatServiceResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteNatServiceResponses"
    },
    {
      "name": "POST_DeleteNetParameters",
      "description": "POST_DeleteNetParameters holds parameters to POST_DeleteNet",
      "fields": [
        {
          "name": "deletenetrequest",
          "type": "DeleteNetRequest",
          "nativeType": "DeleteNetRequest",
          "fieldName": "Deletenetrequest",
          "parameterName": "deletenetrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteNetParameters"
    },
    {
      "name": "POST_DeleteNetResponses",
      "description": "POST_DeleteNetResponses holds responses of POST_DeleteNet",
      "fields": [
        {
          "name": "200",
          "type": "DeleteNetResponse",
          "kind": 3,
          "nativeType": "DeleteNetResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteNetResponses"
    },
    {
      "name": "POST_DeleteNetInternetGatewayParameters",
      "description": "POST_DeleteNetInternetGatewayParameters holds parameters to POST_DeleteNetInternetGateway",
      "fields": [
        {
          "name": "deletenetinternetgatewayrequest",
          "type": "DeleteNetInternetGatewayRequest",
          "nativeType": "DeleteNetInternetGatewayRequest",
          "fieldName": "Deletenetinternetgatewayrequest",
          "parameterName": "deletenetinternetgatewayrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteNetInternetGatewayParameters"
    },
    {
      "name": "POST_DeleteNetInternetGatewayResponses",
      "description": "POST_DeleteNetInternetGatewayResponses holds responses of POST_DeleteNetInternetGateway",
      "fields": [
        {
          "name": "200",
          "type": "DeleteNetInternetGatewayResponse",
          "kind": 3,
          "nativeType": "DeleteNetInternetGatewayResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteNetInternetGatewayResponses"
    },
    {
      "name": "POST_DeleteNetPeeringParameters",
      "description": "POST_DeleteNetPeeringParameters holds parameters to POST_DeleteNetPeering",
      "fields": [
        {
          "name": "deletenetpeeringrequest",
          "type": "DeleteNetPeeringRequest",
          "nativeType": "DeleteNetPeeringRequest",
          "fieldName": "Deletenetpeeringrequest",
          "parameterName": "deletenetpeeringrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteNetPeeringParameters"
    },
    {
      "name": "POST_DeleteNetPeeringResponses",
      "description": "POST_DeleteNetPeeringResponses holds responses of POST_DeleteNetPeering",
      "fields": [
        {
          "name": "200",
          "type": "DeleteNetPeeringResponse",
          "kind": 3,
          "nativeType": "DeleteNetPeeringResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteNetPeeringResponses"
    },
    {
      "name": "POST_DeleteNicParameters",
      "description": "POST_DeleteNicParameters holds parameters to POST_DeleteNic",
      "fields": [
        {
          "name": "deletenicrequest",
          "type": "DeleteNicRequest",
          "nativeType": "DeleteNicRequest",
          "fieldName": "Deletenicrequest",
          "parameterName": "deletenicrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteNicParameters"
    },
    {
      "name": "POST_DeleteNicResponses",
      "description": "POST_DeleteNicResponses holds responses of POST_DeleteNic",
      "fields": [
        {
          "name": "200",
          "type": "DeleteNicResponse",
          "kind": 3,
          "nativeType": "DeleteNicResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteNicResponses"
    },
    {
      "name": "POST_DeletePolicyParameters",
      "description": "POST_DeletePolicyParameters holds parameters to POST_DeletePolicy",
      "fields": [
        {
          "name": "deletepolicyrequest",
          "type": "DeletePolicyRequest",
          "nativeType": "DeletePolicyRequest",
          "fieldName": "Deletepolicyrequest",
          "parameterName": "deletepolicyrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeletePolicyParameters"
    },
    {
      "name": "POST_DeletePolicyResponses",
      "description": "POST_DeletePolicyResponses holds responses of POST_DeletePolicy",
      "fields": [
        {
          "name": "200",
          "type": "DeletePolicyResponse",
          "kind": 3,
          "nativeType": "DeletePolicyResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeletePolicyResponses"
    },
    {
      "name": "POST_DeletePublicIpParameters",
      "description": "POST_DeletePublicIpParameters holds parameters to POST_DeletePublicIp",
      "fields": [
        {
          "name": "deletepubliciprequest",
          "type": "DeletePublicIpRequest",
          "nativeType": "DeletePublicIpRequest",
          "fieldName": "Deletepubliciprequest",
          "parameterName": "deletepubliciprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeletePublicIpParameters"
    },
    {
      "name": "POST_DeletePublicIpResponses",
      "description": "POST_DeletePublicIpResponses holds responses of POST_DeletePublicIp",
      "fields": [
        {
          "name": "200",
          "type": "DeletePublicIpResponse",
          "kind": 3,
          "nativeType": "DeletePublicIpResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeletePublicIpResponses"
    },
    {
      "name": "POST_DeleteRouteParameters",
      "description": "POST_DeleteRouteParameters holds parameters to POST_DeleteRoute",
      "fields": [
        {
          "name": "deleterouterequest",
          "type": "DeleteRouteRequest",
          "nativeType": "DeleteRouteRequest",
          "fieldName": "Deleterouterequest",
          "parameterName": "deleterouterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteRouteParameters"
    },
    {
      "name": "POST_DeleteRouteResponses",
      "description": "POST_DeleteRouteResponses holds responses of POST_DeleteRoute",
      "fields": [
        {
          "name": "200",
          "type": "DeleteRouteResponse",
          "kind": 3,
          "nativeType": "DeleteRouteResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteRouteResponses"
    },
    {
      "name": "POST_DeleteRouteTableParameters",
      "description": "POST_DeleteRouteTableParameters holds parameters to POST_DeleteRouteTable",
      "fields": [
        {
          "name": "deleteroutetablerequest",
          "type": "DeleteRouteTableRequest",
          "nativeType": "DeleteRouteTableRequest",
          "fieldName": "Deleteroutetablerequest",
          "parameterName": "deleteroutetablerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteRouteTableParameters"
    },
    {
      "name": "POST_DeleteRouteTableResponses",
      "description": "POST_DeleteRouteTableResponses holds responses of POST_DeleteRouteTable",
      "fields": [
        {
          "name": "200",
          "type": "DeleteRouteTableResponse",
          "kind": 3,
          "nativeType": "DeleteRouteTableResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteRouteTableResponses"
    },
    {
      "name": "POST_DeleteServerCertificateParameters",
      "description": "POST_DeleteServerCertificateParameters holds parameters to POST_DeleteServerCertificate",
      "fields": [
        {
          "name": "deleteservercertificaterequest",
          "type": "DeleteServerCertificateRequest",
          "nativeType": "DeleteServerCertificateRequest",
          "fieldName": "Deleteservercertificaterequest",
          "parameterName": "deleteservercertificaterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteServerCertificateParameters"
    },
    {
      "name": "POST_DeleteServerCertificateResponses",
      "description": "POST_DeleteServerCertificateResponses holds responses of POST_DeleteServerCertificate",
      "fields": [
        {
          "name": "200",
          "type": "DeleteServerCertificateResponse",
          "kind": 3,
          "nativeType": "DeleteServerCertificateResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteServerCertificateResponses"
    },
    {
      "name": "POST_DeleteSnapshotParameters",
      "description": "POST_DeleteSnapshotParameters holds parameters to POST_DeleteSnapshot",
      "fields": [
        {
          "name": "deletesnapshotrequest",
          "type": "DeleteSnapshotRequest",
          "nativeType": "DeleteSnapshotRequest",
          "fieldName": "Deletesnapshotrequest",
          "parameterName": "deletesnapshotrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteSnapshotParameters"
    },
    {
      "name": "POST_DeleteSnapshotResponses",
      "description": "POST_DeleteSnapshotResponses holds responses of POST_DeleteSnapshot",
      "fields": [
        {
          "name": "200",
          "type": "DeleteSnapshotResponse",
          "kind": 3,
          "nativeType": "DeleteSnapshotResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteSnapshotResponses"
    },
    {
      "name": "POST_DeleteSubnetParameters",
      "description": "POST_DeleteSubnetParameters holds parameters to POST_DeleteSubnet",
      "fields": [
        {
          "name": "deletesubnetrequest",
          "type": "DeleteSubnetRequest",
          "nativeType": "DeleteSubnetRequest",
          "fieldName": "Deletesubnetrequest",
          "parameterName": "deletesubnetrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteSubnetParameters"
    },
    {
      "name": "POST_DeleteSubnetResponses",
      "description": "POST_DeleteSubnetResponses holds responses of POST_DeleteSubnet",
      "fields": [
        {
          "name": "200",
          "type": "DeleteSubnetResponse",
          "kind": 3,
          "nativeType": "DeleteSubnetResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteSubnetResponses"
    },
    {
      "name": "POST_DeleteTagsParameters",
      "description": "POST_DeleteTagsParameters holds parameters to POST_DeleteTags",
      "fields": [
        {
          "name": "deletetagsrequest",
          "type": "DeleteTagsRequest",
          "nativeType": "DeleteTagsRequest",
          "fieldName": "Deletetagsrequest",
          "parameterName": "deletetagsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteTagsParameters"
    },
    {
      "name": "POST_DeleteTagsResponses",
      "description": "POST_DeleteTagsResponses holds responses of POST_DeleteTags",
      "fields": [
        {
          "name": "200",
          "type": "DeleteTagsResponse",
          "kind": 3,
          "nativeType": "DeleteTagsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteTagsResponses"
    },
    {
      "name": "POST_DeleteUserParameters",
      "description": "POST_DeleteUserParameters holds parameters to POST_DeleteUser",
      "fields": [
        {
          "name": "deleteuserrequest",
          "type": "DeleteUserRequest",
          "nativeType": "DeleteUserRequest",
          "fieldName": "Deleteuserrequest",
          "parameterName": "deleteuserrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteUserParameters"
    },
    {
      "name": "POST_DeleteUserResponses",
      "description": "POST_DeleteUserResponses holds responses of POST_DeleteUser",
      "fields": [
        {
          "name": "200",
          "type": "DeleteUserResponse",
          "kind": 3,
          "nativeType": "DeleteUserResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteUserResponses"
    },
    {
      "name": "POST_DeleteVmsParameters",
      "description": "POST_DeleteVmsParameters holds parameters to POST_DeleteVms",
      "fields": [
        {
          "name": "deletevmsrequest",
          "type": "DeleteVmsRequest",
          "nativeType": "DeleteVmsRequest",
          "fieldName": "Deletevmsrequest",
          "parameterName": "deletevmsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteVmsParameters"
    },
    {
      "name": "POST_DeleteVmsResponses",
      "description": "POST_DeleteVmsResponses holds responses of POST_DeleteVms",
      "fields": [
        {
          "name": "200",
          "type": "DeleteVmsResponse",
          "kind": 3,
          "nativeType": "DeleteVmsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteVmsResponses"
    },
    {
      "name": "POST_DeleteVolumeParameters",
      "description": "POST_DeleteVolumeParameters holds parameters to POST_DeleteVolume",
      "fields": [
        {
          "name": "deletevolumerequest",
          "type": "DeleteVolumeRequest",
          "nativeType": "DeleteVolumeRequest",
          "fieldName": "Deletevolumerequest",
          "parameterName": "deletevolumerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteVolumeParameters"
    },
    {
      "name": "POST_DeleteVolumeResponses",
      "description": "POST_DeleteVolumeResponses holds responses of POST_DeleteVolume",
      "fields": [
        {
          "name": "200",
          "type": "DeleteVolumeResponse",
          "kind": 3,
          "nativeType": "DeleteVolumeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteVolumeResponses"
    },
    {
      "name": "POST_DeleteVpcEndpointsParameters",
      "description": "POST_DeleteVpcEndpointsParameters holds parameters to POST_DeleteVpcEndpoints",
      "fields": [
        {
          "name": "deletevpcendpointsrequest",
          "type": "DeleteVpcEndpointsRequest",
          "nativeType": "DeleteVpcEndpointsRequest",
          "fieldName": "Deletevpcendpointsrequest",
          "parameterName": "deletevpcendpointsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteVpcEndpointsParameters"
    },
    {
      "name": "POST_DeleteVpcEndpointsResponses",
      "description": "POST_DeleteVpcEndpointsResponses holds responses of POST_DeleteVpcEndpoints",
      "fields": [
        {
          "name": "200",
          "type": "DeleteVpcEndpointsResponse",
          "kind": 3,
          "nativeType": "DeleteVpcEndpointsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteVpcEndpointsResponses"
    },
    {
      "name": "POST_DeleteVpnConnectionParameters",
      "description": "POST_DeleteVpnConnectionParameters holds parameters to POST_DeleteVpnConnection",
      "fields": [
        {
          "name": "deletevpnconnectionrequest",
          "type": "DeleteVpnConnectionRequest",
          "nativeType": "DeleteVpnConnectionRequest",
          "fieldName": "Deletevpnconnectionrequest",
          "parameterName": "deletevpnconnectionrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteVpnConnectionParameters"
    },
    {
      "name": "POST_DeleteVpnConnectionResponses",
      "description": "POST_DeleteVpnConnectionResponses holds responses of POST_DeleteVpnConnection",
      "fields": [
        {
          "name": "200",
          "type": "DeleteVpnConnectionResponse",
          "kind": 3,
          "nativeType": "DeleteVpnConnectionResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteVpnConnectionResponses"
    },
    {
      "name": "POST_DeleteVpnConnectionRouteParameters",
      "description": "POST_DeleteVpnConnectionRouteParameters holds parameters to POST_DeleteVpnConnectionRoute",
      "fields": [
        {
          "name": "deletevpnconnectionrouterequest",
          "type": "DeleteVpnConnectionRouteRequest",
          "nativeType": "DeleteVpnConnectionRouteRequest",
          "fieldName": "Deletevpnconnectionrouterequest",
          "parameterName": "deletevpnconnectionrouterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteVpnConnectionRouteParameters"
    },
    {
      "name": "POST_DeleteVpnConnectionRouteResponses",
      "description": "POST_DeleteVpnConnectionRouteResponses holds responses of POST_DeleteVpnConnectionRoute",
      "fields": [
        {
          "name": "200",
          "type": "DeleteVpnConnectionRouteResponse",
          "kind": 3,
          "nativeType": "DeleteVpnConnectionRouteResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteVpnConnectionRouteResponses"
    },
    {
      "name": "POST_DeleteVpnGatewayParameters",
      "description": "POST_DeleteVpnGatewayParameters holds parameters to POST_DeleteVpnGateway",
      "fields": [
        {
          "name": "deletevpngatewayrequest",
          "type": "DeleteVpnGatewayRequest",
          "nativeType": "DeleteVpnGatewayRequest",
          "fieldName": "Deletevpngatewayrequest",
          "parameterName": "deletevpngatewayrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeleteVpnGatewayParameters"
    },
    {
      "name": "POST_DeleteVpnGatewayResponses",
      "description": "POST_DeleteVpnGatewayResponses holds responses of POST_DeleteVpnGateway",
      "fields": [
        {
          "name": "200",
          "type": "DeleteVpnGatewayResponse",
          "kind": 3,
          "nativeType": "DeleteVpnGatewayResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeleteVpnGatewayResponses"
    },
    {
      "name": "POST_DeregisterImageParameters",
      "description": "POST_DeregisterImageParameters holds parameters to POST_DeregisterImage",
      "fields": [
        {
          "name": "deregisterimagerequest",
          "type": "DeregisterImageRequest",
          "nativeType": "DeregisterImageRequest",
          "fieldName": "Deregisterimagerequest",
          "parameterName": "deregisterimagerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeregisterImageParameters"
    },
    {
      "name": "POST_DeregisterImageResponses",
      "description": "POST_DeregisterImageResponses holds responses of POST_DeregisterImage",
      "fields": [
        {
          "name": "200",
          "type": "DeregisterImageResponse",
          "kind": 3,
          "nativeType": "DeregisterImageResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeregisterImageResponses"
    },
    {
      "name": "POST_DeregisterUserInGroupParameters",
      "description": "POST_DeregisterUserInGroupParameters holds parameters to POST_DeregisterUserInGroup",
      "fields": [
        {
          "name": "deregisteruseringrouprequest",
          "type": "DeregisterUserInGroupRequest",
          "nativeType": "DeregisterUserInGroupRequest",
          "fieldName": "Deregisteruseringrouprequest",
          "parameterName": "deregisteruseringrouprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeregisterUserInGroupParameters"
    },
    {
      "name": "POST_DeregisterUserInGroupResponses",
      "description": "POST_DeregisterUserInGroupResponses holds responses of POST_DeregisterUserInGroup",
      "fields": [
        {
          "name": "200",
          "type": "DeregisterUserInGroupResponse",
          "kind": 3,
          "nativeType": "DeregisterUserInGroupResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeregisterUserInGroupResponses"
    },
    {
      "name": "POST_DeregisterVmsInListenerRuleParameters",
      "description": "POST_DeregisterVmsInListenerRuleParameters holds parameters to POST_DeregisterVmsInListenerRule",
      "fields": [
        {
          "name": "deregistervmsinlistenerrulerequest",
          "type": "DeregisterVmsInListenerRuleRequest",
          "nativeType": "DeregisterVmsInListenerRuleRequest",
          "fieldName": "Deregistervmsinlistenerrulerequest",
          "parameterName": "deregistervmsinlistenerrulerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeregisterVmsInListenerRuleParameters"
    },
    {
      "name": "POST_DeregisterVmsInListenerRuleResponses",
      "description": "POST_DeregisterVmsInListenerRuleResponses holds responses of POST_DeregisterVmsInListenerRule",
      "fields": [
        {
          "name": "200",
          "type": "DeregisterVmsInListenerRuleResponse",
          "kind": 3,
          "nativeType": "DeregisterVmsInListenerRuleResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeregisterVmsInListenerRuleResponses"
    },
    {
      "name": "POST_DeregisterVmsInLoadBalancerParameters",
      "description": "POST_DeregisterVmsInLoadBalancerParameters holds parameters to POST_DeregisterVmsInLoadBalancer",
      "fields": [
        {
          "name": "deregistervmsinloadbalancerrequest",
          "type": "DeregisterVmsInLoadBalancerRequest",
          "nativeType": "DeregisterVmsInLoadBalancerRequest",
          "fieldName": "Deregistervmsinloadbalancerrequest",
          "parameterName": "deregistervmsinloadbalancerrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_DeregisterVmsInLoadBalancerParameters"
    },
    {
      "name": "POST_DeregisterVmsInLoadBalancerResponses",
      "description": "POST_DeregisterVmsInLoadBalancerResponses holds responses of POST_DeregisterVmsInLoadBalancer",
      "fields": [
        {
          "name": "200",
          "type": "DeregisterVmsInLoadBalancerResponse",
          "kind": 3,
          "nativeType": "DeregisterVmsInLoadBalancerResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_DeregisterVmsInLoadBalancerResponses"
    },
    {
      "name": "POST_GetBillableDigestParameters",
      "description": "POST_GetBillableDigestParameters holds parameters to POST_GetBillableDigest",
      "fields": [
        {
          "name": "getbillabledigestrequest",
          "type": "GetBillableDigestRequest",
          "nativeType": "GetBillableDigestRequest",
          "fieldName": "Getbillabledigestrequest",
          "parameterName": "getbillabledigestrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_GetBillableDigestParameters"
    },
    {
      "name": "POST_GetBillableDigestResponses",
      "description": "POST_GetBillableDigestResponses holds responses of POST_GetBillableDigest",
      "fields": [
        {
          "name": "200",
          "type": "GetBillableDigestResponse",
          "kind": 3,
          "nativeType": "GetBillableDigestResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_GetBillableDigestResponses"
    },
    {
      "name": "POST_GetRegionConfigParameters",
      "description": "POST_GetRegionConfigParameters holds parameters to POST_GetRegionConfig",
      "fields": [
        {
          "name": "getregionconfigrequest",
          "type": "GetRegionConfigRequest",
          "nativeType": "GetRegionConfigRequest",
          "fieldName": "Getregionconfigrequest",
          "parameterName": "getregionconfigrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_GetRegionConfigParameters"
    },
    {
      "name": "POST_GetRegionConfigResponses",
      "description": "POST_GetRegionConfigResponses holds responses of POST_GetRegionConfig",
      "fields": [
        {
          "name": "200",
          "type": "GetRegionConfigResponse",
          "kind": 3,
          "nativeType": "GetRegionConfigResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_GetRegionConfigResponses"
    },
    {
      "name": "POST_ImportKeyPairParameters",
      "description": "POST_ImportKeyPairParameters holds parameters to POST_ImportKeyPair",
      "fields": [
        {
          "name": "importkeypairrequest",
          "type": "ImportKeyPairRequest",
          "nativeType": "ImportKeyPairRequest",
          "fieldName": "Importkeypairrequest",
          "parameterName": "importkeypairrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ImportKeyPairParameters"
    },
    {
      "name": "POST_ImportKeyPairResponses",
      "description": "POST_ImportKeyPairResponses holds responses of POST_ImportKeyPair",
      "fields": [
        {
          "name": "200",
          "type": "ImportKeyPairResponse",
          "kind": 3,
          "nativeType": "ImportKeyPairResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ImportKeyPairResponses"
    },
    {
      "name": "POST_ImportServerCertificateParameters",
      "description": "POST_ImportServerCertificateParameters holds parameters to POST_ImportServerCertificate",
      "fields": [
        {
          "name": "importservercertificaterequest",
          "type": "ImportServerCertificateRequest",
          "nativeType": "ImportServerCertificateRequest",
          "fieldName": "Importservercertificaterequest",
          "parameterName": "importservercertificaterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ImportServerCertificateParameters"
    },
    {
      "name": "POST_ImportServerCertificateResponses",
      "description": "POST_ImportServerCertificateResponses holds responses of POST_ImportServerCertificate",
      "fields": [
        {
          "name": "200",
          "type": "ImportServerCertificateResponse",
          "kind": 3,
          "nativeType": "ImportServerCertificateResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ImportServerCertificateResponses"
    },
    {
      "name": "POST_ImportSnaptShotParameters",
      "description": "POST_ImportSnaptShotParameters holds parameters to POST_ImportSnaptShot",
      "fields": [
        {
          "name": "importsnaptshotrequest",
          "type": "ImportSnaptShotRequest",
          "nativeType": "ImportSnaptShotRequest",
          "fieldName": "Importsnaptshotrequest",
          "parameterName": "importsnaptshotrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ImportSnaptShotParameters"
    },
    {
      "name": "POST_ImportSnaptShotResponses",
      "description": "POST_ImportSnaptShotResponses holds responses of POST_ImportSnaptShot",
      "fields": [
        {
          "name": "200",
          "type": "ImportSnaptShotResponse",
          "kind": 3,
          "nativeType": "ImportSnaptShotResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ImportSnaptShotResponses"
    },
    {
      "name": "POST_LinkDhcpOptionsParameters",
      "description": "POST_LinkDhcpOptionsParameters holds parameters to POST_LinkDhcpOptions",
      "fields": [
        {
          "name": "linkdhcpoptionsrequest",
          "type": "LinkDhcpOptionsRequest",
          "nativeType": "LinkDhcpOptionsRequest",
          "fieldName": "Linkdhcpoptionsrequest",
          "parameterName": "linkdhcpoptionsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkDhcpOptionsParameters"
    },
    {
      "name": "POST_LinkDhcpOptionsResponses",
      "description": "POST_LinkDhcpOptionsResponses holds responses of POST_LinkDhcpOptions",
      "fields": [
        {
          "name": "200",
          "type": "LinkDhcpOptionsResponse",
          "kind": 3,
          "nativeType": "LinkDhcpOptionsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkDhcpOptionsResponses"
    },
    {
      "name": "POST_LinkLoadBalancerServerCertificateParameters",
      "description": "POST_LinkLoadBalancerServerCertificateParameters holds parameters to POST_LinkLoadBalancerServerCertificate",
      "fields": [
        {
          "name": "linkloadbalancerservercertificaterequest",
          "type": "LinkLoadBalancerServerCertificateRequest",
          "nativeType": "LinkLoadBalancerServerCertificateRequest",
          "fieldName": "Linkloadbalancerservercertificaterequest",
          "parameterName": "linkloadbalancerservercertificaterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkLoadBalancerServerCertificateParameters"
    },
    {
      "name": "POST_LinkLoadBalancerServerCertificateResponses",
      "description": "POST_LinkLoadBalancerServerCertificateResponses holds responses of POST_LinkLoadBalancerServerCertificate",
      "fields": [
        {
          "name": "200",
          "type": "LinkLoadBalancerServerCertificateResponse",
          "kind": 3,
          "nativeType": "LinkLoadBalancerServerCertificateResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkLoadBalancerServerCertificateResponses"
    },
    {
      "name": "POST_LinkNetInternetGatewayParameters",
      "description": "POST_LinkNetInternetGatewayParameters holds parameters to POST_LinkNetInternetGateway",
      "fields": [
        {
          "name": "linknetinternetgatewayrequest",
          "type": "LinkNetInternetGatewayRequest",
          "nativeType": "LinkNetInternetGatewayRequest",
          "fieldName": "Linknetinternetgatewayrequest",
          "parameterName": "linknetinternetgatewayrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkNetInternetGatewayParameters"
    },
    {
      "name": "POST_LinkNetInternetGatewayResponses",
      "description": "POST_LinkNetInternetGatewayResponses holds responses of POST_LinkNetInternetGateway",
      "fields": [
        {
          "name": "200",
          "type": "LinkNetInternetGatewayResponse",
          "kind": 3,
          "nativeType": "LinkNetInternetGatewayResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkNetInternetGatewayResponses"
    },
    {
      "name": "POST_LinkNicParameters",
      "description": "POST_LinkNicParameters holds parameters to POST_LinkNic",
      "fields": [
        {
          "name": "linknicrequest",
          "type": "LinkNicRequest",
          "nativeType": "LinkNicRequest",
          "fieldName": "Linknicrequest",
          "parameterName": "linknicrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkNicParameters"
    },
    {
      "name": "POST_LinkNicResponses",
      "description": "POST_LinkNicResponses holds responses of POST_LinkNic",
      "fields": [
        {
          "name": "200",
          "type": "LinkNicResponse",
          "kind": 3,
          "nativeType": "LinkNicResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkNicResponses"
    },
    {
      "name": "POST_LinkPolicyParameters",
      "description": "POST_LinkPolicyParameters holds parameters to POST_LinkPolicy",
      "fields": [
        {
          "name": "linkpolicyrequest",
          "type": "LinkPolicyRequest",
          "nativeType": "LinkPolicyRequest",
          "fieldName": "Linkpolicyrequest",
          "parameterName": "linkpolicyrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkPolicyParameters"
    },
    {
      "name": "POST_LinkPolicyResponses",
      "description": "POST_LinkPolicyResponses holds responses of POST_LinkPolicy",
      "fields": [
        {
          "name": "200",
          "type": "LinkPolicyResponse",
          "kind": 3,
          "nativeType": "LinkPolicyResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkPolicyResponses"
    },
    {
      "name": "POST_LinkPrivateIpParameters",
      "description": "POST_LinkPrivateIpParameters holds parameters to POST_LinkPrivateIp",
      "fields": [
        {
          "name": "linkprivateiprequest",
          "type": "LinkPrivateIpRequest",
          "nativeType": "LinkPrivateIpRequest",
          "fieldName": "Linkprivateiprequest",
          "parameterName": "linkprivateiprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkPrivateIpParameters"
    },
    {
      "name": "POST_LinkPrivateIpResponses",
      "description": "POST_LinkPrivateIpResponses holds responses of POST_LinkPrivateIp",
      "fields": [
        {
          "name": "200",
          "type": "LinkPrivateIpResponse",
          "kind": 3,
          "nativeType": "LinkPrivateIpResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkPrivateIpResponses"
    },
    {
      "name": "POST_LinkPublicIpParameters",
      "description": "POST_LinkPublicIpParameters holds parameters to POST_LinkPublicIp",
      "fields": [
        {
          "name": "linkpubliciprequest",
          "type": "LinkPublicIpRequest",
          "nativeType": "LinkPublicIpRequest",
          "fieldName": "Linkpubliciprequest",
          "parameterName": "linkpubliciprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkPublicIpParameters"
    },
    {
      "name": "POST_LinkPublicIpResponses",
      "description": "POST_LinkPublicIpResponses holds responses of POST_LinkPublicIp",
      "fields": [
        {
          "name": "200",
          "type": "LinkPublicIpResponse",
          "kind": 3,
          "nativeType": "LinkPublicIpResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkPublicIpResponses"
    },
    {
      "name": "POST_LinkRouteTableParameters",
      "description": "POST_LinkRouteTableParameters holds parameters to POST_LinkRouteTable",
      "fields": [
        {
          "name": "linkroutetablerequest",
          "type": "LinkRouteTableRequest",
          "nativeType": "LinkRouteTableRequest",
          "fieldName": "Linkroutetablerequest",
          "parameterName": "linkroutetablerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkRouteTableParameters"
    },
    {
      "name": "POST_LinkRouteTableResponses",
      "description": "POST_LinkRouteTableResponses holds responses of POST_LinkRouteTable",
      "fields": [
        {
          "name": "200",
          "type": "LinkRouteTableResponse",
          "kind": 3,
          "nativeType": "LinkRouteTableResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkRouteTableResponses"
    },
    {
      "name": "POST_LinkVolumeParameters",
      "description": "POST_LinkVolumeParameters holds parameters to POST_LinkVolume",
      "fields": [
        {
          "name": "linkvolumerequest",
          "type": "LinkVolumeRequest",
          "nativeType": "LinkVolumeRequest",
          "fieldName": "Linkvolumerequest",
          "parameterName": "linkvolumerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkVolumeParameters"
    },
    {
      "name": "POST_LinkVolumeResponses",
      "description": "POST_LinkVolumeResponses holds responses of POST_LinkVolume",
      "fields": [
        {
          "name": "200",
          "type": "LinkVolumeResponse",
          "kind": 3,
          "nativeType": "LinkVolumeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkVolumeResponses"
    },
    {
      "name": "POST_LinkVpnGatewayParameters",
      "description": "POST_LinkVpnGatewayParameters holds parameters to POST_LinkVpnGateway",
      "fields": [
        {
          "name": "linkvpngatewayrequest",
          "type": "LinkVpnGatewayRequest",
          "nativeType": "LinkVpnGatewayRequest",
          "fieldName": "Linkvpngatewayrequest",
          "parameterName": "linkvpngatewayrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_LinkVpnGatewayParameters"
    },
    {
      "name": "POST_LinkVpnGatewayResponses",
      "description": "POST_LinkVpnGatewayResponses holds responses of POST_LinkVpnGateway",
      "fields": [
        {
          "name": "200",
          "type": "LinkVpnGatewayResponse",
          "kind": 3,
          "nativeType": "LinkVpnGatewayResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_LinkVpnGatewayResponses"
    },
    {
      "name": "POST_ListGroupsForUserParameters",
      "description": "POST_ListGroupsForUserParameters holds parameters to POST_ListGroupsForUser",
      "fields": [
        {
          "name": "listgroupsforuserrequest",
          "type": "ListGroupsForUserRequest",
          "nativeType": "ListGroupsForUserRequest",
          "fieldName": "Listgroupsforuserrequest",
          "parameterName": "listgroupsforuserrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ListGroupsForUserParameters"
    },
    {
      "name": "POST_ListGroupsForUserResponses",
      "description": "POST_ListGroupsForUserResponses holds responses of POST_ListGroupsForUser",
      "fields": [
        {
          "name": "200",
          "type": "ListGroupsForUserResponse",
          "kind": 3,
          "nativeType": "ListGroupsForUserResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ListGroupsForUserResponses"
    },
    {
      "name": "POST_PurchaseReservedVmsOfferParameters",
      "description": "POST_PurchaseReservedVmsOfferParameters holds parameters to POST_PurchaseReservedVmsOffer",
      "fields": [
        {
          "name": "purchasereservedvmsofferrequest",
          "type": "PurchaseReservedVmsOfferRequest",
          "nativeType": "PurchaseReservedVmsOfferRequest",
          "fieldName": "Purchasereservedvmsofferrequest",
          "parameterName": "purchasereservedvmsofferrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_PurchaseReservedVmsOfferParameters"
    },
    {
      "name": "POST_PurchaseReservedVmsOfferResponses",
      "description": "POST_PurchaseReservedVmsOfferResponses holds responses of POST_PurchaseReservedVmsOffer",
      "fields": [
        {
          "name": "200",
          "type": "PurchaseReservedVmsOfferResponse",
          "kind": 3,
          "nativeType": "PurchaseReservedVmsOfferResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_PurchaseReservedVmsOfferResponses"
    },
    {
      "name": "POST_ReadAccountParameters",
      "description": "POST_ReadAccountParameters holds parameters to POST_ReadAccount",
      "fields": [
        {
          "name": "readaccountrequest",
          "type": "ReadAccountRequest",
          "nativeType": "ReadAccountRequest",
          "fieldName": "Readaccountrequest",
          "parameterName": "readaccountrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadAccountParameters"
    },
    {
      "name": "POST_ReadAccountResponses",
      "description": "POST_ReadAccountResponses holds responses of POST_ReadAccount",
      "fields": [
        {
          "name": "200",
          "type": "ReadAccountResponse",
          "kind": 3,
          "nativeType": "ReadAccountResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadAccountResponses"
    },
    {
      "name": "POST_ReadAccountConsumptionParameters",
      "description": "POST_ReadAccountConsumptionParameters holds parameters to POST_ReadAccountConsumption",
      "fields": [
        {
          "name": "readaccountconsumptionrequest",
          "type": "ReadAccountConsumptionRequest",
          "nativeType": "ReadAccountConsumptionRequest",
          "fieldName": "Readaccountconsumptionrequest",
          "parameterName": "readaccountconsumptionrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadAccountConsumptionParameters"
    },
    {
      "name": "POST_ReadAccountConsumptionResponses",
      "description": "POST_ReadAccountConsumptionResponses holds responses of POST_ReadAccountConsumption",
      "fields": [
        {
          "name": "200",
          "type": "ReadAccountConsumptionResponse",
          "kind": 3,
          "nativeType": "ReadAccountConsumptionResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadAccountConsumptionResponses"
    },
    {
      "name": "POST_ReadAdminPasswordParameters",
      "description": "POST_ReadAdminPasswordParameters holds parameters to POST_ReadAdminPassword",
      "fields": [
        {
          "name": "readadminpasswordrequest",
          "type": "ReadAdminPasswordRequest",
          "nativeType": "ReadAdminPasswordRequest",
          "fieldName": "Readadminpasswordrequest",
          "parameterName": "readadminpasswordrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadAdminPasswordParameters"
    },
    {
      "name": "POST_ReadAdminPasswordResponses",
      "description": "POST_ReadAdminPasswordResponses holds responses of POST_ReadAdminPassword",
      "fields": [
        {
          "name": "200",
          "type": "ReadAdminPasswordResponse",
          "kind": 3,
          "nativeType": "ReadAdminPasswordResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadAdminPasswordResponses"
    },
    {
      "name": "POST_ReadApiKeysParameters",
      "description": "POST_ReadApiKeysParameters holds parameters to POST_ReadApiKeys",
      "fields": [
        {
          "name": "readapikeysrequest",
          "type": "ReadApiKeysRequest",
          "nativeType": "ReadApiKeysRequest",
          "fieldName": "Readapikeysrequest",
          "parameterName": "readapikeysrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadApiKeysParameters"
    },
    {
      "name": "POST_ReadApiKeysResponses",
      "description": "POST_ReadApiKeysResponses holds responses of POST_ReadApiKeys",
      "fields": [
        {
          "name": "200",
          "type": "ReadApiKeysResponse",
          "kind": 3,
          "nativeType": "ReadApiKeysResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadApiKeysResponses"
    },
    {
      "name": "POST_ReadApiLogsParameters",
      "description": "POST_ReadApiLogsParameters holds parameters to POST_ReadApiLogs",
      "fields": [
        {
          "name": "readapilogsrequest",
          "type": "ReadApiLogsRequest",
          "nativeType": "ReadApiLogsRequest",
          "fieldName": "Readapilogsrequest",
          "parameterName": "readapilogsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadApiLogsParameters"
    },
    {
      "name": "POST_ReadApiLogsResponses",
      "description": "POST_ReadApiLogsResponses holds responses of POST_ReadApiLogs",
      "fields": [
        {
          "name": "200",
          "type": "ReadApiLogsResponse",
          "kind": 3,
          "nativeType": "ReadApiLogsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadApiLogsResponses"
    },
    {
      "name": "POST_ReadCatalogParameters",
      "description": "POST_ReadCatalogParameters holds parameters to POST_ReadCatalog",
      "fields": [
        {
          "name": "readcatalogrequest",
          "type": "ReadCatalogRequest",
          "nativeType": "ReadCatalogRequest",
          "fieldName": "Readcatalogrequest",
          "parameterName": "readcatalogrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadCatalogParameters"
    },
    {
      "name": "POST_ReadCatalogResponses",
      "description": "POST_ReadCatalogResponses holds responses of POST_ReadCatalog",
      "fields": [
        {
          "name": "200",
          "type": "ReadCatalogResponse",
          "kind": 3,
          "nativeType": "ReadCatalogResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadCatalogResponses"
    },
    {
      "name": "POST_ReadClientEndpointsParameters",
      "description": "POST_ReadClientEndpointsParameters holds parameters to POST_ReadClientEndpoints",
      "fields": [
        {
          "name": "readclientendpointsrequest",
          "type": "ReadClientEndpointsRequest",
          "nativeType": "ReadClientEndpointsRequest",
          "fieldName": "Readclientendpointsrequest",
          "parameterName": "readclientendpointsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadClientEndpointsParameters"
    },
    {
      "name": "POST_ReadClientEndpointsResponses",
      "description": "POST_ReadClientEndpointsResponses holds responses of POST_ReadClientEndpoints",
      "fields": [
        {
          "name": "200",
          "type": "ReadClientEndpointsResponse",
          "kind": 3,
          "nativeType": "ReadClientEndpointsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadClientEndpointsResponses"
    },
    {
      "name": "POST_ReadConsoleOutputParameters",
      "description": "POST_ReadConsoleOutputParameters holds parameters to POST_ReadConsoleOutput",
      "fields": [
        {
          "name": "readconsoleoutputrequest",
          "type": "ReadConsoleOutputRequest",
          "nativeType": "ReadConsoleOutputRequest",
          "fieldName": "Readconsoleoutputrequest",
          "parameterName": "readconsoleoutputrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadConsoleOutputParameters"
    },
    {
      "name": "POST_ReadConsoleOutputResponses",
      "description": "POST_ReadConsoleOutputResponses holds responses of POST_ReadConsoleOutput",
      "fields": [
        {
          "name": "200",
          "type": "ReadConsoleOutputResponse",
          "kind": 3,
          "nativeType": "ReadConsoleOutputResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadConsoleOutputResponses"
    },
    {
      "name": "POST_ReadDhcpOptionsParameters",
      "description": "POST_ReadDhcpOptionsParameters holds parameters to POST_ReadDhcpOptions",
      "fields": [
        {
          "name": "readdhcpoptionsrequest",
          "type": "ReadDhcpOptionsRequest",
          "nativeType": "ReadDhcpOptionsRequest",
          "fieldName": "Readdhcpoptionsrequest",
          "parameterName": "readdhcpoptionsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadDhcpOptionsParameters"
    },
    {
      "name": "POST_ReadDhcpOptionsResponses",
      "description": "POST_ReadDhcpOptionsResponses holds responses of POST_ReadDhcpOptions",
      "fields": [
        {
          "name": "200",
          "type": "ReadDhcpOptionsResponse",
          "kind": 3,
          "nativeType": "ReadDhcpOptionsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadDhcpOptionsResponses"
    },
    {
      "name": "POST_ReadDirectLinkInterfacesParameters",
      "description": "POST_ReadDirectLinkInterfacesParameters holds parameters to POST_ReadDirectLinkInterfaces",
      "fields": [
        {
          "name": "readdirectlinkinterfacesrequest",
          "type": "ReadDirectLinkInterfacesRequest",
          "nativeType": "ReadDirectLinkInterfacesRequest",
          "fieldName": "Readdirectlinkinterfacesrequest",
          "parameterName": "readdirectlinkinterfacesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadDirectLinkInterfacesParameters"
    },
    {
      "name": "POST_ReadDirectLinkInterfacesResponses",
      "description": "POST_ReadDirectLinkInterfacesResponses holds responses of POST_ReadDirectLinkInterfaces",
      "fields": [
        {
          "name": "200",
          "type": "ReadDirectLinkInterfacesResponse",
          "kind": 3,
          "nativeType": "ReadDirectLinkInterfacesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadDirectLinkInterfacesResponses"
    },
    {
      "name": "POST_ReadDirectLinksParameters",
      "description": "POST_ReadDirectLinksParameters holds parameters to POST_ReadDirectLinks",
      "fields": [
        {
          "name": "readdirectlinksrequest",
          "type": "ReadDirectLinksRequest",
          "nativeType": "ReadDirectLinksRequest",
          "fieldName": "Readdirectlinksrequest",
          "parameterName": "readdirectlinksrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadDirectLinksParameters"
    },
    {
      "name": "POST_ReadDirectLinksResponses",
      "description": "POST_ReadDirectLinksResponses holds responses of POST_ReadDirectLinks",
      "fields": [
        {
          "name": "200",
          "type": "ReadDirectLinksResponse",
          "kind": 3,
          "nativeType": "ReadDirectLinksResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadDirectLinksResponses"
    },
    {
      "name": "POST_ReadFirewallRulesSetsParameters",
      "description": "POST_ReadFirewallRulesSetsParameters holds parameters to POST_ReadFirewallRulesSets",
      "fields": [
        {
          "name": "readfirewallrulessetsrequest",
          "type": "ReadFirewallRulesSetsRequest",
          "nativeType": "ReadFirewallRulesSetsRequest",
          "fieldName": "Readfirewallrulessetsrequest",
          "parameterName": "readfirewallrulessetsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadFirewallRulesSetsParameters"
    },
    {
      "name": "POST_ReadFirewallRulesSetsResponses",
      "description": "POST_ReadFirewallRulesSetsResponses holds responses of POST_ReadFirewallRulesSets",
      "fields": [
        {
          "name": "200",
          "type": "ReadFirewallRulesSetsResponse",
          "kind": 3,
          "nativeType": "ReadFirewallRulesSetsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadFirewallRulesSetsResponses"
    },
    {
      "name": "POST_ReadGroupsParameters",
      "description": "POST_ReadGroupsParameters holds parameters to POST_ReadGroups",
      "fields": [
        {
          "name": "readgroupsrequest",
          "type": "ReadGroupsRequest",
          "nativeType": "ReadGroupsRequest",
          "fieldName": "Readgroupsrequest",
          "parameterName": "readgroupsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadGroupsParameters"
    },
    {
      "name": "POST_ReadGroupsResponses",
      "description": "POST_ReadGroupsResponses holds responses of POST_ReadGroups",
      "fields": [
        {
          "name": "200",
          "type": "ReadGroupsResponse",
          "kind": 3,
          "nativeType": "ReadGroupsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadGroupsResponses"
    },
    {
      "name": "POST_ReadImageAttributeParameters",
      "description": "POST_ReadImageAttributeParameters holds parameters to POST_ReadImageAttribute",
      "fields": [
        {
          "name": "readimageattributerequest",
          "type": "ReadImageAttributeRequest",
          "nativeType": "ReadImageAttributeRequest",
          "fieldName": "Readimageattributerequest",
          "parameterName": "readimageattributerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadImageAttributeParameters"
    },
    {
      "name": "POST_ReadImageAttributeResponses",
      "description": "POST_ReadImageAttributeResponses holds responses of POST_ReadImageAttribute",
      "fields": [
        {
          "name": "200",
          "type": "ReadImageAttributeResponse",
          "kind": 3,
          "nativeType": "ReadImageAttributeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadImageAttributeResponses"
    },
    {
      "name": "POST_ReadImageExportTasksParameters",
      "description": "POST_ReadImageExportTasksParameters holds parameters to POST_ReadImageExportTasks",
      "fields": [
        {
          "name": "readimageexporttasksrequest",
          "type": "ReadImageExportTasksRequest",
          "nativeType": "ReadImageExportTasksRequest",
          "fieldName": "Readimageexporttasksrequest",
          "parameterName": "readimageexporttasksrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadImageExportTasksParameters"
    },
    {
      "name": "POST_ReadImageExportTasksResponses",
      "description": "POST_ReadImageExportTasksResponses holds responses of POST_ReadImageExportTasks",
      "fields": [
        {
          "name": "200",
          "type": "ReadImageExportTasksResponse",
          "kind": 3,
          "nativeType": "ReadImageExportTasksResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadImageExportTasksResponses"
    },
    {
      "name": "POST_ReadImagesParameters",
      "description": "POST_ReadImagesParameters holds parameters to POST_ReadImages",
      "fields": [
        {
          "name": "readimagesrequest",
          "type": "ReadImagesRequest",
          "nativeType": "ReadImagesRequest",
          "fieldName": "Readimagesrequest",
          "parameterName": "readimagesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadImagesParameters"
    },
    {
      "name": "POST_ReadImagesResponses",
      "description": "POST_ReadImagesResponses holds responses of POST_ReadImages",
      "fields": [
        {
          "name": "200",
          "type": "ReadImagesResponse",
          "kind": 3,
          "nativeType": "ReadImagesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadImagesResponses"
    },
    {
      "name": "POST_ReadKeypairsParameters",
      "description": "POST_ReadKeypairsParameters holds parameters to POST_ReadKeypairs",
      "fields": [
        {
          "name": "readkeypairsrequest",
          "type": "ReadKeypairsRequest",
          "nativeType": "ReadKeypairsRequest",
          "fieldName": "Readkeypairsrequest",
          "parameterName": "readkeypairsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadKeypairsParameters"
    },
    {
      "name": "POST_ReadKeypairsResponses",
      "description": "POST_ReadKeypairsResponses holds responses of POST_ReadKeypairs",
      "fields": [
        {
          "name": "200",
          "type": "ReadKeypairsResponse",
          "kind": 3,
          "nativeType": "ReadKeypairsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadKeypairsResponses"
    },
    {
      "name": "POST_ReadListenerRulesParameters",
      "description": "POST_ReadListenerRulesParameters holds parameters to POST_ReadListenerRules",
      "fields": [
        {
          "name": "readlistenerrulesrequest",
          "type": "ReadListenerRulesRequest",
          "nativeType": "ReadListenerRulesRequest",
          "fieldName": "Readlistenerrulesrequest",
          "parameterName": "readlistenerrulesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadListenerRulesParameters"
    },
    {
      "name": "POST_ReadListenerRulesResponses",
      "description": "POST_ReadListenerRulesResponses holds responses of POST_ReadListenerRules",
      "fields": [
        {
          "name": "200",
          "type": "ReadListenerRulesResponse",
          "kind": 3,
          "nativeType": "ReadListenerRulesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadListenerRulesResponses"
    },
    {
      "name": "POST_ReadLoadBalancerAttributesParameters",
      "description": "POST_ReadLoadBalancerAttributesParameters holds parameters to POST_ReadLoadBalancerAttributes",
      "fields": [
        {
          "name": "readloadbalancerattributesrequest",
          "type": "ReadLoadBalancerAttributesRequest",
          "nativeType": "ReadLoadBalancerAttributesRequest",
          "fieldName": "Readloadbalancerattributesrequest",
          "parameterName": "readloadbalancerattributesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadLoadBalancerAttributesParameters"
    },
    {
      "name": "POST_ReadLoadBalancerAttributesResponses",
      "description": "POST_ReadLoadBalancerAttributesResponses holds responses of POST_ReadLoadBalancerAttributes",
      "fields": [
        {
          "name": "200",
          "type": "ReadLoadBalancerAttributesResponse",
          "kind": 3,
          "nativeType": "ReadLoadBalancerAttributesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadLoadBalancerAttributesResponses"
    },
    {
      "name": "POST_ReadLoadBalancersParameters",
      "description": "POST_ReadLoadBalancersParameters holds parameters to POST_ReadLoadBalancers",
      "fields": [
        {
          "name": "readloadbalancersrequest",
          "type": "ReadLoadBalancersRequest",
          "nativeType": "ReadLoadBalancersRequest",
          "fieldName": "Readloadbalancersrequest",
          "parameterName": "readloadbalancersrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadLoadBalancersParameters"
    },
    {
      "name": "POST_ReadLoadBalancersResponses",
      "description": "POST_ReadLoadBalancersResponses holds responses of POST_ReadLoadBalancers",
      "fields": [
        {
          "name": "200",
          "type": "ReadLoadBalancersResponse",
          "kind": 3,
          "nativeType": "ReadLoadBalancersResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadLoadBalancersResponses"
    },
    {
      "name": "POST_ReadNatServicesParameters",
      "description": "POST_ReadNatServicesParameters holds parameters to POST_ReadNatServices",
      "fields": [
        {
          "name": "readnatservicesrequest",
          "type": "ReadNatServicesRequest",
          "nativeType": "ReadNatServicesRequest",
          "fieldName": "Readnatservicesrequest",
          "parameterName": "readnatservicesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadNatServicesParameters"
    },
    {
      "name": "POST_ReadNatServicesResponses",
      "description": "POST_ReadNatServicesResponses holds responses of POST_ReadNatServices",
      "fields": [
        {
          "name": "200",
          "type": "ReadNatServicesResponse",
          "kind": 3,
          "nativeType": "ReadNatServicesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadNatServicesResponses"
    },
    {
      "name": "POST_ReadNetAccessesParameters",
      "description": "POST_ReadNetAccessesParameters holds parameters to POST_ReadNetAccesses",
      "fields": [
        {
          "name": "readnetaccessesrequest",
          "type": "ReadNetAccessesRequest",
          "nativeType": "ReadNetAccessesRequest",
          "fieldName": "Readnetaccessesrequest",
          "parameterName": "readnetaccessesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadNetAccessesParameters"
    },
    {
      "name": "POST_ReadNetAccessesResponses",
      "description": "POST_ReadNetAccessesResponses holds responses of POST_ReadNetAccesses",
      "fields": [
        {
          "name": "200",
          "type": "ReadNetAccessesResponse",
          "kind": 3,
          "nativeType": "ReadNetAccessesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadNetAccessesResponses"
    },
    {
      "name": "POST_ReadNetInternetGatewaysParameters",
      "description": "POST_ReadNetInternetGatewaysParameters holds parameters to POST_ReadNetInternetGateways",
      "fields": [
        {
          "name": "readnetinternetgatewaysrequest",
          "type": "ReadNetInternetGatewaysRequest",
          "nativeType": "ReadNetInternetGatewaysRequest",
          "fieldName": "Readnetinternetgatewaysrequest",
          "parameterName": "readnetinternetgatewaysrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadNetInternetGatewaysParameters"
    },
    {
      "name": "POST_ReadNetInternetGatewaysResponses",
      "description": "POST_ReadNetInternetGatewaysResponses holds responses of POST_ReadNetInternetGateways",
      "fields": [
        {
          "name": "200",
          "type": "ReadNetInternetGatewaysResponse",
          "kind": 3,
          "nativeType": "ReadNetInternetGatewaysResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadNetInternetGatewaysResponses"
    },
    {
      "name": "POST_ReadNetOptionsParameters",
      "description": "POST_ReadNetOptionsParameters holds parameters to POST_ReadNetOptions",
      "fields": [
        {
          "name": "readnetoptionsrequest",
          "type": "ReadNetOptionsRequest",
          "nativeType": "ReadNetOptionsRequest",
          "fieldName": "Readnetoptionsrequest",
          "parameterName": "readnetoptionsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadNetOptionsParameters"
    },
    {
      "name": "POST_ReadNetOptionsResponses",
      "description": "POST_ReadNetOptionsResponses holds responses of POST_ReadNetOptions",
      "fields": [
        {
          "name": "200",
          "type": "ReadNetOptionsResponse",
          "kind": 3,
          "nativeType": "ReadNetOptionsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadNetOptionsResponses"
    },
    {
      "name": "POST_ReadNetPeeringsParameters",
      "description": "POST_ReadNetPeeringsParameters holds parameters to POST_ReadNetPeerings",
      "fields": [
        {
          "name": "readnetpeeringsrequest",
          "type": "ReadNetPeeringsRequest",
          "nativeType": "ReadNetPeeringsRequest",
          "fieldName": "Readnetpeeringsrequest",
          "parameterName": "readnetpeeringsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadNetPeeringsParameters"
    },
    {
      "name": "POST_ReadNetPeeringsResponses",
      "description": "POST_ReadNetPeeringsResponses holds responses of POST_ReadNetPeerings",
      "fields": [
        {
          "name": "200",
          "type": "ReadNetPeeringsResponse",
          "kind": 3,
          "nativeType": "ReadNetPeeringsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadNetPeeringsResponses"
    },
    {
      "name": "POST_ReadNetServicesParameters",
      "description": "POST_ReadNetServicesParameters holds parameters to POST_ReadNetServices",
      "fields": [
        {
          "name": "readnetservicesrequest",
          "type": "ReadNetServicesRequest",
          "nativeType": "ReadNetServicesRequest",
          "fieldName": "Readnetservicesrequest",
          "parameterName": "readnetservicesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadNetServicesParameters"
    },
    {
      "name": "POST_ReadNetServicesResponses",
      "description": "POST_ReadNetServicesResponses holds responses of POST_ReadNetServices",
      "fields": [
        {
          "name": "200",
          "type": "ReadNetServicesResponse",
          "kind": 3,
          "nativeType": "ReadNetServicesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadNetServicesResponses"
    },
    {
      "name": "POST_ReadNetsParameters",
      "description": "POST_ReadNetsParameters holds parameters to POST_ReadNets",
      "fields": [
        {
          "name": "readnetsrequest",
          "type": "ReadNetsRequest",
          "nativeType": "ReadNetsRequest",
          "fieldName": "Readnetsrequest",
          "parameterName": "readnetsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadNetsParameters"
    },
    {
      "name": "POST_ReadNetsResponses",
      "description": "POST_ReadNetsResponses holds responses of POST_ReadNets",
      "fields": [
        {
          "name": "200",
          "type": "ReadNetsResponse",
          "kind": 3,
          "nativeType": "ReadNetsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadNetsResponses"
    },
    {
      "name": "POST_ReadNicsParameters",
      "description": "POST_ReadNicsParameters holds parameters to POST_ReadNics",
      "fields": [
        {
          "name": "readnicsrequest",
          "type": "ReadNicsRequest",
          "nativeType": "ReadNicsRequest",
          "fieldName": "Readnicsrequest",
          "parameterName": "readnicsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadNicsParameters"
    },
    {
      "name": "POST_ReadNicsResponses",
      "description": "POST_ReadNicsResponses holds responses of POST_ReadNics",
      "fields": [
        {
          "name": "200",
          "type": "ReadNicsResponse",
          "kind": 3,
          "nativeType": "ReadNicsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadNicsResponses"
    },
    {
      "name": "POST_ReadPoliciesParameters",
      "description": "POST_ReadPoliciesParameters holds parameters to POST_ReadPolicies",
      "fields": [
        {
          "name": "readpoliciesrequest",
          "type": "ReadPoliciesRequest",
          "nativeType": "ReadPoliciesRequest",
          "fieldName": "Readpoliciesrequest",
          "parameterName": "readpoliciesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadPoliciesParameters"
    },
    {
      "name": "POST_ReadPoliciesResponses",
      "description": "POST_ReadPoliciesResponses holds responses of POST_ReadPolicies",
      "fields": [
        {
          "name": "200",
          "type": "ReadPoliciesResponse",
          "kind": 3,
          "nativeType": "ReadPoliciesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadPoliciesResponses"
    },
    {
      "name": "POST_ReadPrefixListsParameters",
      "description": "POST_ReadPrefixListsParameters holds parameters to POST_ReadPrefixLists",
      "fields": [
        {
          "name": "readprefixlistsrequest",
          "type": "ReadPrefixListsRequest",
          "nativeType": "ReadPrefixListsRequest",
          "fieldName": "Readprefixlistsrequest",
          "parameterName": "readprefixlistsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadPrefixListsParameters"
    },
    {
      "name": "POST_ReadPrefixListsResponses",
      "description": "POST_ReadPrefixListsResponses holds responses of POST_ReadPrefixLists",
      "fields": [
        {
          "name": "200",
          "type": "ReadPrefixListsResponse",
          "kind": 3,
          "nativeType": "ReadPrefixListsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadPrefixListsResponses"
    },
    {
      "name": "POST_ReadProductTypesParameters",
      "description": "POST_ReadProductTypesParameters holds parameters to POST_ReadProductTypes",
      "fields": [
        {
          "name": "readproducttypesrequest",
          "type": "ReadProductTypesRequest",
          "nativeType": "ReadProductTypesRequest",
          "fieldName": "Readproducttypesrequest",
          "parameterName": "readproducttypesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadProductTypesParameters"
    },
    {
      "name": "POST_ReadProductTypesResponses",
      "description": "POST_ReadProductTypesResponses holds responses of POST_ReadProductTypes",
      "fields": [
        {
          "name": "200",
          "type": "ReadProductTypesResponse",
          "kind": 3,
          "nativeType": "ReadProductTypesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadProductTypesResponses"
    },
    {
      "name": "POST_ReadPublicCatalogParameters",
      "description": "POST_ReadPublicCatalogParameters holds parameters to POST_ReadPublicCatalog",
      "fields": [
        {
          "name": "readpubliccatalogrequest",
          "type": "ReadPublicCatalogRequest",
          "nativeType": "ReadPublicCatalogRequest",
          "fieldName": "Readpubliccatalogrequest",
          "parameterName": "readpubliccatalogrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadPublicCatalogParameters"
    },
    {
      "name": "POST_ReadPublicCatalogResponses",
      "description": "POST_ReadPublicCatalogResponses holds responses of POST_ReadPublicCatalog",
      "fields": [
        {
          "name": "200",
          "type": "ReadPublicCatalogResponse",
          "kind": 3,
          "nativeType": "ReadPublicCatalogResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadPublicCatalogResponses"
    },
    {
      "name": "POST_ReadPublicIpRangesParameters",
      "description": "POST_ReadPublicIpRangesParameters holds parameters to POST_ReadPublicIpRanges",
      "fields": [
        {
          "name": "readpubliciprangesrequest",
          "type": "ReadPublicIpRangesRequest",
          "nativeType": "ReadPublicIpRangesRequest",
          "fieldName": "Readpubliciprangesrequest",
          "parameterName": "readpubliciprangesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadPublicIpRangesParameters"
    },
    {
      "name": "POST_ReadPublicIpRangesResponses",
      "description": "POST_ReadPublicIpRangesResponses holds responses of POST_ReadPublicIpRanges",
      "fields": [
        {
          "name": "200",
          "type": "ReadPublicIpRangesResponse",
          "kind": 3,
          "nativeType": "ReadPublicIpRangesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadPublicIpRangesResponses"
    },
    {
      "name": "POST_ReadPublicIpsParameters",
      "description": "POST_ReadPublicIpsParameters holds parameters to POST_ReadPublicIps",
      "fields": [
        {
          "name": "readpublicipsrequest",
          "type": "ReadPublicIpsRequest",
          "nativeType": "ReadPublicIpsRequest",
          "fieldName": "Readpublicipsrequest",
          "parameterName": "readpublicipsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadPublicIpsParameters"
    },
    {
      "name": "POST_ReadPublicIpsResponses",
      "description": "POST_ReadPublicIpsResponses holds responses of POST_ReadPublicIps",
      "fields": [
        {
          "name": "200",
          "type": "ReadPublicIpsResponse",
          "kind": 3,
          "nativeType": "ReadPublicIpsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadPublicIpsResponses"
    },
    {
      "name": "POST_ReadQuotasParameters",
      "description": "POST_ReadQuotasParameters holds parameters to POST_ReadQuotas",
      "fields": [
        {
          "name": "readquotasrequest",
          "type": "ReadQuotasRequest",
          "nativeType": "ReadQuotasRequest",
          "fieldName": "Readquotasrequest",
          "parameterName": "readquotasrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadQuotasParameters"
    },
    {
      "name": "POST_ReadQuotasResponses",
      "description": "POST_ReadQuotasResponses holds responses of POST_ReadQuotas",
      "fields": [
        {
          "name": "200",
          "type": "ReadQuotasResponse",
          "kind": 3,
          "nativeType": "ReadQuotasResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadQuotasResponses"
    },
    {
      "name": "POST_ReadRegionsParameters",
      "description": "POST_ReadRegionsParameters holds parameters to POST_ReadRegions",
      "fields": [
        {
          "name": "readregionsrequest",
          "type": "ReadRegionsRequest",
          "nativeType": "ReadRegionsRequest",
          "fieldName": "Readregionsrequest",
          "parameterName": "readregionsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadRegionsParameters"
    },
    {
      "name": "POST_ReadRegionsResponses",
      "description": "POST_ReadRegionsResponses holds responses of POST_ReadRegions",
      "fields": [
        {
          "name": "200",
          "type": "ReadRegionsResponse",
          "kind": 3,
          "nativeType": "ReadRegionsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadRegionsResponses"
    },
    {
      "name": "POST_ReadReservedVmOffersParameters",
      "description": "POST_ReadReservedVmOffersParameters holds parameters to POST_ReadReservedVmOffers",
      "fields": [
        {
          "name": "readreservedvmoffersrequest",
          "type": "ReadReservedVmOffersRequest",
          "nativeType": "ReadReservedVmOffersRequest",
          "fieldName": "Readreservedvmoffersrequest",
          "parameterName": "readreservedvmoffersrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadReservedVmOffersParameters"
    },
    {
      "name": "POST_ReadReservedVmOffersResponses",
      "description": "POST_ReadReservedVmOffersResponses holds responses of POST_ReadReservedVmOffers",
      "fields": [
        {
          "name": "200",
          "type": "ReadReservedVmOffersResponse",
          "kind": 3,
          "nativeType": "ReadReservedVmOffersResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadReservedVmOffersResponses"
    },
    {
      "name": "POST_ReadReservedVmsParameters",
      "description": "POST_ReadReservedVmsParameters holds parameters to POST_ReadReservedVms",
      "fields": [
        {
          "name": "readreservedvmsrequest",
          "type": "ReadReservedVmsRequest",
          "nativeType": "ReadReservedVmsRequest",
          "fieldName": "Readreservedvmsrequest",
          "parameterName": "readreservedvmsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadReservedVmsParameters"
    },
    {
      "name": "POST_ReadReservedVmsResponses",
      "description": "POST_ReadReservedVmsResponses holds responses of POST_ReadReservedVms",
      "fields": [
        {
          "name": "200",
          "type": "ReadReservedVmsResponse",
          "kind": 3,
          "nativeType": "ReadReservedVmsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadReservedVmsResponses"
    },
    {
      "name": "POST_ReadRouteTablesParameters",
      "description": "POST_ReadRouteTablesParameters holds parameters to POST_ReadRouteTables",
      "fields": [
        {
          "name": "readroutetablesrequest",
          "type": "ReadRouteTablesRequest",
          "nativeType": "ReadRouteTablesRequest",
          "fieldName": "Readroutetablesrequest",
          "parameterName": "readroutetablesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadRouteTablesParameters"
    },
    {
      "name": "POST_ReadRouteTablesResponses",
      "description": "POST_ReadRouteTablesResponses holds responses of POST_ReadRouteTables",
      "fields": [
        {
          "name": "200",
          "type": "ReadRouteTablesResponse",
          "kind": 3,
          "nativeType": "ReadRouteTablesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadRouteTablesResponses"
    },
    {
      "name": "POST_ReadServerCertificatesParameters",
      "description": "POST_ReadServerCertificatesParameters holds parameters to POST_ReadServerCertificates",
      "fields": [
        {
          "name": "readservercertificatesrequest",
          "type": "ReadServerCertificatesRequest",
          "nativeType": "ReadServerCertificatesRequest",
          "fieldName": "Readservercertificatesrequest",
          "parameterName": "readservercertificatesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadServerCertificatesParameters"
    },
    {
      "name": "POST_ReadServerCertificatesResponses",
      "description": "POST_ReadServerCertificatesResponses holds responses of POST_ReadServerCertificates",
      "fields": [
        {
          "name": "200",
          "type": "ReadServerCertificatesResponse",
          "kind": 3,
          "nativeType": "ReadServerCertificatesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadServerCertificatesResponses"
    },
    {
      "name": "POST_ReadSitesParameters",
      "description": "POST_ReadSitesParameters holds parameters to POST_ReadSites",
      "fields": [
        {
          "name": "readsitesrequest",
          "type": "ReadSitesRequest",
          "nativeType": "ReadSitesRequest",
          "fieldName": "Readsitesrequest",
          "parameterName": "readsitesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadSitesParameters"
    },
    {
      "name": "POST_ReadSitesResponses",
      "description": "POST_ReadSitesResponses holds responses of POST_ReadSites",
      "fields": [
        {
          "name": "200",
          "type": "ReadSitesResponse",
          "kind": 3,
          "nativeType": "ReadSitesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadSitesResponses"
    },
    {
      "name": "POST_ReadSnapshotAttributeParameters",
      "description": "POST_ReadSnapshotAttributeParameters holds parameters to POST_ReadSnapshotAttribute",
      "fields": [
        {
          "name": "readsnapshotattributerequest",
          "type": "ReadSnapshotAttributeRequest",
          "nativeType": "ReadSnapshotAttributeRequest",
          "fieldName": "Readsnapshotattributerequest",
          "parameterName": "readsnapshotattributerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadSnapshotAttributeParameters"
    },
    {
      "name": "POST_ReadSnapshotAttributeResponses",
      "description": "POST_ReadSnapshotAttributeResponses holds responses of POST_ReadSnapshotAttribute",
      "fields": [
        {
          "name": "200",
          "type": "ReadSnapshotAttributeResponse",
          "kind": 3,
          "nativeType": "ReadSnapshotAttributeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadSnapshotAttributeResponses"
    },
    {
      "name": "POST_ReadSnapshotExportTasksParameters",
      "description": "POST_ReadSnapshotExportTasksParameters holds parameters to POST_ReadSnapshotExportTasks",
      "fields": [
        {
          "name": "readsnapshotexporttasksrequest",
          "type": "ReadSnapshotExportTasksRequest",
          "nativeType": "ReadSnapshotExportTasksRequest",
          "fieldName": "Readsnapshotexporttasksrequest",
          "parameterName": "readsnapshotexporttasksrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadSnapshotExportTasksParameters"
    },
    {
      "name": "POST_ReadSnapshotExportTasksResponses",
      "description": "POST_ReadSnapshotExportTasksResponses holds responses of POST_ReadSnapshotExportTasks",
      "fields": [
        {
          "name": "200",
          "type": "ReadSnapshotExportTasksResponse",
          "kind": 3,
          "nativeType": "ReadSnapshotExportTasksResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadSnapshotExportTasksResponses"
    },
    {
      "name": "POST_ReadSnapshotsParameters",
      "description": "POST_ReadSnapshotsParameters holds parameters to POST_ReadSnapshots",
      "fields": [
        {
          "name": "readsnapshotsrequest",
          "type": "ReadSnapshotsRequest",
          "nativeType": "ReadSnapshotsRequest",
          "fieldName": "Readsnapshotsrequest",
          "parameterName": "readsnapshotsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadSnapshotsParameters"
    },
    {
      "name": "POST_ReadSnapshotsResponses",
      "description": "POST_ReadSnapshotsResponses holds responses of POST_ReadSnapshots",
      "fields": [
        {
          "name": "200",
          "type": "ReadSnapshotsResponse",
          "kind": 3,
          "nativeType": "ReadSnapshotsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadSnapshotsResponses"
    },
    {
      "name": "POST_ReadSubRegionsParameters",
      "description": "POST_ReadSubRegionsParameters holds parameters to POST_ReadSubRegions",
      "fields": [
        {
          "name": "readsubregionsrequest",
          "type": "ReadSubRegionsRequest",
          "nativeType": "ReadSubRegionsRequest",
          "fieldName": "Readsubregionsrequest",
          "parameterName": "readsubregionsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadSubRegionsParameters"
    },
    {
      "name": "POST_ReadSubRegionsResponses",
      "description": "POST_ReadSubRegionsResponses holds responses of POST_ReadSubRegions",
      "fields": [
        {
          "name": "200",
          "type": "ReadSubRegionsResponse",
          "kind": 3,
          "nativeType": "ReadSubRegionsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadSubRegionsResponses"
    },
    {
      "name": "POST_ReadSubnetsParameters",
      "description": "POST_ReadSubnetsParameters holds parameters to POST_ReadSubnets",
      "fields": [
        {
          "name": "readsubnetsrequest",
          "type": "ReadSubnetsRequest",
          "nativeType": "ReadSubnetsRequest",
          "fieldName": "Readsubnetsrequest",
          "parameterName": "readsubnetsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadSubnetsParameters"
    },
    {
      "name": "POST_ReadSubnetsResponses",
      "description": "POST_ReadSubnetsResponses holds responses of POST_ReadSubnets",
      "fields": [
        {
          "name": "200",
          "type": "ReadSubnetsResponse",
          "kind": 3,
          "nativeType": "ReadSubnetsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadSubnetsResponses"
    },
    {
      "name": "POST_ReadTagsParameters",
      "description": "POST_ReadTagsParameters holds parameters to POST_ReadTags",
      "fields": [
        {
          "name": "readtagsrequest",
          "type": "ReadTagsRequest",
          "nativeType": "ReadTagsRequest",
          "fieldName": "Readtagsrequest",
          "parameterName": "readtagsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadTagsParameters"
    },
    {
      "name": "POST_ReadTagsResponses",
      "description": "POST_ReadTagsResponses holds responses of POST_ReadTags",
      "fields": [
        {
          "name": "200",
          "type": "ReadTagsResponse",
          "kind": 3,
          "nativeType": "ReadTagsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadTagsResponses"
    },
    {
      "name": "POST_ReadUsersParameters",
      "description": "POST_ReadUsersParameters holds parameters to POST_ReadUsers",
      "fields": [
        {
          "name": "readusersrequest",
          "type": "ReadUsersRequest",
          "nativeType": "ReadUsersRequest",
          "fieldName": "Readusersrequest",
          "parameterName": "readusersrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadUsersParameters"
    },
    {
      "name": "POST_ReadUsersResponses",
      "description": "POST_ReadUsersResponses holds responses of POST_ReadUsers",
      "fields": [
        {
          "name": "200",
          "type": "ReadUsersResponse",
          "kind": 3,
          "nativeType": "ReadUsersResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadUsersResponses"
    },
    {
      "name": "POST_ReadVmAttributeParameters",
      "description": "POST_ReadVmAttributeParameters holds parameters to POST_ReadVmAttribute",
      "fields": [
        {
          "name": "readvmattributerequest",
          "type": "ReadVmAttributeRequest",
          "nativeType": "ReadVmAttributeRequest",
          "fieldName": "Readvmattributerequest",
          "parameterName": "readvmattributerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadVmAttributeParameters"
    },
    {
      "name": "POST_ReadVmAttributeResponses",
      "description": "POST_ReadVmAttributeResponses holds responses of POST_ReadVmAttribute",
      "fields": [
        {
          "name": "200",
          "type": "ReadVmAttributeResponse",
          "kind": 3,
          "nativeType": "ReadVmAttributeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadVmAttributeResponses"
    },
    {
      "name": "POST_ReadVmTypesParameters",
      "description": "POST_ReadVmTypesParameters holds parameters to POST_ReadVmTypes",
      "fields": [
        {
          "name": "readvmtypesrequest",
          "type": "ReadVmTypesRequest",
          "nativeType": "ReadVmTypesRequest",
          "fieldName": "Readvmtypesrequest",
          "parameterName": "readvmtypesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadVmTypesParameters"
    },
    {
      "name": "POST_ReadVmTypesResponses",
      "description": "POST_ReadVmTypesResponses holds responses of POST_ReadVmTypes",
      "fields": [
        {
          "name": "200",
          "type": "ReadVmTypesResponse",
          "kind": 3,
          "nativeType": "ReadVmTypesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadVmTypesResponses"
    },
    {
      "name": "POST_ReadVmsParameters",
      "description": "POST_ReadVmsParameters holds parameters to POST_ReadVms",
      "fields": [
        {
          "name": "readvmsrequest",
          "type": "ReadVmsRequest",
          "nativeType": "ReadVmsRequest",
          "fieldName": "Readvmsrequest",
          "parameterName": "readvmsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadVmsParameters"
    },
    {
      "name": "POST_ReadVmsResponses",
      "description": "POST_ReadVmsResponses holds responses of POST_ReadVms",
      "fields": [
        {
          "name": "200",
          "type": "ReadVmsResponse",
          "kind": 3,
          "nativeType": "ReadVmsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadVmsResponses"
    },
    {
      "name": "POST_ReadVmsHealthParameters",
      "description": "POST_ReadVmsHealthParameters holds parameters to POST_ReadVmsHealth",
      "fields": [
        {
          "name": "readvmshealthrequest",
          "type": "ReadVmsHealthRequest",
          "nativeType": "ReadVmsHealthRequest",
          "fieldName": "Readvmshealthrequest",
          "parameterName": "readvmshealthrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadVmsHealthParameters"
    },
    {
      "name": "POST_ReadVmsHealthResponses",
      "description": "POST_ReadVmsHealthResponses holds responses of POST_ReadVmsHealth",
      "fields": [
        {
          "name": "200",
          "type": "ReadVmsHealthResponse",
          "kind": 3,
          "nativeType": "ReadVmsHealthResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadVmsHealthResponses"
    },
    {
      "name": "POST_ReadVmsStateParameters",
      "description": "POST_ReadVmsStateParameters holds parameters to POST_ReadVmsState",
      "fields": [
        {
          "name": "readvmsstaterequest",
          "type": "ReadVmsStateRequest",
          "nativeType": "ReadVmsStateRequest",
          "fieldName": "Readvmsstaterequest",
          "parameterName": "readvmsstaterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadVmsStateParameters"
    },
    {
      "name": "POST_ReadVmsStateResponses",
      "description": "POST_ReadVmsStateResponses holds responses of POST_ReadVmsState",
      "fields": [
        {
          "name": "200",
          "type": "ReadVmsStateResponse",
          "kind": 3,
          "nativeType": "ReadVmsStateResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadVmsStateResponses"
    },
    {
      "name": "POST_ReadVolumesParameters",
      "description": "POST_ReadVolumesParameters holds parameters to POST_ReadVolumes",
      "fields": [
        {
          "name": "readvolumesrequest",
          "type": "ReadVolumesRequest",
          "nativeType": "ReadVolumesRequest",
          "fieldName": "Readvolumesrequest",
          "parameterName": "readvolumesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadVolumesParameters"
    },
    {
      "name": "POST_ReadVolumesResponses",
      "description": "POST_ReadVolumesResponses holds responses of POST_ReadVolumes",
      "fields": [
        {
          "name": "200",
          "type": "ReadVolumesResponse",
          "kind": 3,
          "nativeType": "ReadVolumesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadVolumesResponses"
    },
    {
      "name": "POST_ReadVpnConnectionsParameters",
      "description": "POST_ReadVpnConnectionsParameters holds parameters to POST_ReadVpnConnections",
      "fields": [
        {
          "name": "readvpnconnectionsrequest",
          "type": "ReadVpnConnectionsRequest",
          "nativeType": "ReadVpnConnectionsRequest",
          "fieldName": "Readvpnconnectionsrequest",
          "parameterName": "readvpnconnectionsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadVpnConnectionsParameters"
    },
    {
      "name": "POST_ReadVpnConnectionsResponses",
      "description": "POST_ReadVpnConnectionsResponses holds responses of POST_ReadVpnConnections",
      "fields": [
        {
          "name": "200",
          "type": "ReadVpnConnectionsResponse",
          "kind": 3,
          "nativeType": "ReadVpnConnectionsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadVpnConnectionsResponses"
    },
    {
      "name": "POST_ReadVpnGatewaysParameters",
      "description": "POST_ReadVpnGatewaysParameters holds parameters to POST_ReadVpnGateways",
      "fields": [
        {
          "name": "readvpngatewaysrequest",
          "type": "ReadVpnGatewaysRequest",
          "nativeType": "ReadVpnGatewaysRequest",
          "fieldName": "Readvpngatewaysrequest",
          "parameterName": "readvpngatewaysrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ReadVpnGatewaysParameters"
    },
    {
      "name": "POST_ReadVpnGatewaysResponses",
      "description": "POST_ReadVpnGatewaysResponses holds responses of POST_ReadVpnGateways",
      "fields": [
        {
          "name": "200",
          "type": "ReadVpnGatewaysResponse",
          "kind": 3,
          "nativeType": "ReadVpnGatewaysResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ReadVpnGatewaysResponses"
    },
    {
      "name": "POST_RebootVmsParameters",
      "description": "POST_RebootVmsParameters holds parameters to POST_RebootVms",
      "fields": [
        {
          "name": "rebootvmsrequest",
          "type": "RebootVmsRequest",
          "nativeType": "RebootVmsRequest",
          "fieldName": "Rebootvmsrequest",
          "parameterName": "rebootvmsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_RebootVmsParameters"
    },
    {
      "name": "POST_RebootVmsResponses",
      "description": "POST_RebootVmsResponses holds responses of POST_RebootVms",
      "fields": [
        {
          "name": "200",
          "type": "RebootVmsResponse",
          "kind": 3,
          "nativeType": "RebootVmsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_RebootVmsResponses"
    },
    {
      "name": "POST_RegisterImageParameters",
      "description": "POST_RegisterImageParameters holds parameters to POST_RegisterImage",
      "fields": [
        {
          "name": "registerimagerequest",
          "type": "RegisterImageRequest",
          "nativeType": "RegisterImageRequest",
          "fieldName": "Registerimagerequest",
          "parameterName": "registerimagerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_RegisterImageParameters"
    },
    {
      "name": "POST_RegisterImageResponses",
      "description": "POST_RegisterImageResponses holds responses of POST_RegisterImage",
      "fields": [
        {
          "name": "200",
          "type": "RegisterImageResponse",
          "kind": 3,
          "nativeType": "RegisterImageResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_RegisterImageResponses"
    },
    {
      "name": "POST_RegisterUserInGroupParameters",
      "description": "POST_RegisterUserInGroupParameters holds parameters to POST_RegisterUserInGroup",
      "fields": [
        {
          "name": "registeruseringrouprequest",
          "type": "RegisterUserInGroupRequest",
          "nativeType": "RegisterUserInGroupRequest",
          "fieldName": "Registeruseringrouprequest",
          "parameterName": "registeruseringrouprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_RegisterUserInGroupParameters"
    },
    {
      "name": "POST_RegisterUserInGroupResponses",
      "description": "POST_RegisterUserInGroupResponses holds responses of POST_RegisterUserInGroup",
      "fields": [
        {
          "name": "200",
          "type": "RegisterUserInGroupResponse",
          "kind": 3,
          "nativeType": "RegisterUserInGroupResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_RegisterUserInGroupResponses"
    },
    {
      "name": "POST_RegisterVmsInListenerRuleParameters",
      "description": "POST_RegisterVmsInListenerRuleParameters holds parameters to POST_RegisterVmsInListenerRule",
      "fields": [
        {
          "name": "registervmsinlistenerrulerequest",
          "type": "RegisterVmsInListenerRuleRequest",
          "nativeType": "RegisterVmsInListenerRuleRequest",
          "fieldName": "Registervmsinlistenerrulerequest",
          "parameterName": "registervmsinlistenerrulerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_RegisterVmsInListenerRuleParameters"
    },
    {
      "name": "POST_RegisterVmsInListenerRuleResponses",
      "description": "POST_RegisterVmsInListenerRuleResponses holds responses of POST_RegisterVmsInListenerRule",
      "fields": [
        {
          "name": "200",
          "type": "RegisterVmsInListenerRuleResponse",
          "kind": 3,
          "nativeType": "RegisterVmsInListenerRuleResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_RegisterVmsInListenerRuleResponses"
    },
    {
      "name": "POST_RegisterVmsInLoadBalancerParameters",
      "description": "POST_RegisterVmsInLoadBalancerParameters holds parameters to POST_RegisterVmsInLoadBalancer",
      "fields": [
        {
          "name": "registervmsinloadbalancerrequest",
          "type": "RegisterVmsInLoadBalancerRequest",
          "nativeType": "RegisterVmsInLoadBalancerRequest",
          "fieldName": "Registervmsinloadbalancerrequest",
          "parameterName": "registervmsinloadbalancerrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_RegisterVmsInLoadBalancerParameters"
    },
    {
      "name": "POST_RegisterVmsInLoadBalancerResponses",
      "description": "POST_RegisterVmsInLoadBalancerResponses holds responses of POST_RegisterVmsInLoadBalancer",
      "fields": [
        {
          "name": "200",
          "type": "RegisterVmsInLoadBalancerResponse",
          "kind": 3,
          "nativeType": "RegisterVmsInLoadBalancerResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_RegisterVmsInLoadBalancerResponses"
    },
    {
      "name": "POST_RejectNetPeeringParameters",
      "description": "POST_RejectNetPeeringParameters holds parameters to POST_RejectNetPeering",
      "fields": [
        {
          "name": "rejectnetpeeringrequest",
          "type": "RejectNetPeeringRequest",
          "nativeType": "RejectNetPeeringRequest",
          "fieldName": "Rejectnetpeeringrequest",
          "parameterName": "rejectnetpeeringrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_RejectNetPeeringParameters"
    },
    {
      "name": "POST_RejectNetPeeringResponses",
      "description": "POST_RejectNetPeeringResponses holds responses of POST_RejectNetPeering",
      "fields": [
        {
          "name": "200",
          "type": "RejectNetPeeringResponse",
          "kind": 3,
          "nativeType": "RejectNetPeeringResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_RejectNetPeeringResponses"
    },
    {
      "name": "POST_ResetAccountPasswordParameters",
      "description": "POST_ResetAccountPasswordParameters holds parameters to POST_ResetAccountPassword",
      "fields": [
        {
          "name": "resetaccountpasswordrequest",
          "type": "ResetAccountPasswordRequest",
          "nativeType": "ResetAccountPasswordRequest",
          "fieldName": "Resetaccountpasswordrequest",
          "parameterName": "resetaccountpasswordrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_ResetAccountPasswordParameters"
    },
    {
      "name": "POST_ResetAccountPasswordResponses",
      "description": "POST_ResetAccountPasswordResponses holds responses of POST_ResetAccountPassword",
      "fields": [
        {
          "name": "200",
          "type": "ResetAccountPasswordResponse",
          "kind": 3,
          "nativeType": "ResetAccountPasswordResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_ResetAccountPasswordResponses"
    },
    {
      "name": "POST_SendResetPasswordEmailParameters",
      "description": "POST_SendResetPasswordEmailParameters holds parameters to POST_SendResetPasswordEmail",
      "fields": [
        {
          "name": "sendresetpasswordemailrequest",
          "type": "SendResetPasswordEmailRequest",
          "nativeType": "SendResetPasswordEmailRequest",
          "fieldName": "Sendresetpasswordemailrequest",
          "parameterName": "sendresetpasswordemailrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_SendResetPasswordEmailParameters"
    },
    {
      "name": "POST_SendResetPasswordEmailResponses",
      "description": "POST_SendResetPasswordEmailResponses holds responses of POST_SendResetPasswordEmail",
      "fields": [
        {
          "name": "200",
          "type": "SendResetPasswordEmailResponse",
          "kind": 3,
          "nativeType": "SendResetPasswordEmailResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_SendResetPasswordEmailResponses"
    },
    {
      "name": "POST_StartVmsParameters",
      "description": "POST_StartVmsParameters holds parameters to POST_StartVms",
      "fields": [
        {
          "name": "startvmsrequest",
          "type": "StartVmsRequest",
          "nativeType": "StartVmsRequest",
          "fieldName": "Startvmsrequest",
          "parameterName": "startvmsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_StartVmsParameters"
    },
    {
      "name": "POST_StartVmsResponses",
      "description": "POST_StartVmsResponses holds responses of POST_StartVms",
      "fields": [
        {
          "name": "200",
          "type": "StartVmsResponse",
          "kind": 3,
          "nativeType": "StartVmsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_StartVmsResponses"
    },
    {
      "name": "POST_StopVmsParameters",
      "description": "POST_StopVmsParameters holds parameters to POST_StopVms",
      "fields": [
        {
          "name": "stopvmsrequest",
          "type": "StopVmsRequest",
          "nativeType": "StopVmsRequest",
          "fieldName": "Stopvmsrequest",
          "parameterName": "stopvmsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_StopVmsParameters"
    },
    {
      "name": "POST_StopVmsResponses",
      "description": "POST_StopVmsResponses holds responses of POST_StopVms",
      "fields": [
        {
          "name": "200",
          "type": "StopVmsResponse",
          "kind": 3,
          "nativeType": "StopVmsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_StopVmsResponses"
    },
    {
      "name": "POST_UnlinkNetInternetGatewayParameters",
      "description": "POST_UnlinkNetInternetGatewayParameters holds parameters to POST_UnlinkNetInternetGateway",
      "fields": [
        {
          "name": "unlinknetinternetgatewayrequest",
          "type": "UnlinkNetInternetGatewayRequest",
          "nativeType": "UnlinkNetInternetGatewayRequest",
          "fieldName": "Unlinknetinternetgatewayrequest",
          "parameterName": "unlinknetinternetgatewayrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UnlinkNetInternetGatewayParameters"
    },
    {
      "name": "POST_UnlinkNetInternetGatewayResponses",
      "description": "POST_UnlinkNetInternetGatewayResponses holds responses of POST_UnlinkNetInternetGateway",
      "fields": [
        {
          "name": "200",
          "type": "UnlinkNetInternetGatewayResponse",
          "kind": 3,
          "nativeType": "UnlinkNetInternetGatewayResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UnlinkNetInternetGatewayResponses"
    },
    {
      "name": "POST_UnlinkNicParameters",
      "description": "POST_UnlinkNicParameters holds parameters to POST_UnlinkNic",
      "fields": [
        {
          "name": "unlinknicrequest",
          "type": "UnlinkNicRequest",
          "nativeType": "UnlinkNicRequest",
          "fieldName": "Unlinknicrequest",
          "parameterName": "unlinknicrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UnlinkNicParameters"
    },
    {
      "name": "POST_UnlinkNicResponses",
      "description": "POST_UnlinkNicResponses holds responses of POST_UnlinkNic",
      "fields": [
        {
          "name": "200",
          "type": "UnlinkNicResponse",
          "kind": 3,
          "nativeType": "UnlinkNicResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UnlinkNicResponses"
    },
    {
      "name": "POST_UnlinkPolicyParameters",
      "description": "POST_UnlinkPolicyParameters holds parameters to POST_UnlinkPolicy",
      "fields": [
        {
          "name": "unlinkpolicyrequest",
          "type": "UnlinkPolicyRequest",
          "nativeType": "UnlinkPolicyRequest",
          "fieldName": "Unlinkpolicyrequest",
          "parameterName": "unlinkpolicyrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UnlinkPolicyParameters"
    },
    {
      "name": "POST_UnlinkPolicyResponses",
      "description": "POST_UnlinkPolicyResponses holds responses of POST_UnlinkPolicy",
      "fields": [
        {
          "name": "200",
          "type": "UnlinkPolicyResponse",
          "kind": 3,
          "nativeType": "UnlinkPolicyResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UnlinkPolicyResponses"
    },
    {
      "name": "POST_UnlinkPrivateIpsParameters",
      "description": "POST_UnlinkPrivateIpsParameters holds parameters to POST_UnlinkPrivateIps",
      "fields": [
        {
          "name": "unlinkprivateipsrequest",
          "type": "UnlinkPrivateIpsRequest",
          "nativeType": "UnlinkPrivateIpsRequest",
          "fieldName": "Unlinkprivateipsrequest",
          "parameterName": "unlinkprivateipsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UnlinkPrivateIpsParameters"
    },
    {
      "name": "POST_UnlinkPrivateIpsResponses",
      "description": "POST_UnlinkPrivateIpsResponses holds responses of POST_UnlinkPrivateIps",
      "fields": [
        {
          "name": "200",
          "type": "UnlinkPrivateIpsResponse",
          "kind": 3,
          "nativeType": "UnlinkPrivateIpsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UnlinkPrivateIpsResponses"
    },
    {
      "name": "POST_UnlinkPublicIpParameters",
      "description": "POST_UnlinkPublicIpParameters holds parameters to POST_UnlinkPublicIp",
      "fields": [
        {
          "name": "unlinkpubliciprequest",
          "type": "UnlinkPublicIpRequest",
          "nativeType": "UnlinkPublicIpRequest",
          "fieldName": "Unlinkpubliciprequest",
          "parameterName": "unlinkpubliciprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UnlinkPublicIpParameters"
    },
    {
      "name": "POST_UnlinkPublicIpResponses",
      "description": "POST_UnlinkPublicIpResponses holds responses of POST_UnlinkPublicIp",
      "fields": [
        {
          "name": "200",
          "type": "UnlinkPublicIpResponse",
          "kind": 3,
          "nativeType": "UnlinkPublicIpResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UnlinkPublicIpResponses"
    },
    {
      "name": "POST_UnlinkRouteTableParameters",
      "description": "POST_UnlinkRouteTableParameters holds parameters to POST_UnlinkRouteTable",
      "fields": [
        {
          "name": "unlinkroutetablerequest",
          "type": "UnlinkRouteTableRequest",
          "nativeType": "UnlinkRouteTableRequest",
          "fieldName": "Unlinkroutetablerequest",
          "parameterName": "unlinkroutetablerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UnlinkRouteTableParameters"
    },
    {
      "name": "POST_UnlinkRouteTableResponses",
      "description": "POST_UnlinkRouteTableResponses holds responses of POST_UnlinkRouteTable",
      "fields": [
        {
          "name": "200",
          "type": "UnlinkRouteTableResponse",
          "kind": 3,
          "nativeType": "UnlinkRouteTableResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UnlinkRouteTableResponses"
    },
    {
      "name": "POST_UnlinkVolumeParameters",
      "description": "POST_UnlinkVolumeParameters holds parameters to POST_UnlinkVolume",
      "fields": [
        {
          "name": "unlinkvolumerequest",
          "type": "UnlinkVolumeRequest",
          "nativeType": "UnlinkVolumeRequest",
          "fieldName": "Unlinkvolumerequest",
          "parameterName": "unlinkvolumerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UnlinkVolumeParameters"
    },
    {
      "name": "POST_UnlinkVolumeResponses",
      "description": "POST_UnlinkVolumeResponses holds responses of POST_UnlinkVolume",
      "fields": [
        {
          "name": "200",
          "type": "UnlinkVolumeResponse",
          "kind": 3,
          "nativeType": "UnlinkVolumeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UnlinkVolumeResponses"
    },
    {
      "name": "POST_UnlinkVpnGatewayParameters",
      "description": "POST_UnlinkVpnGatewayParameters holds parameters to POST_UnlinkVpnGateway",
      "fields": [
        {
          "name": "unlinkvpngatewayrequest",
          "type": "UnlinkVpnGatewayRequest",
          "nativeType": "UnlinkVpnGatewayRequest",
          "fieldName": "Unlinkvpngatewayrequest",
          "parameterName": "unlinkvpngatewayrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UnlinkVpnGatewayParameters"
    },
    {
      "name": "POST_UnlinkVpnGatewayResponses",
      "description": "POST_UnlinkVpnGatewayResponses holds responses of POST_UnlinkVpnGateway",
      "fields": [
        {
          "name": "200",
          "type": "UnlinkVpnGatewayResponse",
          "kind": 3,
          "nativeType": "UnlinkVpnGatewayResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UnlinkVpnGatewayResponses"
    },
    {
      "name": "POST_UpdateAccountParameters",
      "description": "POST_UpdateAccountParameters holds parameters to POST_UpdateAccount",
      "fields": [
        {
          "name": "updateaccountrequest",
          "type": "UpdateAccountRequest",
          "nativeType": "UpdateAccountRequest",
          "fieldName": "Updateaccountrequest",
          "parameterName": "updateaccountrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateAccountParameters"
    },
    {
      "name": "POST_UpdateAccountResponses",
      "description": "POST_UpdateAccountResponses holds responses of POST_UpdateAccount",
      "fields": [
        {
          "name": "200",
          "type": "UpdateAccountResponse",
          "kind": 3,
          "nativeType": "UpdateAccountResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateAccountResponses"
    },
    {
      "name": "POST_UpdateApiKeyParameters",
      "description": "POST_UpdateApiKeyParameters holds parameters to POST_UpdateApiKey",
      "fields": [
        {
          "name": "updateapikeyrequest",
          "type": "UpdateApiKeyRequest",
          "nativeType": "UpdateApiKeyRequest",
          "fieldName": "Updateapikeyrequest",
          "parameterName": "updateapikeyrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateApiKeyParameters"
    },
    {
      "name": "POST_UpdateApiKeyResponses",
      "description": "POST_UpdateApiKeyResponses holds responses of POST_UpdateApiKey",
      "fields": [
        {
          "name": "200",
          "type": "UpdateApiKeyResponse",
          "kind": 3,
          "nativeType": "UpdateApiKeyResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateApiKeyResponses"
    },
    {
      "name": "POST_UpdateGroupParameters",
      "description": "POST_UpdateGroupParameters holds parameters to POST_UpdateGroup",
      "fields": [
        {
          "name": "updategrouprequest",
          "type": "UpdateGroupRequest",
          "nativeType": "UpdateGroupRequest",
          "fieldName": "Updategrouprequest",
          "parameterName": "updategrouprequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateGroupParameters"
    },
    {
      "name": "POST_UpdateGroupResponses",
      "description": "POST_UpdateGroupResponses holds responses of POST_UpdateGroup",
      "fields": [
        {
          "name": "200",
          "type": "UpdateGroupResponse",
          "kind": 3,
          "nativeType": "UpdateGroupResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateGroupResponses"
    },
    {
      "name": "POST_UpdateHealthCheckParameters",
      "description": "POST_UpdateHealthCheckParameters holds parameters to POST_UpdateHealthCheck",
      "fields": [
        {
          "name": "updatehealthcheckrequest",
          "type": "UpdateHealthCheckRequest",
          "nativeType": "UpdateHealthCheckRequest",
          "fieldName": "Updatehealthcheckrequest",
          "parameterName": "updatehealthcheckrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateHealthCheckParameters"
    },
    {
      "name": "POST_UpdateHealthCheckResponses",
      "description": "POST_UpdateHealthCheckResponses holds responses of POST_UpdateHealthCheck",
      "fields": [
        {
          "name": "200",
          "type": "UpdateHealthCheckResponse",
          "kind": 3,
          "nativeType": "UpdateHealthCheckResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateHealthCheckResponses"
    },
    {
      "name": "POST_UpdateImageAttributeParameters",
      "description": "POST_UpdateImageAttributeParameters holds parameters to POST_UpdateImageAttribute",
      "fields": [
        {
          "name": "updateimageattributerequest",
          "type": "UpdateImageAttributeRequest",
          "nativeType": "UpdateImageAttributeRequest",
          "fieldName": "Updateimageattributerequest",
          "parameterName": "updateimageattributerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateImageAttributeParameters"
    },
    {
      "name": "POST_UpdateImageAttributeResponses",
      "description": "POST_UpdateImageAttributeResponses holds responses of POST_UpdateImageAttribute",
      "fields": [
        {
          "name": "200",
          "type": "UpdateImageAttributeResponse",
          "kind": 3,
          "nativeType": "UpdateImageAttributeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateImageAttributeResponses"
    },
    {
      "name": "POST_UpdateKeypairParameters",
      "description": "POST_UpdateKeypairParameters holds parameters to POST_UpdateKeypair",
      "fields": [
        {
          "name": "updatekeypairrequest",
          "type": "UpdateKeypairRequest",
          "nativeType": "UpdateKeypairRequest",
          "fieldName": "Updatekeypairrequest",
          "parameterName": "updatekeypairrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateKeypairParameters"
    },
    {
      "name": "POST_UpdateKeypairResponses",
      "description": "POST_UpdateKeypairResponses holds responses of POST_UpdateKeypair",
      "fields": [
        {
          "name": "200",
          "type": "UpdateKeypairResponse",
          "kind": 3,
          "nativeType": "UpdateKeypairResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateKeypairResponses"
    },
    {
      "name": "POST_UpdateListenerRuleParameters",
      "description": "POST_UpdateListenerRuleParameters holds parameters to POST_UpdateListenerRule",
      "fields": [
        {
          "name": "updatelistenerrulerequest",
          "type": "UpdateListenerRuleRequest",
          "nativeType": "UpdateListenerRuleRequest",
          "fieldName": "Updatelistenerrulerequest",
          "parameterName": "updatelistenerrulerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateListenerRuleParameters"
    },
    {
      "name": "POST_UpdateListenerRuleResponses",
      "description": "POST_UpdateListenerRuleResponses holds responses of POST_UpdateListenerRule",
      "fields": [
        {
          "name": "200",
          "type": "UpdateListenerRuleResponse",
          "kind": 3,
          "nativeType": "UpdateListenerRuleResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateListenerRuleResponses"
    },
    {
      "name": "POST_UpdateLoadBalancerAttributesParameters",
      "description": "POST_UpdateLoadBalancerAttributesParameters holds parameters to POST_UpdateLoadBalancerAttributes",
      "fields": [
        {
          "name": "updateloadbalancerattributesrequest",
          "type": "UpdateLoadBalancerAttributesRequest",
          "nativeType": "UpdateLoadBalancerAttributesRequest",
          "fieldName": "Updateloadbalancerattributesrequest",
          "parameterName": "updateloadbalancerattributesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateLoadBalancerAttributesParameters"
    },
    {
      "name": "POST_UpdateLoadBalancerAttributesResponses",
      "description": "POST_UpdateLoadBalancerAttributesResponses holds responses of POST_UpdateLoadBalancerAttributes",
      "fields": [
        {
          "name": "200",
          "type": "UpdateLoadBalancerAttributesResponse",
          "kind": 3,
          "nativeType": "UpdateLoadBalancerAttributesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateLoadBalancerAttributesResponses"
    },
    {
      "name": "POST_UpdateLoadBalancerPoliciesParameters",
      "description": "POST_UpdateLoadBalancerPoliciesParameters holds parameters to POST_UpdateLoadBalancerPolicies",
      "fields": [
        {
          "name": "updateloadbalancerpoliciesrequest",
          "type": "UpdateLoadBalancerPoliciesRequest",
          "nativeType": "UpdateLoadBalancerPoliciesRequest",
          "fieldName": "Updateloadbalancerpoliciesrequest",
          "parameterName": "updateloadbalancerpoliciesrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateLoadBalancerPoliciesParameters"
    },
    {
      "name": "POST_UpdateLoadBalancerPoliciesResponses",
      "description": "POST_UpdateLoadBalancerPoliciesResponses holds responses of POST_UpdateLoadBalancerPolicies",
      "fields": [
        {
          "name": "200",
          "type": "UpdateLoadBalancerPoliciesResponse",
          "kind": 3,
          "nativeType": "UpdateLoadBalancerPoliciesResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateLoadBalancerPoliciesResponses"
    },
    {
      "name": "POST_UpdateNetAccessParameters",
      "description": "POST_UpdateNetAccessParameters holds parameters to POST_UpdateNetAccess",
      "fields": [
        {
          "name": "updatenetaccessrequest",
          "type": "UpdateNetAccessRequest",
          "nativeType": "UpdateNetAccessRequest",
          "fieldName": "Updatenetaccessrequest",
          "parameterName": "updatenetaccessrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateNetAccessParameters"
    },
    {
      "name": "POST_UpdateNetAccessResponses",
      "description": "POST_UpdateNetAccessResponses holds responses of POST_UpdateNetAccess",
      "fields": [
        {
          "name": "200",
          "type": "UpdateNetAccessResponse",
          "kind": 3,
          "nativeType": "UpdateNetAccessResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateNetAccessResponses"
    },
    {
      "name": "POST_UpdateNetOptionsParameters",
      "description": "POST_UpdateNetOptionsParameters holds parameters to POST_UpdateNetOptions",
      "fields": [
        {
          "name": "updatenetoptionsrequest",
          "type": "UpdateNetOptionsRequest",
          "nativeType": "UpdateNetOptionsRequest",
          "fieldName": "Updatenetoptionsrequest",
          "parameterName": "updatenetoptionsrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateNetOptionsParameters"
    },
    {
      "name": "POST_UpdateNetOptionsResponses",
      "description": "POST_UpdateNetOptionsResponses holds responses of POST_UpdateNetOptions",
      "fields": [
        {
          "name": "200",
          "type": "UpdateNetOptionsResponse",
          "kind": 3,
          "nativeType": "UpdateNetOptionsResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateNetOptionsResponses"
    },
    {
      "name": "POST_UpdateNicAttributeParameters",
      "description": "POST_UpdateNicAttributeParameters holds parameters to POST_UpdateNicAttribute",
      "fields": [
        {
          "name": "updatenicattributerequest",
          "type": "UpdateNicAttributeRequest",
          "nativeType": "UpdateNicAttributeRequest",
          "fieldName": "Updatenicattributerequest",
          "parameterName": "updatenicattributerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateNicAttributeParameters"
    },
    {
      "name": "POST_UpdateNicAttributeResponses",
      "description": "POST_UpdateNicAttributeResponses holds responses of POST_UpdateNicAttribute",
      "fields": [
        {
          "name": "200",
          "type": "UpdateNicAttributeResponse",
          "kind": 3,
          "nativeType": "UpdateNicAttributeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateNicAttributeResponses"
    },
    {
      "name": "POST_UpdateRouteParameters",
      "description": "POST_UpdateRouteParameters holds parameters to POST_UpdateRoute",
      "fields": [
        {
          "name": "updaterouterequest",
          "type": "UpdateRouteRequest",
          "nativeType": "UpdateRouteRequest",
          "fieldName": "Updaterouterequest",
          "parameterName": "updaterouterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateRouteParameters"
    },
    {
      "name": "POST_UpdateRouteResponses",
      "description": "POST_UpdateRouteResponses holds responses of POST_UpdateRoute",
      "fields": [
        {
          "name": "200",
          "type": "UpdateRouteResponse",
          "kind": 3,
          "nativeType": "UpdateRouteResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateRouteResponses"
    },
    {
      "name": "POST_UpdateRoutePropagationParameters",
      "description": "POST_UpdateRoutePropagationParameters holds parameters to POST_UpdateRoutePropagation",
      "fields": [
        {
          "name": "updateroutepropagationrequest",
          "type": "UpdateRoutePropagationRequest",
          "nativeType": "UpdateRoutePropagationRequest",
          "fieldName": "Updateroutepropagationrequest",
          "parameterName": "updateroutepropagationrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateRoutePropagationParameters"
    },
    {
      "name": "POST_UpdateRoutePropagationResponses",
      "description": "POST_UpdateRoutePropagationResponses holds responses of POST_UpdateRoutePropagation",
      "fields": [
        {
          "name": "200",
          "type": "UpdateRoutePropagationResponse",
          "kind": 3,
          "nativeType": "UpdateRoutePropagationResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateRoutePropagationResponses"
    },
    {
      "name": "POST_UpdateRouteTableLinkParameters",
      "description": "POST_UpdateRouteTableLinkParameters holds parameters to POST_UpdateRouteTableLink",
      "fields": [
        {
          "name": "updateroutetablelinkrequest",
          "type": "UpdateRouteTableLinkRequest",
          "nativeType": "UpdateRouteTableLinkRequest",
          "fieldName": "Updateroutetablelinkrequest",
          "parameterName": "updateroutetablelinkrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateRouteTableLinkParameters"
    },
    {
      "name": "POST_UpdateRouteTableLinkResponses",
      "description": "POST_UpdateRouteTableLinkResponses holds responses of POST_UpdateRouteTableLink",
      "fields": [
        {
          "name": "200",
          "type": "UpdateRouteTableLinkResponse",
          "kind": 3,
          "nativeType": "UpdateRouteTableLinkResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateRouteTableLinkResponses"
    },
    {
      "name": "POST_UpdateServerCertificateParameters",
      "description": "POST_UpdateServerCertificateParameters holds parameters to POST_UpdateServerCertificate",
      "fields": [
        {
          "name": "updateservercertificaterequest",
          "type": "UpdateServerCertificateRequest",
          "nativeType": "UpdateServerCertificateRequest",
          "fieldName": "Updateservercertificaterequest",
          "parameterName": "updateservercertificaterequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateServerCertificateParameters"
    },
    {
      "name": "POST_UpdateServerCertificateResponses",
      "description": "POST_UpdateServerCertificateResponses holds responses of POST_UpdateServerCertificate",
      "fields": [
        {
          "name": "200",
          "type": "UpdateServerCertificateResponse",
          "kind": 3,
          "nativeType": "UpdateServerCertificateResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateServerCertificateResponses"
    },
    {
      "name": "POST_UpdateSnapshotAttributeParameters",
      "description": "POST_UpdateSnapshotAttributeParameters holds parameters to POST_UpdateSnapshotAttribute",
      "fields": [
        {
          "name": "updatesnapshotattributerequest",
          "type": "UpdateSnapshotAttributeRequest",
          "nativeType": "UpdateSnapshotAttributeRequest",
          "fieldName": "Updatesnapshotattributerequest",
          "parameterName": "updatesnapshotattributerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateSnapshotAttributeParameters"
    },
    {
      "name": "POST_UpdateSnapshotAttributeResponses",
      "description": "POST_UpdateSnapshotAttributeResponses holds responses of POST_UpdateSnapshotAttribute",
      "fields": [
        {
          "name": "200",
          "type": "UpdateSnapshotAttributeResponse",
          "kind": 3,
          "nativeType": "UpdateSnapshotAttributeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateSnapshotAttributeResponses"
    },
    {
      "name": "POST_UpdateUserParameters",
      "description": "POST_UpdateUserParameters holds parameters to POST_UpdateUser",
      "fields": [
        {
          "name": "updateuserrequest",
          "type": "UpdateUserRequest",
          "nativeType": "UpdateUserRequest",
          "fieldName": "Updateuserrequest",
          "parameterName": "updateuserrequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateUserParameters"
    },
    {
      "name": "POST_UpdateUserResponses",
      "description": "POST_UpdateUserResponses holds responses of POST_UpdateUser",
      "fields": [
        {
          "name": "200",
          "type": "UpdateUserResponse",
          "kind": 3,
          "nativeType": "UpdateUserResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateUserResponses"
    },
    {
      "name": "POST_UpdateVmAttributeParameters",
      "description": "POST_UpdateVmAttributeParameters holds parameters to POST_UpdateVmAttribute",
      "fields": [
        {
          "name": "updatevmattributerequest",
          "type": "UpdateVmAttributeRequest",
          "nativeType": "UpdateVmAttributeRequest",
          "fieldName": "Updatevmattributerequest",
          "parameterName": "updatevmattributerequest",
          "serialize": true
        }
      ],
      "typeName": "POST_UpdateVmAttributeParameters"
    },
    {
      "name": "POST_UpdateVmAttributeResponses",
      "description": "POST_UpdateVmAttributeResponses holds responses of POST_UpdateVmAttribute",
      "fields": [
        {
          "name": "200",
          "type": "UpdateVmAttributeResponse",
          "kind": 3,
          "nativeType": "UpdateVmAttributeResponse",
          "fieldName": "OK",
          "parameterName": "200"
        }
      ],
      "typeName": "POST_UpdateVmAttributeResponses"
    }
  ],
  "methods": [
    {
      "path": "/AcceptNetPeering",
      "method": "POST",
      "name": "POST_AcceptNetPeering",
      "handlerName": "HandlePOST_AcceptNetPeering",
      "processorName": "POST_AcceptNetPeering",
      "clientName": "POST_AcceptNetPeering",
      "parametersTypeName": "POST_AcceptNetPeeringParameters",
      "responsesTypeName": "POST_AcceptNetPeeringResponses"
    },
    {
      "path": "/AuthenticateAccount",
      "method": "POST",
      "name": "POST_AuthenticateAccount",
      "handlerName": "HandlePOST_AuthenticateAccount",
      "processorName": "POST_AuthenticateAccount",
      "clientName": "POST_AuthenticateAccount",
      "parametersTypeName": "POST_AuthenticateAccountParameters",
      "responsesTypeName": "POST_AuthenticateAccountResponses"
    },
    {
      "path": "/CancelExportTask",
      "method": "POST",
      "name": "POST_CancelExportTask",
      "handlerName": "HandlePOST_CancelExportTask",
      "processorName": "POST_CancelExportTask",
      "clientName": "POST_CancelExportTask",
      "parametersTypeName": "POST_CancelExportTaskParameters",
      "responsesTypeName": "POST_CancelExportTaskResponses"
    },
    {
      "path": "/CheckSignature",
      "method": "POST",
      "name": "POST_CheckSignature",
      "handlerName": "HandlePOST_CheckSignature",
      "processorName": "POST_CheckSignature",
      "clientName": "POST_CheckSignature",
      "parametersTypeName": "POST_CheckSignatureParameters",
      "responsesTypeName": "POST_CheckSignatureResponses"
    },
    {
      "path": "/CopyAccount",
      "method": "POST",
      "name": "POST_CopyAccount",
      "handlerName": "HandlePOST_CopyAccount",
      "processorName": "POST_CopyAccount",
      "clientName": "POST_CopyAccount",
      "parametersTypeName": "POST_CopyAccountParameters",
      "responsesTypeName": "POST_CopyAccountResponses"
    },
    {
      "path": "/CopyImage",
      "method": "POST",
      "name": "POST_CopyImage",
      "handlerName": "HandlePOST_CopyImage",
      "processorName": "POST_CopyImage",
      "clientName": "POST_CopyImage",
      "parametersTypeName": "POST_CopyImageParameters",
      "responsesTypeName": "POST_CopyImageResponses"
    },
    {
      "path": "/CopySnapshot",
      "method": "POST",
      "name": "POST_CopySnapshot",
      "handlerName": "HandlePOST_CopySnapshot",
      "processorName": "POST_CopySnapshot",
      "clientName": "POST_CopySnapshot",
      "parametersTypeName": "POST_CopySnapshotParameters",
      "responsesTypeName": "POST_CopySnapshotResponses"
    },
    {
      "path": "/CreateAccount",
      "method": "POST",
      "name": "POST_CreateAccount",
      "handlerName": "HandlePOST_CreateAccount",
      "processorName": "POST_CreateAccount",
      "clientName": "POST_CreateAccount",
      "parametersTypeName": "POST_CreateAccountParameters",
      "responsesTypeName": "POST_CreateAccountResponses"
    },
    {
      "path": "/CreateApiKey",
      "method": "POST",
      "name": "POST_CreateApiKey",
      "handlerName": "HandlePOST_CreateApiKey",
      "processorName": "POST_CreateApiKey",
      "clientName": "POST_CreateApiKey",
      "parametersTypeName": "POST_CreateApiKeyParameters",
      "responsesTypeName": "POST_CreateApiKeyResponses"
    },
    {
      "path": "/CreateClientEndpoint",
      "method": "POST",
      "name": "POST_CreateClientEndpoint",
      "handlerName": "HandlePOST_CreateClientEndpoint",
      "processorName": "POST_CreateClientEndpoint",
      "clientName": "POST_CreateClientEndpoint",
      "parametersTypeName": "POST_CreateClientEndpointParameters",
      "responsesTypeName": "POST_CreateClientEndpointResponses"
    },
    {
      "path": "/CreateDhcpOptions",
      "method": "POST",
      "name": "POST_CreateDhcpOptions",
      "handlerName": "HandlePOST_CreateDhcpOptions",
      "processorName": "POST_CreateDhcpOptions",
      "clientName": "POST_CreateDhcpOptions",
      "parametersTypeName": "POST_CreateDhcpOptionsParameters",
      "responsesTypeName": "POST_CreateDhcpOptionsResponses"
    },
    {
      "path": "/CreateDirectLink",
      "method": "POST",
      "name": "POST_CreateDirectLink",
      "handlerName": "HandlePOST_CreateDirectLink",
      "processorName": "POST_CreateDirectLink",
      "clientName": "POST_CreateDirectLink",
      "parametersTypeName": "POST_CreateDirectLinkParameters",
      "responsesTypeName": "POST_CreateDirectLinkResponses"
    },
    {
      "path": "/CreateDirectLinkInterface",
      "method": "POST",
      "name": "POST_CreateDirectLinkInterface",
      "handlerName": "HandlePOST_CreateDirectLinkInterface",
      "processorName": "POST_CreateDirectLinkInterface",
      "clientName": "POST_CreateDirectLinkInterface",
      "parametersTypeName": "POST_CreateDirectLinkInterfaceParameters",
      "responsesTypeName": "POST_CreateDirectLinkInterfaceResponses"
    },
    {
      "path": "/CreateFirewallRuleInbound",
      "method": "POST",
      "name": "POST_CreateFirewallRuleInbound",
      "handlerName": "HandlePOST_CreateFirewallRuleInbound",
      "processorName": "POST_CreateFirewallRuleInbound",
      "clientName": "POST_CreateFirewallRuleInbound",
      "parametersTypeName": "POST_CreateFirewallRuleInboundParameters",
      "responsesTypeName": "POST_CreateFirewallRuleInboundResponses"
    },
    {
      "path": "/CreateFirewallRuleOutbound",
      "method": "POST",
      "name": "POST_CreateFirewallRuleOutbound",
      "handlerName": "HandlePOST_CreateFirewallRuleOutbound",
      "processorName": "POST_CreateFirewallRuleOutbound",
      "clientName": "POST_CreateFirewallRuleOutbound",
      "parametersTypeName": "POST_CreateFirewallRuleOutboundParameters",
      "responsesTypeName": "POST_CreateFirewallRuleOutboundResponses"
    },
    {
      "path": "/CreateFirewallRulesSet",
      "method": "POST",
      "name": "POST_CreateFirewallRulesSet",
      "handlerName": "HandlePOST_CreateFirewallRulesSet",
      "processorName": "POST_CreateFirewallRulesSet",
      "clientName": "POST_CreateFirewallRulesSet",
      "parametersTypeName": "POST_CreateFirewallRulesSetParameters",
      "responsesTypeName": "POST_CreateFirewallRulesSetResponses"
    },
    {
      "path": "/CreateGroup",
      "method": "POST",
      "name": "POST_CreateGroup",
      "handlerName": "HandlePOST_CreateGroup",
      "processorName": "POST_CreateGroup",
      "clientName": "POST_CreateGroup",
      "parametersTypeName": "POST_CreateGroupParameters",
      "responsesTypeName": "POST_CreateGroupResponses"
    },
    {
      "path": "/CreateImage",
      "method": "POST",
      "name": "POST_CreateImage",
      "handlerName": "HandlePOST_CreateImage",
      "processorName": "POST_CreateImage",
      "clientName": "POST_CreateImage",
      "parametersTypeName": "POST_CreateImageParameters",
      "responsesTypeName": "POST_CreateImageResponses"
    },
    {
      "path": "/CreateImageExportTask",
      "method": "POST",
      "name": "POST_CreateImageExportTask",
      "handlerName": "HandlePOST_CreateImageExportTask",
      "processorName": "POST_CreateImageExportTask",
      "clientName": "POST_CreateImageExportTask",
      "parametersTypeName": "POST_CreateImageExportTaskParameters",
      "responsesTypeName": "POST_CreateImageExportTaskResponses"
    },
    {
      "path": "/CreateKeypair",
      "method": "POST",
      "name": "POST_CreateKeypair",
      "handlerName": "HandlePOST_CreateKeypair",
      "processorName": "POST_CreateKeypair",
      "clientName": "POST_CreateKeypair",
      "parametersTypeName": "POST_CreateKeypairParameters",
      "responsesTypeName": "POST_CreateKeypairResponses"
    },
    {
      "path": "/CreateListenerRule",
      "method": "POST",
      "name": "POST_CreateListenerRule",
      "handlerName": "HandlePOST_CreateListenerRule",
      "processorName": "POST_CreateListenerRule",
      "clientName": "POST_CreateListenerRule",
      "parametersTypeName": "POST_CreateListenerRuleParameters",
      "responsesTypeName": "POST_CreateListenerRuleResponses"
    },
    {
      "path": "/CreateLoadBalancer",
      "method": "POST",
      "name": "POST_CreateLoadBalancer",
      "handlerName": "HandlePOST_CreateLoadBalancer",
      "processorName": "POST_CreateLoadBalancer",
      "clientName": "POST_CreateLoadBalancer",
      "parametersTypeName": "POST_CreateLoadBalancerParameters",
      "responsesTypeName": "POST_CreateLoadBalancerResponses"
    },
    {
      "path": "/CreateLoadBalancerListeners",
      "method": "POST",
      "name": "POST_CreateLoadBalancerListeners",
      "handlerName": "HandlePOST_CreateLoadBalancerListeners",
      "processorName": "POST_CreateLoadBalancerListeners",
      "clientName": "POST_CreateLoadBalancerListeners",
      "parametersTypeName": "POST_CreateLoadBalancerListenersParameters",
      "responsesTypeName": "POST_CreateLoadBalancerListenersResponses"
    },
    {
      "path": "/CreateNatService",
      "method": "POST",
      "name": "POST_CreateNatService",
      "handlerName": "HandlePOST_CreateNatService",
      "processorName": "POST_CreateNatService",
      "clientName": "POST_CreateNatService",
      "parametersTypeName": "POST_CreateNatServiceParameters",
      "responsesTypeName": "POST_CreateNatServiceResponses"
    },
    {
      "path": "/CreateNet",
      "method": "POST",
      "name": "POST_CreateNet",
      "handlerName": "HandlePOST_CreateNet",
      "processorName": "POST_CreateNet",
      "clientName": "POST_CreateNet",
      "parametersTypeName": "POST_CreateNetParameters",
      "responsesTypeName": "POST_CreateNetResponses"
    },
    {
      "path": "/CreateNetAccess",
      "method": "POST",
      "name": "POST_CreateNetAccess",
      "handlerName": "HandlePOST_CreateNetAccess",
      "processorName": "POST_CreateNetAccess",
      "clientName": "POST_CreateNetAccess",
      "parametersTypeName": "POST_CreateNetAccessParameters",
      "responsesTypeName": "POST_CreateNetAccessResponses"
    },
    {
      "path": "/CreateNetInternetGateway",
      "method": "POST",
      "name": "POST_CreateNetInternetGateway",
      "handlerName": "HandlePOST_CreateNetInternetGateway",
      "processorName": "POST_CreateNetInternetGateway",
      "clientName": "POST_CreateNetInternetGateway",
      "parametersTypeName": "POST_CreateNetInternetGatewayParameters",
      "responsesTypeName": "POST_CreateNetInternetGatewayResponses"
    },
    {
      "path": "/CreateNetPeering",
      "method": "POST",
      "name": "POST_CreateNetPeering",
      "handlerName": "HandlePOST_CreateNetPeering",
      "processorName": "POST_CreateNetPeering",
      "clientName": "POST_CreateNetPeering",
      "parametersTypeName": "POST_CreateNetPeeringParameters",
      "responsesTypeName": "POST_CreateNetPeeringResponses"
    },
    {
      "path": "/CreateNic",
      "method": "POST",
      "name": "POST_CreateNic",
      "handlerName": "HandlePOST_CreateNic",
      "processorName": "POST_CreateNic",
      "clientName": "POST_CreateNic",
      "parametersTypeName": "POST_CreateNicParameters",
      "responsesTypeName": "POST_CreateNicResponses"
    },
    {
      "path": "/CreatePolicy",
      "method": "POST",
      "name": "POST_CreatePolicy",
      "handlerName": "HandlePOST_CreatePolicy",
      "processorName": "POST_CreatePolicy",
      "clientName": "POST_CreatePolicy",
      "parametersTypeName": "POST_CreatePolicyParameters",
      "responsesTypeName": "POST_CreatePolicyResponses"
    },
    {
      "path": "/CreatePublicIp",
      "method": "POST",
      "name": "POST_CreatePublicIp",
      "handlerName": "HandlePOST_CreatePublicIp",
      "processorName": "POST_CreatePublicIp",
      "clientName": "POST_CreatePublicIp",
      "parametersTypeName": "POST_CreatePublicIpParameters",
      "responsesTypeName": "POST_CreatePublicIpResponses"
    },
    {
      "path": "/CreateRoute",
      "method": "POST",
      "name": "POST_CreateRoute",
      "handlerName": "HandlePOST_CreateRoute",
      "processorName": "POST_CreateRoute",
      "clientName": "POST_CreateRoute",
      "parametersTypeName": "POST_CreateRouteParameters",
      "responsesTypeName": "POST_CreateRouteResponses"
    },
    {
      "path": "/CreateRouteTable",
      "method": "POST",
      "name": "POST_CreateRouteTable",
      "handlerName": "HandlePOST_CreateRouteTable",
      "processorName": "POST_CreateRouteTable",
      "clientName": "POST_CreateRouteTable",
      "parametersTypeName": "POST_CreateRouteTableParameters",
      "responsesTypeName": "POST_CreateRouteTableResponses"
    },
    {
      "path": "/CreateSnapshot",
      "method": "POST",
      "name": "POST_CreateSnapshot",
      "handlerName": "HandlePOST_CreateSnapshot",
      "processorName": "POST_CreateSnapshot",
      "clientName": "POST_CreateSnapshot",
      "parametersTypeName": "POST_CreateSnapshotParameters",
      "responsesTypeName": "POST_CreateSnapshotResponses"
    },
    {
      "path": "/CreateSnapshotExportTask",
      "method": "POST",
      "name": "POST_CreateSnapshotExportTask",
      "handlerName": "HandlePOST_CreateSnapshotExportTask",
      "processorName": "POST_CreateSnapshotExportTask",
      "clientName": "POST_CreateSnapshotExportTask",
      "parametersTypeName": "POST_CreateSnapshotExportTaskParameters",
      "responsesTypeName": "POST_CreateSnapshotExportTaskResponses"
    },
    {
      "path": "/CreateStickyCookiePolicy",
      "method": "POST",
      "name": "POST_CreateStickyCookiePolicy",
      "handlerName": "HandlePOST_CreateStickyCookiePolicy",
      "processorName": "POST_CreateStickyCookiePolicy",
      "clientName": "POST_CreateStickyCookiePolicy",
      "parametersTypeName": "POST_CreateStickyCookiePolicyParameters",
      "responsesTypeName": "POST_CreateStickyCookiePolicyResponses"
    },
    {
      "path": "/CreateSubnet",
      "method": "POST",
      "name": "POST_CreateSubnet",
      "handlerName": "HandlePOST_CreateSubnet",
      "processorName": "POST_CreateSubnet",
      "clientName": "POST_CreateSubnet",
      "parametersTypeName": "POST_CreateSubnetParameters",
      "responsesTypeName": "POST_CreateSubnetResponses"
    },
    {
      "path": "/CreateTags",
      "method": "POST",
      "name": "POST_CreateTags",
      "handlerName": "HandlePOST_CreateTags",
      "processorName": "POST_CreateTags",
      "clientName": "POST_CreateTags",
      "parametersTypeName": "POST_CreateTagsParameters",
      "responsesTypeName": "POST_CreateTagsResponses"
    },
    {
      "path": "/CreateUser",
      "method": "POST",
      "name": "POST_CreateUser",
      "handlerName": "HandlePOST_CreateUser",
      "processorName": "POST_CreateUser",
      "clientName": "POST_CreateUser",
      "parametersTypeName": "POST_CreateUserParameters",
      "responsesTypeName": "POST_CreateUserResponses"
    },
    {
      "path": "/CreateVms",
      "method": "POST",
      "name": "POST_CreateVms",
      "handlerName": "HandlePOST_CreateVms",
      "processorName": "POST_CreateVms",
      "clientName": "POST_CreateVms",
      "parametersTypeName": "POST_CreateVmsParameters",
      "responsesTypeName": "POST_CreateVmsResponses"
    },
    {
      "path": "/CreateVolume",
      "method": "POST",
      "name": "POST_CreateVolume",
      "handlerName": "HandlePOST_CreateVolume",
      "processorName": "POST_CreateVolume",
      "clientName": "POST_CreateVolume",
      "parametersTypeName": "POST_CreateVolumeParameters",
      "responsesTypeName": "POST_CreateVolumeResponses"
    },
    {
      "path": "/CreateVpnConnection",
      "method": "POST",
      "name": "POST_CreateVpnConnection",
      "handlerName": "HandlePOST_CreateVpnConnection",
      "processorName": "POST_CreateVpnConnection",
      "clientName": "POST_CreateVpnConnection",
      "parametersTypeName": "POST_CreateVpnConnectionParameters",
      "responsesTypeName": "POST_CreateVpnConnectionResponses"
    },
    {
      "path": "/CreateVpnConnectionRoute",
      "method": "POST",
      "name": "POST_CreateVpnConnectionRoute",
      "handlerName": "HandlePOST_CreateVpnConnectionRoute",
      "processorName": "POST_CreateVpnConnectionRoute",
      "clientName": "POST_CreateVpnConnectionRoute",
      "parametersTypeName": "POST_CreateVpnConnectionRouteParameters",
      "responsesTypeName": "POST_CreateVpnConnectionRouteResponses"
    },
    {
      "path": "/CreateVpnGateway",
      "method": "POST",
      "name": "POST_CreateVpnGateway",
      "handlerName": "HandlePOST_CreateVpnGateway",
      "processorName": "POST_CreateVpnGateway",
      "clientName": "POST_CreateVpnGateway",
      "parametersTypeName": "POST_CreateVpnGatewayParameters",
      "responsesTypeName": "POST_CreateVpnGatewayResponses"
    },
    {
      "path": "/DeleteApiKey",
      "method": "POST",
      "name": "POST_DeleteApiKey",
      "handlerName": "HandlePOST_DeleteApiKey",
      "processorName": "POST_DeleteApiKey",
      "clientName": "POST_DeleteApiKey",
      "parametersTypeName": "POST_DeleteApiKeyParameters",
      "responsesTypeName": "POST_DeleteApiKeyResponses"
    },
    {
      "path": "/DeleteClientEndpoint",
      "method": "POST",
      "name": "POST_DeleteClientEndpoint",
      "handlerName": "HandlePOST_DeleteClientEndpoint",
      "processorName": "POST_DeleteClientEndpoint",
      "clientName": "POST_DeleteClientEndpoint",
      "parametersTypeName": "POST_DeleteClientEndpointParameters",
      "responsesTypeName": "POST_DeleteClientEndpointResponses"
    },
    {
      "path": "/DeleteDhcpOptions",
      "method": "POST",
      "name": "POST_DeleteDhcpOptions",
      "handlerName": "HandlePOST_DeleteDhcpOptions",
      "processorName": "POST_DeleteDhcpOptions",
      "clientName": "POST_DeleteDhcpOptions",
      "parametersTypeName": "POST_DeleteDhcpOptionsParameters",
      "responsesTypeName": "POST_DeleteDhcpOptionsResponses"
    },
    {
      "path": "/DeleteDirectLink",
      "method": "POST",
      "name": "POST_DeleteDirectLink",
      "handlerName": "HandlePOST_DeleteDirectLink",
      "processorName": "POST_DeleteDirectLink",
      "clientName": "POST_DeleteDirectLink",
      "parametersTypeName": "POST_DeleteDirectLinkParameters",
      "responsesTypeName": "POST_DeleteDirectLinkResponses"
    },
    {
      "path": "/DeleteDirectLinkInterface",
      "method": "POST",
      "name": "POST_DeleteDirectLinkInterface",
      "handlerName": "HandlePOST_DeleteDirectLinkInterface",
      "processorName": "POST_DeleteDirectLinkInterface",
      "clientName": "POST_DeleteDirectLinkInterface",
      "parametersTypeName": "POST_DeleteDirectLinkInterfaceParameters",
      "responsesTypeName": "POST_DeleteDirectLinkInterfaceResponses"
    },
    {
      "path": "/DeleteFirewallRuleInbound",
      "method": "POST",
      "name": "POST_DeleteFirewallRuleInbound",
      "handlerName": "HandlePOST_DeleteFirewallRuleInbound",
      "processorName": "POST_DeleteFirewallRuleInbound",
      "clientName": "POST_DeleteFirewallRuleInbound",
      "parametersTypeName": "POST_DeleteFirewallRuleInboundParameters",
      "responsesTypeName": "POST_DeleteFirewallRuleInboundResponses"
    },
    {
      "path": "/DeleteFirewallRuleOutbound",
      "method": "POST",
      "name": "POST_DeleteFirewallRuleOutbound",
      "handlerName": "HandlePOST_DeleteFirewallRuleOutbound",
      "processorName": "POST_DeleteFirewallRuleOutbound",
      "clientName": "POST_DeleteFirewallRuleOutbound",
      "parametersTypeName": "POST_DeleteFirewallRuleOutboundParameters",
      "responsesTypeName": "POST_DeleteFirewallRuleOutboundResponses"
    },
    {
      "path": "/DeleteFirewallRulesSet",
      "method": "POST",
      "name": "POST_DeleteFirewallRulesSet",
      "handlerName": "HandlePOST_DeleteFirewallRulesSet",
      "processorName": "POST_DeleteFirewallRulesSet",
      "clientName": "POST_DeleteFirewallRulesSet",
      "parametersTypeName": "POST_DeleteFirewallRulesSetParameters",
      "responsesTypeName": "POST_DeleteFirewallRulesSetResponses"
    },
    {
      "path": "/DeleteGroup",
      "method": "POST",
      "name": "POST_DeleteGroup",
      "handlerName": "HandlePOST_DeleteGroup",
      "processorName": "POST_DeleteGroup",
      "clientName": "POST_DeleteGroup",
      "parametersTypeName": "POST_DeleteGroupParameters",
      "responsesTypeName": "POST_DeleteGroupResponses"
    },
    {
      "path": "/DeleteKeypair",
      "method": "POST",
      "name": "POST_DeleteKeypair",
      "handlerName": "HandlePOST_DeleteKeypair",
      "processorName": "POST_DeleteKeypair",
      "clientName": "POST_DeleteKeypair",
      "parametersTypeName": "POST_DeleteKeypairParameters",
      "responsesTypeName": "POST_DeleteKeypairResponses"
    },
    {
      "path": "/DeleteListenerRule",
      "method": "POST",
      "name": "POST_DeleteListenerRule",
      "handlerName": "HandlePOST_DeleteListenerRule",
      "processorName": "POST_DeleteListenerRule",
      "clientName": "POST_DeleteListenerRule",
      "parametersTypeName": "POST_DeleteListenerRuleParameters",
      "responsesTypeName": "POST_DeleteListenerRuleResponses"
    },
    {
      "path": "/DeleteLoadBalancer",
      "method": "POST",
      "name": "POST_DeleteLoadBalancer",
      "handlerName": "HandlePOST_DeleteLoadBalancer",
      "processorName": "POST_DeleteLoadBalancer",
      "clientName": "POST_DeleteLoadBalancer",
      "parametersTypeName": "POST_DeleteLoadBalancerParameters",
      "responsesTypeName": "POST_DeleteLoadBalancerResponses"
    },
    {
      "path": "/DeleteLoadBalancerListeners",
      "method": "POST",
      "name": "POST_DeleteLoadBalancerListeners",
      "handlerName": "HandlePOST_DeleteLoadBalancerListeners",
      "processorName": "POST_DeleteLoadBalancerListeners",
      "clientName": "POST_DeleteLoadBalancerListeners",
      "parametersTypeName": "POST_DeleteLoadBalancerListenersParameters",
      "responsesTypeName": "POST_DeleteLoadBalancerListenersResponses"
    },
    {
      "path": "/DeleteLoadBalancerPolicy",
      "method": "POST",
      "name": "POST_DeleteLoadBalancerPolicy",
      "handlerName": "HandlePOST_DeleteLoadBalancerPolicy",
      "processorName": "POST_DeleteLoadBalancerPolicy",
      "clientName": "POST_DeleteLoadBalancerPolicy",
      "parametersTypeName": "POST_DeleteLoadBalancerPolicyParameters",
      "responsesTypeName": "POST_DeleteLoadBalancerPolicyResponses"
    },
    {
      "path": "/DeleteNatService",
      "method": "POST",
      "name": "POST_DeleteNatService",
      "handlerName": "HandlePOST_DeleteNatService",
      "processorName": "POST_DeleteNatService",
      "clientName": "POST_DeleteNatService",
      "parametersTypeName": "POST_DeleteNatServiceParameters",
      "responsesTypeName": "POST_DeleteNatServiceResponses"
    },
    {
      "path": "/DeleteNet",
      "method": "POST",
      "name": "POST_DeleteNet",
      "handlerName": "HandlePOST_DeleteNet",
      "processorName": "POST_DeleteNet",
      "clientName": "POST_DeleteNet",
      "parametersTypeName": "POST_DeleteNetParameters",
      "responsesTypeName": "POST_DeleteNetResponses"
    },
    {
      "path": "/DeleteNetInternetGateway",
      "method": "POST",
      "name": "POST_DeleteNetInternetGateway",
      "handlerName": "HandlePOST_DeleteNetInternetGateway",
      "processorName": "POST_DeleteNetInternetGateway",
      "clientName": "POST_DeleteNetInternetGateway",
      "parametersTypeName": "POST_DeleteNetInternetGatewayParameters",
      "responsesTypeName": "POST_DeleteNetInternetGatewayResponses"
    },
    {
      "path": "/DeleteNetPeering",
      "method": "POST",
      "name": "POST_DeleteNetPeering",
      "handlerName": "HandlePOST_DeleteNetPeering",
      "processorName": "POST_DeleteNetPeering",
      "clientName": "POST_DeleteNetPeering",
      "parametersTypeName": "POST_DeleteNetPeeringParameters",
      "responsesTypeName": "POST_DeleteNetPeeringResponses"
    },
    {
      "path": "/DeleteNic",
      "method": "POST",
      "name": "POST_DeleteNic",
      "handlerName": "HandlePOST_DeleteNic",
      "processorName": "POST_DeleteNic",
      "clientName": "POST_DeleteNic",
      "parametersTypeName": "POST_DeleteNicParameters",
      "responsesTypeName": "POST_DeleteNicResponses"
    },
    {
      "path": "/DeletePolicy",
      "method": "POST",
      "name": "POST_DeletePolicy",
      "handlerName": "HandlePOST_DeletePolicy",
      "processorName": "POST_DeletePolicy",
      "clientName": "POST_DeletePolicy",
      "parametersTypeName": "POST_DeletePolicyParameters",
      "responsesTypeName": "POST_DeletePolicyResponses"
    },
    {
      "path": "/DeletePublicIp",
      "method": "POST",
      "name": "POST_DeletePublicIp",
      "handlerName": "HandlePOST_DeletePublicIp",
      "processorName": "POST_DeletePublicIp",
      "clientName": "POST_DeletePublicIp",
      "parametersTypeName": "POST_DeletePublicIpParameters",
      "responsesTypeName": "POST_DeletePublicIpResponses"
    },
    {
      "path": "/DeleteRoute",
      "method": "POST",
      "name": "POST_DeleteRoute",
      "handlerName": "HandlePOST_DeleteRoute",
      "processorName": "POST_DeleteRoute",
      "clientName": "POST_DeleteRoute",
      "parametersTypeName": "POST_DeleteRouteParameters",
      "responsesTypeName": "POST_DeleteRouteResponses"
    },
    {
      "path": "/DeleteRouteTable",
      "method": "POST",
      "name": "POST_DeleteRouteTable",
      "handlerName": "HandlePOST_DeleteRouteTable",
      "processorName": "POST_DeleteRouteTable",
      "clientName": "POST_DeleteRouteTable",
      "parametersTypeName": "POST_DeleteRouteTableParameters",
      "responsesTypeName": "POST_DeleteRouteTableResponses"
    },
    {
      "path": "/DeleteServerCertificate",
      "method": "POST",
      "name": "POST_DeleteServerCertificate",
      "handlerName": "HandlePOST_DeleteServerCertificate",
      "processorName": "POST_DeleteServerCertificate",
      "clientName": "POST_DeleteServerCertificate",
      "parametersTypeName": "POST_DeleteServerCertificateParameters",
      "responsesTypeName": "POST_DeleteServerCertificateResponses"
    },
    {
      "path": "/DeleteSnapshot",
      "method": "POST",
      "name": "POST_DeleteSnapshot",
      "handlerName": "HandlePOST_DeleteSnapshot",
      "processorName": "POST_DeleteSnapshot",
      "clientName": "POST_DeleteSnapshot",
      "parametersTypeName": "POST_DeleteSnapshotParameters",
      "responsesTypeName": "POST_DeleteSnapshotResponses"
    },
    {
      "path": "/DeleteSubnet",
      "method": "POST",
      "name": "POST_DeleteSubnet",
      "handlerName": "HandlePOST_DeleteSubnet",
      "processorName": "POST_DeleteSubnet",
      "clientName": "POST_DeleteSubnet",
      "parametersTypeName": "POST_DeleteSubnetParameters",
      "responsesTypeName": "POST_DeleteSubnetResponses"
    },
    {
      "path": "/DeleteTags",
      "method": "POST",
      "name": "POST_DeleteTags",
      "handlerName": "HandlePOST_DeleteTags",
      "processorName": "POST_DeleteTags",
      "clientName": "POST_DeleteTags",
      "parametersTypeName": "POST_DeleteTagsParameters",
      "responsesTypeName": "POST_DeleteTagsResponses"
    },
    {
      "path": "/DeleteUser",
      "method": "POST",
      "name": "POST_DeleteUser",
      "handlerName": "HandlePOST_DeleteUser",
      "processorName": "POST_DeleteUser",
      "clientName": "POST_DeleteUser",
      "parametersTypeName": "POST_DeleteUserParameters",
      "responsesTypeName": "POST_DeleteUserResponses"
    },
    {
      "path": "/DeleteVms",
      "method": "POST",
      "name": "POST_DeleteVms",
      "handlerName": "HandlePOST_DeleteVms",
      "processorName": "POST_DeleteVms",
      "clientName": "POST_DeleteVms",
      "parametersTypeName": "POST_DeleteVmsParameters",
      "responsesTypeName": "POST_DeleteVmsResponses"
    },
    {
      "path": "/DeleteVolume",
      "method": "POST",
      "name": "POST_DeleteVolume",
      "handlerName": "HandlePOST_DeleteVolume",
      "processorName": "POST_DeleteVolume",
      "clientName": "POST_DeleteVolume",
      "parametersTypeName": "POST_DeleteVolumeParameters",
      "responsesTypeName": "POST_DeleteVolumeResponses"
    },
    {
      "path": "/DeleteVpcEndpoints",
      "method": "POST",
      "name": "POST_DeleteVpcEndpoints",
      "handlerName": "HandlePOST_DeleteVpcEndpoints",
      "processorName": "POST_DeleteVpcEndpoints",
      "clientName": "POST_DeleteVpcEndpoints",
      "parametersTypeName": "POST_DeleteVpcEndpointsParameters",
      "responsesTypeName": "POST_DeleteVpcEndpointsResponses"
    },
    {
      "path": "/DeleteVpnConnection",
      "method": "POST",
      "name": "POST_DeleteVpnConnection",
      "handlerName": "HandlePOST_DeleteVpnConnection",
      "processorName": "POST_DeleteVpnConnection",
      "clientName": "POST_DeleteVpnConnection",
      "parametersTypeName": "POST_DeleteVpnConnectionParameters",
      "responsesTypeName": "POST_DeleteVpnConnectionResponses"
    },
    {
      "path": "/DeleteVpnConnectionRoute",
      "method": "POST",
      "name": "POST_DeleteVpnConnectionRoute",
      "handlerName": "HandlePOST_DeleteVpnConnectionRoute",
      "processorName": "POST_DeleteVpnConnectionRoute",
      "clientName": "POST_DeleteVpnConnectionRoute",
      "parametersTypeName": "POST_DeleteVpnConnectionRouteParameters",
      "responsesTypeName": "POST_DeleteVpnConnectionRouteResponses"
    },
    {
      "path": "/DeleteVpnGateway",
      "method": "POST",
      "name": "POST_DeleteVpnGateway",
      "handlerName": "HandlePOST_DeleteVpnGateway",
      "processorName": "POST_DeleteVpnGateway",
      "clientName": "POST_DeleteVpnGateway",
      "parametersTypeName": "POST_DeleteVpnGatewayParameters",
      "responsesTypeName": "POST_DeleteVpnGatewayResponses"
    },
    {
      "path": "/DeregisterImage",
      "method": "POST",
      "name": "POST_DeregisterImage",
      "handlerName": "HandlePOST_DeregisterImage",
      "processorName": "POST_DeregisterImage",
      "clientName": "POST_DeregisterImage",
      "parametersTypeName": "POST_DeregisterImageParameters",
      "responsesTypeName": "POST_DeregisterImageResponses"
    },
    {
      "path": "/DeregisterUserInGroup",
      "method": "POST",
      "name": "POST_DeregisterUserInGroup",
      "handlerName": "HandlePOST_DeregisterUserInGroup",
      "processorName": "POST_DeregisterUserInGroup",
      "clientName": "POST_DeregisterUserInGroup",
      "parametersTypeName": "POST_DeregisterUserInGroupParameters",
      "responsesTypeName": "POST_DeregisterUserInGroupResponses"
    },
    {
      "path": "/DeregisterVmsInListenerRule",
      "method": "POST",
      "name": "POST_DeregisterVmsInListenerRule",
      "handlerName": "HandlePOST_DeregisterVmsInListenerRule",
      "processorName": "POST_DeregisterVmsInListenerRule",
      "clientName": "POST_DeregisterVmsInListenerRule",
      "parametersTypeName": "POST_DeregisterVmsInListenerRuleParameters",
      "responsesTypeName": "POST_DeregisterVmsInListenerRuleResponses"
    },
    {
      "path": "/DeregisterVmsInLoadBalancer",
      "method": "POST",
      "name": "POST_DeregisterVmsInLoadBalancer",
      "handlerName": "HandlePOST_DeregisterVmsInLoadBalancer",
      "processorName": "POST_DeregisterVmsInLoadBalancer",
      "clientName": "POST_DeregisterVmsInLoadBalancer",
      "parametersTypeName": "POST_DeregisterVmsInLoadBalancerParameters",
      "responsesTypeName": "POST_DeregisterVmsInLoadBalancerResponses"
    },
    {
      "path": "/GetBillableDigest",
      "method": "POST",
      "name": "POST_GetBillableDigest",
      "handlerName": "HandlePOST_GetBillableDigest",
      "processorName": "POST_GetBillableDigest",
      "clientName": "POST_GetBillableDigest",
      "parametersTypeName": "POST_GetBillableDigestParameters",
      "responsesTypeName": "POST_GetBillableDigestResponses"
    },
    {
      "path": "/GetRegionConfig",
      "method": "POST",
      "name": "POST_GetRegionConfig",
      "handlerName": "HandlePOST_GetRegionConfig",
      "processorName": "POST_GetRegionConfig",
      "clientName": "POST_GetRegionConfig",
      "parametersTypeName": "POST_GetRegionConfigParameters",
      "responsesTypeName": "POST_GetRegionConfigResponses"
    },
    {
      "path": "/ImportKeyPair",
      "method": "POST",
      "name": "POST_ImportKeyPair",
      "handlerName": "HandlePOST_ImportKeyPair",
      "processorName": "POST_ImportKeyPair",
      "clientName": "POST_ImportKeyPair",
      "parametersTypeName": "POST_ImportKeyPairParameters",
      "responsesTypeName": "POST_ImportKeyPairResponses"
    },
    {
      "path": "/ImportServerCertificate",
      "method": "POST",
      "name": "POST_ImportServerCertificate",
      "handlerName": "HandlePOST_ImportServerCertificate",
      "processorName": "POST_ImportServerCertificate",
      "clientName": "POST_ImportServerCertificate",
      "parametersTypeName": "POST_ImportServerCertificateParameters",
      "responsesTypeName": "POST_ImportServerCertificateResponses"
    },
    {
      "path": "/ImportSnaptShot",
      "method": "POST",
      "name": "POST_ImportSnaptShot",
      "handlerName": "HandlePOST_ImportSnaptShot",
      "processorName": "POST_ImportSnaptShot",
      "clientName": "POST_ImportSnaptShot",
      "parametersTypeName": "POST_ImportSnaptShotParameters",
      "responsesTypeName": "POST_ImportSnaptShotResponses"
    },
    {
      "path": "/LinkDhcpOptions",
      "method": "POST",
      "name": "POST_LinkDhcpOptions",
      "handlerName": "HandlePOST_LinkDhcpOptions",
      "processorName": "POST_LinkDhcpOptions",
      "clientName": "POST_LinkDhcpOptions",
      "parametersTypeName": "POST_LinkDhcpOptionsParameters",
      "responsesTypeName": "POST_LinkDhcpOptionsResponses"
    },
    {
      "path": "/LinkLoadBalancerServerCertificate",
      "method": "POST",
      "name": "POST_LinkLoadBalancerServerCertificate",
      "handlerName": "HandlePOST_LinkLoadBalancerServerCertificate",
      "processorName": "POST_LinkLoadBalancerServerCertificate",
      "clientName": "POST_LinkLoadBalancerServerCertificate",
      "parametersTypeName": "POST_LinkLoadBalancerServerCertificateParameters",
      "responsesTypeName": "POST_LinkLoadBalancerServerCertificateResponses"
    },
    {
      "path": "/LinkNetInternetGateway",
      "method": "POST",
      "name": "POST_LinkNetInternetGateway",
      "handlerName": "HandlePOST_LinkNetInternetGateway",
      "processorName": "POST_LinkNetInternetGateway",
      "clientName": "POST_LinkNetInternetGateway",
      "parametersTypeName": "POST_LinkNetInternetGatewayParameters",
      "responsesTypeName": "POST_LinkNetInternetGatewayResponses"
    },
    {
      "path": "/LinkNic",
      "method": "POST",
      "name": "POST_LinkNic",
      "handlerName": "HandlePOST_LinkNic",
      "processorName": "POST_LinkNic",
      "clientName": "POST_LinkNic",
      "parametersTypeName": "POST_LinkNicParameters",
      "responsesTypeName": "POST_LinkNicResponses"
    },
    {
      "path": "/LinkPolicy",
      "method": "POST",
      "name": "POST_LinkPolicy",
      "handlerName": "HandlePOST_LinkPolicy",
      "processorName": "POST_LinkPolicy",
      "clientName": "POST_LinkPolicy",
      "parametersTypeName": "POST_LinkPolicyParameters",
      "responsesTypeName": "POST_LinkPolicyResponses"
    },
    {
      "path": "/LinkPrivateIp",
      "method": "POST",
      "name": "POST_LinkPrivateIp",
      "handlerName": "HandlePOST_LinkPrivateIp",
      "processorName": "POST_LinkPrivateIp",
      "clientName": "POST_LinkPrivateIp",
      "parametersTypeName": "POST_LinkPrivateIpParameters",
      "responsesTypeName": "POST_LinkPrivateIpResponses"
    },
    {
      "path": "/LinkPublicIp",
      "method": "POST",
      "name": "POST_LinkPublicIp",
      "handlerName": "HandlePOST_LinkPublicIp",
      "processorName": "POST_LinkPublicIp",
      "clientName": "POST_LinkPublicIp",
      "parametersTypeName": "POST_LinkPublicIpParameters",
      "responsesTypeName": "POST_LinkPublicIpResponses"
    },
    {
      "path": "/LinkRouteTable",
      "method": "POST",
      "name": "POST_LinkRouteTable",
      "handlerName": "HandlePOST_LinkRouteTable",
      "processorName": "POST_LinkRouteTable",
      "clientName": "POST_LinkRouteTable",
      "parametersTypeName": "POST_LinkRouteTableParameters",
      "responsesTypeName": "POST_LinkRouteTableResponses"
    },
    {
      "path": "/LinkVolume",
      "method": "POST",
      "name": "POST_LinkVolume",
      "handlerName": "HandlePOST_LinkVolume",
      "processorName": "POST_LinkVolume",
      "clientName": "POST_LinkVolume",
      "parametersTypeName": "POST_LinkVolumeParameters",
      "responsesTypeName": "POST_LinkVolumeResponses"
    },
    {
      "path": "/LinkVpnGateway",
      "method": "POST",
      "name": "POST_LinkVpnGateway",
      "handlerName": "HandlePOST_LinkVpnGateway",
      "processorName": "POST_LinkVpnGateway",
      "clientName": "POST_LinkVpnGateway",
      "parametersTypeName": "POST_LinkVpnGatewayParameters",
      "responsesTypeName": "POST_LinkVpnGatewayResponses"
    },
    {
      "path": "/ListGroupsForUser",
      "method": "POST",
      "name": "POST_ListGroupsForUser",
      "handlerName": "HandlePOST_ListGroupsForUser",
      "processorName": "POST_ListGroupsForUser",
      "clientName": "POST_ListGroupsForUser",
      "parametersTypeName": "POST_ListGroupsForUserParameters",
      "responsesTypeName": "POST_ListGroupsForUserResponses"
    },
    {
      "path": "/PurchaseReservedVmsOffer",
      "method": "POST",
      "name": "POST_PurchaseReservedVmsOffer",
      "handlerName": "HandlePOST_PurchaseReservedVmsOffer",
      "processorName": "POST_PurchaseReservedVmsOffer",
      "clientName": "POST_PurchaseReservedVmsOffer",
      "parametersTypeName": "POST_PurchaseReservedVmsOfferParameters",
      "responsesTypeName": "POST_PurchaseReservedVmsOfferResponses"
    },
    {
      "path": "/ReadAccount",
      "method": "POST",
      "name": "POST_ReadAccount",
      "handlerName": "HandlePOST_ReadAccount",
      "processorName": "POST_ReadAccount",
      "clientName": "POST_ReadAccount",
      "parametersTypeName": "POST_ReadAccountParameters",
      "responsesTypeName": "POST_ReadAccountResponses"
    },
    {
      "path": "/ReadAccountConsumption",
      "method": "POST",
      "name": "POST_ReadAccountConsumption",
      "handlerName": "HandlePOST_ReadAccountConsumption",
      "processorName": "POST_ReadAccountConsumption",
      "clientName": "POST_ReadAccountConsumption",
      "parametersTypeName": "POST_ReadAccountConsumptionParameters",
      "responsesTypeName": "POST_ReadAccountConsumptionResponses"
    },
    {
      "path": "/ReadAdminPassword",
      "method": "POST",
      "name": "POST_ReadAdminPassword",
      "handlerName": "HandlePOST_ReadAdminPassword",
      "processorName": "POST_ReadAdminPassword",
      "clientName": "POST_ReadAdminPassword",
      "parametersTypeName": "POST_ReadAdminPasswordParameters",
      "responsesTypeName": "POST_ReadAdminPasswordResponses"
    },
    {
      "path": "/ReadApiKeys",
      "method": "POST",
      "name": "POST_ReadApiKeys",
      "handlerName": "HandlePOST_ReadApiKeys",
      "processorName": "POST_ReadApiKeys",
      "clientName": "POST_ReadApiKeys",
      "parametersTypeName": "POST_ReadApiKeysParameters",
      "responsesTypeName": "POST_ReadApiKeysResponses"
    },
    {
      "path": "/ReadApiLogs",
      "method": "POST",
      "name": "POST_ReadApiLogs",
      "handlerName": "HandlePOST_ReadApiLogs",
      "processorName": "POST_ReadApiLogs",
      "clientName": "POST_ReadApiLogs",
      "parametersTypeName": "POST_ReadApiLogsParameters",
      "responsesTypeName": "POST_ReadApiLogsResponses"
    },
    {
      "path": "/ReadCatalog",
      "method": "POST",
      "name": "POST_ReadCatalog",
      "handlerName": "HandlePOST_ReadCatalog",
      "processorName": "POST_ReadCatalog",
      "clientName": "POST_ReadCatalog",
      "parametersTypeName": "POST_ReadCatalogParameters",
      "responsesTypeName": "POST_ReadCatalogResponses"
    },
    {
      "path": "/ReadClientEndpoints",
      "method": "POST",
      "name": "POST_ReadClientEndpoints",
      "handlerName": "HandlePOST_ReadClientEndpoints",
      "processorName": "POST_ReadClientEndpoints",
      "clientName": "POST_ReadClientEndpoints",
      "parametersTypeName": "POST_ReadClientEndpointsParameters",
      "responsesTypeName": "POST_ReadClientEndpointsResponses"
    },
    {
      "path": "/ReadConsoleOutput",
      "method": "POST",
      "name": "POST_ReadConsoleOutput",
      "handlerName": "HandlePOST_ReadConsoleOutput",
      "processorName": "POST_ReadConsoleOutput",
      "clientName": "POST_ReadConsoleOutput",
      "parametersTypeName": "POST_ReadConsoleOutputParameters",
      "responsesTypeName": "POST_ReadConsoleOutputResponses"
    },
    {
      "path": "/ReadDhcpOptions",
      "method": "POST",
      "name": "POST_ReadDhcpOptions",
      "handlerName": "HandlePOST_ReadDhcpOptions",
      "processorName": "POST_ReadDhcpOptions",
      "clientName": "POST_ReadDhcpOptions",
      "parametersTypeName": "POST_ReadDhcpOptionsParameters",
      "responsesTypeName": "POST_ReadDhcpOptionsResponses"
    },
    {
      "path": "/ReadDirectLinkInterfaces",
      "method": "POST",
      "name": "POST_ReadDirectLinkInterfaces",
      "handlerName": "HandlePOST_ReadDirectLinkInterfaces",
      "processorName": "POST_ReadDirectLinkInterfaces",
      "clientName": "POST_ReadDirectLinkInterfaces",
      "parametersTypeName": "POST_ReadDirectLinkInterfacesParameters",
      "responsesTypeName": "POST_ReadDirectLinkInterfacesResponses"
    },
    {
      "path": "/ReadDirectLinks",
      "method": "POST",
      "name": "POST_ReadDirectLinks",
      "handlerName": "HandlePOST_ReadDirectLinks",
      "processorName": "POST_ReadDirectLinks",
      "clientName": "POST_ReadDirectLinks",
      "parametersTypeName": "POST_ReadDirectLinksParameters",
      "responsesTypeName": "POST_ReadDirectLinksResponses"
    },
    {
      "path": "/ReadFirewallRulesSets",
      "method": "POST",
      "name": "POST_ReadFirewallRulesSets",
      "handlerName": "HandlePOST_ReadFirewallRulesSets",
      "processorName": "POST_ReadFirewallRulesSets",
      "clientName": "POST_ReadFirewallRulesSets",
      "parametersTypeName": "POST_ReadFirewallRulesSetsParameters",
      "responsesTypeName": "POST_ReadFirewallRulesSetsResponses"
    },
    {
      "path": "/ReadGroups",
      "method": "POST",
      "name": "POST_ReadGroups",
      "handlerName": "HandlePOST_ReadGroups",
      "processorName": "POST_ReadGroups",
      "clientName": "POST_ReadGroups",
      "parametersTypeName": "POST_ReadGroupsParameters",
      "responsesTypeName": "POST_ReadGroupsResponses"
    },
    {
      "path": "/ReadImageAttribute",
      "method": "POST",
      "name": "POST_ReadImageAttribute",
      "handlerName": "HandlePOST_ReadImageAttribute",
      "processorName": "POST_ReadImageAttribute",
      "clientName": "POST_ReadImageAttribute",
      "parametersTypeName": "POST_ReadImageAttributeParameters",
      "responsesTypeName": "POST_ReadImageAttributeResponses"
    },
    {
      "path": "/ReadImageExportTasks",
      "method": "POST",
      "name": "POST_ReadImageExportTasks",
      "handlerName": "HandlePOST_ReadImageExportTasks",
      "processorName": "POST_ReadImageExportTasks",
      "clientName": "POST_ReadImageExportTasks",
      "parametersTypeName": "POST_ReadImageExportTasksParameters",
      "responsesTypeName": "POST_ReadImageExportTasksResponses"
    },
    {
      "path": "/ReadImages",
      "method": "POST",
      "name": "POST_ReadImages",
      "handlerName": "HandlePOST_ReadImages",
      "processorName": "POST_ReadImages",
      "clientName": "POST_ReadImages",
      "parametersTypeName": "POST_ReadImagesParameters",
      "responsesTypeName": "POST_ReadImagesResponses"
    },
    {
      "path": "/ReadKeypairs",
      "method": "POST",
      "name": "POST_ReadKeypairs",
      "handlerName": "HandlePOST_ReadKeypairs",
      "processorName": "POST_ReadKeypairs",
      "clientName": "POST_ReadKeypairs",
      "parametersTypeName": "POST_ReadKeypairsParameters",
      "responsesTypeName": "POST_ReadKeypairsResponses"
    },
    {
      "path": "/ReadListenerRules",
      "method": "POST",
      "name": "POST_ReadListenerRules",
      "handlerName": "HandlePOST_ReadListenerRules",
      "processorName": "POST_ReadListenerRules",
      "clientName": "POST_ReadListenerRules",
      "parametersTypeName": "POST_ReadListenerRulesParameters",
      "responsesTypeName": "POST_ReadListenerRulesResponses"
    },
    {
      "path": "/ReadLoadBalancerAttributes",
      "method": "POST",
      "name": "POST_ReadLoadBalancerAttributes",
      "handlerName": "HandlePOST_ReadLoadBalancerAttributes",
      "processorName": "POST_ReadLoadBalancerAttributes",
      "clientName": "POST_ReadLoadBalancerAttributes",
      "parametersTypeName": "POST_ReadLoadBalancerAttributesParameters",
      "responsesTypeName": "POST_ReadLoadBalancerAttributesResponses"
    },
    {
      "path": "/ReadLoadBalancers",
      "method": "POST",
      "name": "POST_ReadLoadBalancers",
      "handlerName": "HandlePOST_ReadLoadBalancers",
      "processorName": "POST_ReadLoadBalancers",
      "clientName": "POST_ReadLoadBalancers",
      "parametersTypeName": "POST_ReadLoadBalancersParameters",
      "responsesTypeName": "POST_ReadLoadBalancersResponses"
    },
    {
      "path": "/ReadNatServices",
      "method": "POST",
      "name": "POST_ReadNatServices",
      "handlerName": "HandlePOST_ReadNatServices",
      "processorName": "POST_ReadNatServices",
      "clientName": "POST_ReadNatServices",
      "parametersTypeName": "POST_ReadNatServicesParameters",
      "responsesTypeName": "POST_ReadNatServicesResponses"
    },
    {
      "path": "/ReadNetAccesses",
      "method": "POST",
      "name": "POST_ReadNetAccesses",
      "handlerName": "HandlePOST_ReadNetAccesses",
      "processorName": "POST_ReadNetAccesses",
      "clientName": "POST_ReadNetAccesses",
      "parametersTypeName": "POST_ReadNetAccessesParameters",
      "responsesTypeName": "POST_ReadNetAccessesResponses"
    },
    {
      "path": "/ReadNetInternetGateways",
      "method": "POST",
      "name": "POST_ReadNetInternetGateways",
      "handlerName": "HandlePOST_ReadNetInternetGateways",
      "processorName": "POST_ReadNetInternetGateways",
      "clientName": "POST_ReadNetInternetGateways",
      "parametersTypeName": "POST_ReadNetInternetGatewaysParameters",
      "responsesTypeName": "POST_ReadNetInternetGatewaysResponses"
    },
    {
      "path": "/ReadNetOptions",
      "method": "POST",
      "name": "POST_ReadNetOptions",
      "handlerName": "HandlePOST_ReadNetOptions",
      "processorName": "POST_ReadNetOptions",
      "clientName": "POST_ReadNetOptions",
      "parametersTypeName": "POST_ReadNetOptionsParameters",
      "responsesTypeName": "POST_ReadNetOptionsResponses"
    },
    {
      "path": "/ReadNetPeerings",
      "method": "POST",
      "name": "POST_ReadNetPeerings",
      "handlerName": "HandlePOST_ReadNetPeerings",
      "processorName": "POST_ReadNetPeerings",
      "clientName": "POST_ReadNetPeerings",
      "parametersTypeName": "POST_ReadNetPeeringsParameters",
      "responsesTypeName": "POST_ReadNetPeeringsResponses"
    },
    {
      "path": "/ReadNetServices",
      "method": "POST",
      "name": "POST_ReadNetServices",
      "handlerName": "HandlePOST_ReadNetServices",
      "processorName": "POST_ReadNetServices",
      "clientName": "POST_ReadNetServices",
      "parametersTypeName": "POST_ReadNetServicesParameters",
      "responsesTypeName": "POST_ReadNetServicesResponses"
    },
    {
      "path": "/ReadNets",
      "method": "POST",
      "name": "POST_ReadNets",
      "handlerName": "HandlePOST_ReadNets",
      "processorName": "POST_ReadNets",
      "clientName": "POST_ReadNets",
      "parametersTypeName": "POST_ReadNetsParameters",
      "responsesTypeName": "POST_ReadNetsResponses"
    },
    {
      "path": "/ReadNics",
      "method": "POST",
      "name": "POST_ReadNics",
      "handlerName": "HandlePOST_ReadNics",
      "processorName": "POST_ReadNics",
      "clientName": "POST_ReadNics",
      "parametersTypeName": "POST_ReadNicsParameters",
      "responsesTypeName": "POST_ReadNicsResponses"
    },
    {
      "path": "/ReadPolicies",
      "method": "POST",
      "name": "POST_ReadPolicies",
      "handlerName": "HandlePOST_ReadPolicies",
      "processorName": "POST_ReadPolicies",
      "clientName": "POST_ReadPolicies",
      "parametersTypeName": "POST_ReadPoliciesParameters",
      "responsesTypeName": "POST_ReadPoliciesResponses"
    },
    {
      "path": "/ReadPrefixLists",
      "method": "POST",
      "name": "POST_ReadPrefixLists",
      "handlerName": "HandlePOST_ReadPrefixLists",
      "processorName": "POST_ReadPrefixLists",
      "clientName": "POST_ReadPrefixLists",
      "parametersTypeName": "POST_ReadPrefixListsParameters",
      "responsesTypeName": "POST_ReadPrefixListsResponses"
    },
    {
      "path": "/ReadProductTypes",
      "method": "POST",
      "name": "POST_ReadProductTypes",
      "handlerName": "HandlePOST_ReadProductTypes",
      "processorName": "POST_ReadProductTypes",
      "clientName": "POST_ReadProductTypes",
      "parametersTypeName": "POST_ReadProductTypesParameters",
      "responsesTypeName": "POST_ReadProductTypesResponses"
    },
    {
      "path": "/ReadPublicCatalog",
      "method": "POST",
      "name": "POST_ReadPublicCatalog",
      "handlerName": "HandlePOST_ReadPublicCatalog",
      "processorName": "POST_ReadPublicCatalog",
      "clientName": "POST_ReadPublicCatalog",
      "parametersTypeName": "POST_ReadPublicCatalogParameters",
      "responsesTypeName": "POST_ReadPublicCatalogResponses"
    },
    {
      "path": "/ReadPublicIpRanges",
      "method": "POST",
      "name": "POST_ReadPublicIpRanges",
      "handlerName": "HandlePOST_ReadPublicIpRanges",
      "processorName": "POST_ReadPublicIpRanges",
      "clientName": "POST_ReadPublicIpRanges",
      "parametersTypeName": "POST_ReadPublicIpRangesParameters",
      "responsesTypeName": "POST_ReadPublicIpRangesResponses"
    },
    {
      "path": "/ReadPublicIps",
      "method": "POST",
      "name": "POST_ReadPublicIps",
      "handlerName": "HandlePOST_ReadPublicIps",
      "processorName": "POST_ReadPublicIps",
      "clientName": "POST_ReadPublicIps",
      "parametersTypeName": "POST_ReadPublicIpsParameters",
      "responsesTypeName": "POST_ReadPublicIpsResponses"
    },
    {
      "path": "/ReadQuotas",
      "method": "POST",
      "name": "POST_ReadQuotas",
      "handlerName": "HandlePOST_ReadQuotas",
      "processorName": "POST_ReadQuotas",
      "clientName": "POST_ReadQuotas",
      "parametersTypeName": "POST_ReadQuotasParameters",
      "responsesTypeName": "POST_ReadQuotasResponses"
    },
    {
      "path": "/ReadRegions",
      "method": "POST",
      "name": "POST_ReadRegions",
      "handlerName": "HandlePOST_ReadRegions",
      "processorName": "POST_ReadRegions",
      "clientName": "POST_ReadRegions",
      "parametersTypeName": "POST_ReadRegionsParameters",
      "responsesTypeName": "POST_ReadRegionsResponses"
    },
    {
      "path": "/ReadReservedVmOffers",
      "method": "POST",
      "name": "POST_ReadReservedVmOffers",
      "handlerName": "HandlePOST_ReadReservedVmOffers",
      "processorName": "POST_ReadReservedVmOffers",
      "clientName": "POST_ReadReservedVmOffers",
      "parametersTypeName": "POST_ReadReservedVmOffersParameters",
      "responsesTypeName": "POST_ReadReservedVmOffersResponses"
    },
    {
      "path": "/ReadReservedVms",
      "method": "POST",
      "name": "POST_ReadReservedVms",
      "handlerName": "HandlePOST_ReadReservedVms",
      "processorName": "POST_ReadReservedVms",
      "clientName": "POST_ReadReservedVms",
      "parametersTypeName": "POST_ReadReservedVmsParameters",
      "responsesTypeName": "POST_ReadReservedVmsResponses"
    },
    {
      "path": "/ReadRouteTables",
      "method": "POST",
      "name": "POST_ReadRouteTables",
      "handlerName": "HandlePOST_ReadRouteTables",
      "processorName": "POST_ReadRouteTables",
      "clientName": "POST_ReadRouteTables",
      "parametersTypeName": "POST_ReadRouteTablesParameters",
      "responsesTypeName": "POST_ReadRouteTablesResponses"
    },
    {
      "path": "/ReadServerCertificates",
      "method": "POST",
      "name": "POST_ReadServerCertificates",
      "handlerName": "HandlePOST_ReadServerCertificates",
      "processorName": "POST_ReadServerCertificates",
      "clientName": "POST_ReadServerCertificates",
      "parametersTypeName": "POST_ReadServerCertificatesParameters",
      "responsesTypeName": "POST_ReadServerCertificatesResponses"
    },
    {
      "path": "/ReadSites",
      "method": "POST",
      "name": "POST_ReadSites",
      "handlerName": "HandlePOST_ReadSites",
      "processorName": "POST_ReadSites",
      "clientName": "POST_ReadSites",
      "parametersTypeName": "POST_ReadSitesParameters",
      "responsesTypeName": "POST_ReadSitesResponses"
    },
    {
      "path": "/ReadSnapshotAttribute",
      "method": "POST",
      "name": "POST_ReadSnapshotAttribute",
      "handlerName": "HandlePOST_ReadSnapshotAttribute",
      "processorName": "POST_ReadSnapshotAttribute",
      "clientName": "POST_ReadSnapshotAttribute",
      "parametersTypeName": "POST_ReadSnapshotAttributeParameters",
      "responsesTypeName": "POST_ReadSnapshotAttributeResponses"
    },
    {
      "path": "/ReadSnapshotExportTasks",
      "method": "POST",
      "name": "POST_ReadSnapshotExportTasks",
      "handlerName": "HandlePOST_ReadSnapshotExportTasks",
      "processorName": "POST_ReadSnapshotExportTasks",
      "clientName": "POST_ReadSnapshotExportTasks",
      "parametersTypeName": "POST_ReadSnapshotExportTasksParameters",
      "responsesTypeName": "POST_ReadSnapshotExportTasksResponses"
    },
    {
      "path": "/ReadSnapshots",
      "method": "POST",
      "name": "POST_ReadSnapshots",
      "handlerName": "HandlePOST_ReadSnapshots",
      "processorName": "POST_ReadSnapshots",
      "clientName": "POST_ReadSnapshots",
      "parametersTypeName": "POST_ReadSnapshotsParameters",
      "responsesTypeName": "POST_ReadSnapshotsResponses"
    },
    {
      "path": "/ReadSubRegions",
      "method": "POST",
      "name": "POST_ReadSubRegions",
      "handlerName": "HandlePOST_ReadSubRegions",
      "processorName": "POST_ReadSubRegions",
      "clientName": "POST_ReadSubRegions",
      "parametersTypeName": "POST_ReadSubRegionsParameters",
      "responsesTypeName": "POST_ReadSubRegionsResponses"
    },
    {
      "path": "/ReadSubnets",
      "method": "POST",
      "name": "POST_ReadSubnets",
      "handlerName": "HandlePOST_ReadSubnets",
      "processorName": "POST_ReadSubnets",
      "clientName": "POST_ReadSubnets",
      "parametersTypeName": "POST_ReadSubnetsParameters",
      "responsesTypeName": "POST_ReadSubnetsResponses"
    },
    {
      "path": "/ReadTags",
      "method": "POST",
      "name": "POST_ReadTags",
      "handlerName": "HandlePOST_ReadTags",
      "processorName": "POST_ReadTags",
      "clientName": "POST_ReadTags",
      "parametersTypeName": "POST_ReadTagsParameters",
      "responsesTypeName": "POST_ReadTagsResponses"
    },
    {
      "path": "/ReadUsers",
      "method": "POST",
      "name": "POST_ReadUsers",
      "handlerName": "HandlePOST_ReadUsers",
      "processorName": "POST_ReadUsers",
      "clientName": "POST_ReadUsers",
      "parametersTypeName": "POST_ReadUsersParameters",
      "responsesTypeName": "POST_ReadUsersResponses"
    },
    {
      "path": "/ReadVmAttribute",
      "method": "POST",
      "name": "POST_ReadVmAttribute",
      "handlerName": "HandlePOST_ReadVmAttribute",
      "processorName": "POST_ReadVmAttribute",
      "clientName": "POST_ReadVmAttribute",
      "parametersTypeName": "POST_ReadVmAttributeParameters",
      "responsesTypeName": "POST_ReadVmAttributeResponses"
    },
    {
      "path": "/ReadVmTypes",
      "method": "POST",
      "name": "POST_ReadVmTypes",
      "handlerName": "HandlePOST_ReadVmTypes",
      "processorName": "POST_ReadVmTypes",
      "clientName": "POST_ReadVmTypes",
      "parametersTypeName": "POST_ReadVmTypesParameters",
      "responsesTypeName": "POST_ReadVmTypesResponses"
    },
    {
      "path": "/ReadVms",
      "method": "POST",
      "name": "POST_ReadVms",
      "handlerName": "HandlePOST_ReadVms",
      "processorName": "POST_ReadVms",
      "clientName": "POST_ReadVms",
      "parametersTypeName": "POST_ReadVmsParameters",
      "responsesTypeName": "POST_ReadVmsResponses"
    },
    {
      "path": "/ReadVmsHealth",
      "method": "POST",
      "name": "POST_ReadVmsHealth",
      "handlerName": "HandlePOST_ReadVmsHealth",
      "processorName": "POST_ReadVmsHealth",
      "clientName": "POST_ReadVmsHealth",
      "parametersTypeName": "POST_ReadVmsHealthParameters",
      "responsesTypeName": "POST_ReadVmsHealthResponses"
    },
    {
      "path": "/ReadVmsState",
      "method": "POST",
      "name": "POST_ReadVmsState",
      "handlerName": "HandlePOST_ReadVmsState",
      "processorName": "POST_ReadVmsState",
      "clientName": "POST_ReadVmsState",
      "parametersTypeName": "POST_ReadVmsStateParameters",
      "responsesTypeName": "POST_ReadVmsStateResponses"
    },
    {
      "path": "/ReadVolumes",
      "method": "POST",
      "name": "POST_ReadVolumes",
      "handlerName": "HandlePOST_ReadVolumes",
      "processorName": "POST_ReadVolumes",
      "clientName": "POST_ReadVolumes",
      "parametersTypeName": "POST_ReadVolumesParameters",
      "responsesTypeName": "POST_ReadVolumesResponses"
    },
    {
      "path": "/ReadVpnConnections",
      "method": "POST",
      "name": "POST_ReadVpnConnections",
      "handlerName": "HandlePOST_ReadVpnConnections",
      "processorName": "POST_ReadVpnConnections",
      "clientName": "POST_ReadVpnConnections",
      "parametersTypeName": "POST_ReadVpnConnectionsParameters",
      "responsesTypeName": "POST_ReadVpnConnectionsResponses"
    },
    {
      "path": "/ReadVpnGateways",
      "method": "POST",
      "name": "POST_ReadVpnGateways",
      "handlerName": "HandlePOST_ReadVpnGateways",
      "processorName": "POST_ReadVpnGateways",
      "clientName": "POST_ReadVpnGateways",
      "parametersTypeName": "POST_ReadVpnGatewaysParameters",
      "responsesTypeName": "POST_ReadVpnGatewaysResponses"
    },
    {
      "path": "/RebootVms",
      "method": "POST",
      "name": "POST_RebootVms",
      "handlerName": "HandlePOST_RebootVms",
      "processorName": "POST_RebootVms",
      "clientName": "POST_RebootVms",
      "parametersTypeName": "POST_RebootVmsParameters",
      "responsesTypeName": "POST_RebootVmsResponses"
    },
    {
      "path": "/RegisterImage",
      "method": "POST",
      "name": "POST_RegisterImage",
      "handlerName": "HandlePOST_RegisterImage",
      "processorName": "POST_RegisterImage",
      "clientName": "POST_RegisterImage",
      "parametersTypeName": "POST_RegisterImageParameters",
      "responsesTypeName": "POST_RegisterImageResponses"
    },
    {
      "path": "/RegisterUserInGroup",
      "method": "POST",
      "name": "POST_RegisterUserInGroup",
      "handlerName": "HandlePOST_RegisterUserInGroup",
      "processorName": "POST_RegisterUserInGroup",
      "clientName": "POST_RegisterUserInGroup",
      "parametersTypeName": "POST_RegisterUserInGroupParameters",
      "responsesTypeName": "POST_RegisterUserInGroupResponses"
    },
    {
      "path": "/RegisterVmsInListenerRule",
      "method": "POST",
      "name": "POST_RegisterVmsInListenerRule",
      "handlerName": "HandlePOST_RegisterVmsInListenerRule",
      "processorName": "POST_RegisterVmsInListenerRule",
      "clientName": "POST_RegisterVmsInListenerRule",
      "parametersTypeName": "POST_RegisterVmsInListenerRuleParameters",
      "responsesTypeName": "POST_RegisterVmsInListenerRuleResponses"
    },
    {
      "path": "/RegisterVmsInLoadBalancer",
      "method": "POST",
      "name": "POST_RegisterVmsInLoadBalancer",
      "handlerName": "HandlePOST_RegisterVmsInLoadBalancer",
      "processorName": "POST_RegisterVmsInLoadBalancer",
      "clientName": "POST_RegisterVmsInLoadBalancer",
      "parametersTypeName": "POST_RegisterVmsInLoadBalancerParameters",
      "responsesTypeName": "POST_RegisterVmsInLoadBalancerResponses"
    },
    {
      "path": "/RejectNetPeering",
      "method": "POST",
      "name": "POST_RejectNetPeering",
      "handlerName": "HandlePOST_RejectNetPeering",
      "processorName": "POST_RejectNetPeering",
      "clientName": "POST_RejectNetPeering",
      "parametersTypeName": "POST_RejectNetPeeringParameters",
      "responsesTypeName": "POST_RejectNetPeeringResponses"
    },
    {
      "path": "/ResetAccountPassword",
      "method": "POST",
      "name": "POST_ResetAccountPassword",
      "handlerName": "HandlePOST_ResetAccountPassword",
      "processorName": "POST_ResetAccountPassword",
      "clientName": "POST_ResetAccountPassword",
      "parametersTypeName": "POST_ResetAccountPasswordParameters",
      "responsesTypeName": "POST_ResetAccountPasswordResponses"
    },
    {
      "path": "/SendResetPasswordEmail",
      "method": "POST",
      "name": "POST_SendResetPasswordEmail",
      "handlerName": "HandlePOST_SendResetPasswordEmail",
      "processorName": "POST_SendResetPasswordEmail",
      "clientName": "POST_SendResetPasswordEmail",
      "parametersTypeName": "POST_SendResetPasswordEmailParameters",
      "responsesTypeName": "POST_SendResetPasswordEmailResponses"
    },
    {
      "path": "/StartVms",
      "method": "POST",
      "name": "POST_StartVms",
      "handlerName": "HandlePOST_StartVms",
      "processorName": "POST_StartVms",
      "clientName": "POST_StartVms",
      "parametersTypeName": "POST_StartVmsParameters",
      "responsesTypeName": "POST_StartVmsResponses"
    },
    {
      "path": "/StopVms",
      "method": "POST",
      "name": "POST_StopVms",
      "handlerName": "HandlePOST_StopVms",
      "processorName": "POST_StopVms",
      "clientName": "POST_StopVms",
      "parametersTypeName": "POST_StopVmsParameters",
      "responsesTypeName": "POST_StopVmsResponses"
    },
    {
      "path": "/UnlinkNetInternetGateway",
      "method": "POST",
      "name": "POST_UnlinkNetInternetGateway",
      "handlerName": "HandlePOST_UnlinkNetInternetGateway",
      "processorName": "POST_UnlinkNetInternetGateway",
      "clientName": "POST_UnlinkNetInternetGateway",
      "parametersTypeName": "POST_UnlinkNetInternetGatewayParameters",
      "responsesTypeName": "POST_UnlinkNetInternetGatewayResponses"
    },
    {
      "path": "/UnlinkNic",
      "method": "POST",
      "name": "POST_UnlinkNic",
      "handlerName": "HandlePOST_UnlinkNic",
      "processorName": "POST_UnlinkNic",
      "clientName": "POST_UnlinkNic",
      "parametersTypeName": "POST_UnlinkNicParameters",
      "responsesTypeName": "POST_UnlinkNicResponses"
    },
    {
      "path": "/UnlinkPolicy",
      "method": "POST",
      "name": "POST_UnlinkPolicy",
      "handlerName": "HandlePOST_UnlinkPolicy",
      "processorName": "POST_UnlinkPolicy",
      "clientName": "POST_UnlinkPolicy",
      "parametersTypeName": "POST_UnlinkPolicyParameters",
      "responsesTypeName": "POST_UnlinkPolicyResponses"
    },
    {
      "path": "/UnlinkPrivateIps",
      "method": "POST",
      "name": "POST_UnlinkPrivateIps",
      "handlerName": "HandlePOST_UnlinkPrivateIps",
      "processorName": "POST_UnlinkPrivateIps",
      "clientName": "POST_UnlinkPrivateIps",
      "parametersTypeName": "POST_UnlinkPrivateIpsParameters",
      "responsesTypeName": "POST_UnlinkPrivateIpsResponses"
    },
    {
      "path": "/UnlinkPublicIp",
      "method": "POST",
      "name": "POST_UnlinkPublicIp",
      "handlerName": "HandlePOST_UnlinkPublicIp",
      "processorName": "POST_UnlinkPublicIp",
      "clientName": "POST_UnlinkPublicIp",
      "parametersTypeName": "POST_UnlinkPublicIpParameters",
      "responsesTypeName": "POST_UnlinkPublicIpResponses"
    },
    {
      "path": "/UnlinkRouteTable",
      "method": "POST",
      "name": "POST_UnlinkRouteTable",
      "handlerName": "HandlePOST_UnlinkRouteTable",
      "processorName": "POST_UnlinkRouteTable",
      "clientName": "POST_UnlinkRouteTable",
      "parametersTypeName": "POST_UnlinkRouteTableParameters",
      "responsesTypeName": "POST_UnlinkRouteTableResponses"
    },
    {
      "path": "/UnlinkVolume",
      "method": "POST",
      "name": "POST_UnlinkVolume",
      "handlerName": "HandlePOST_UnlinkVolume",
      "processorName": "POST_UnlinkVolume",
      "clientName": "POST_UnlinkVolume",
      "parametersTypeName": "POST_UnlinkVolumeParameters",
      "responsesTypeName": "POST_UnlinkVolumeResponses"
    },
    {
      "path": "/UnlinkVpnGateway",
      "method": "POST",
      "name": "POST_UnlinkVpnGateway",
      "handlerName": "HandlePOST_UnlinkVpnGateway",
      "processorName": "POST_UnlinkVpnGateway",
      "clientName": "POST_UnlinkVpnGateway",
      "parametersTypeName": "POST_UnlinkVpnGatewayParameters",
      "responsesTypeName": "POST_UnlinkVpnGatewayResponses"
    },
    {
      "path": "/UpdateAccount",
      "method": "POST",
      "name": "POST_UpdateAccount",
      "handlerName": "HandlePOST_UpdateAccount",
      "processorName": "POST_UpdateAccount",
      "clientName": "POST_UpdateAccount",
      "parametersTypeName": "POST_UpdateAccountParameters",
      "responsesTypeName": "POST_UpdateAccountResponses"
    },
    {
      "path": "/UpdateApiKey",
      "method": "POST",
      "name": "POST_UpdateApiKey",
      "handlerName": "HandlePOST_UpdateApiKey",
      "processorName": "POST_UpdateApiKey",
      "clientName": "POST_UpdateApiKey",
      "parametersTypeName": "POST_UpdateApiKeyParameters",
      "responsesTypeName": "POST_UpdateApiKeyResponses"
    },
    {
      "path": "/UpdateGroup",
      "method": "POST",
      "name": "POST_UpdateGroup",
      "handlerName": "HandlePOST_UpdateGroup",
      "processorName": "POST_UpdateGroup",
      "clientName": "POST_UpdateGroup",
      "parametersTypeName": "POST_UpdateGroupParameters",
      "responsesTypeName": "POST_UpdateGroupResponses"
    },
    {
      "path": "/UpdateHealthCheck",
      "method": "POST",
      "name": "POST_UpdateHealthCheck",
      "handlerName": "HandlePOST_UpdateHealthCheck",
      "processorName": "POST_UpdateHealthCheck",
      "clientName": "POST_UpdateHealthCheck",
      "parametersTypeName": "POST_UpdateHealthCheckParameters",
      "responsesTypeName": "POST_UpdateHealthCheckResponses"
    },
    {
      "path": "/UpdateImageAttribute",
      "method": "POST",
      "name": "POST_UpdateImageAttribute",
      "handlerName": "HandlePOST_UpdateImageAttribute",
      "processorName": "POST_UpdateImageAttribute",
      "clientName": "POST_UpdateImageAttribute",
      "parametersTypeName": "POST_UpdateImageAttributeParameters",
      "responsesTypeName": "POST_UpdateImageAttributeResponses"
    },
    {
      "path": "/UpdateKeypair",
      "method": "POST",
      "name": "POST_UpdateKeypair",
      "handlerName": "HandlePOST_UpdateKeypair",
      "processorName": "POST_UpdateKeypair",
      "clientName": "POST_UpdateKeypair",
      "parametersTypeName": "POST_UpdateKeypairParameters",
      "responsesTypeName": "POST_UpdateKeypairResponses"
    },
    {
      "path": "/UpdateListenerRule",
      "method": "POST",
      "name": "POST_UpdateListenerRule",
      "handlerName": "HandlePOST_UpdateListenerRule",
      "processorName": "POST_UpdateListenerRule",
      "clientName": "POST_UpdateListenerRule",
      "parametersTypeName": "POST_UpdateListenerRuleParameters",
      "responsesTypeName": "POST_UpdateListenerRuleResponses"
    },
    {
      "path": "/UpdateLoadBalancerAttributes",
      "method": "POST",
      "name": "POST_UpdateLoadBalancerAttributes",
      "handlerName": "HandlePOST_UpdateLoadBalancerAttributes",
      "processorName": "POST_UpdateLoadBalancerAttributes",
      "clientName": "POST_UpdateLoadBalancerAttributes",
      "parametersTypeName": "POST_UpdateLoadBalancerAttributesParameters",
      "responsesTypeName": "POST_UpdateLoadBalancerAttributesResponses"
    },
    {
      "path": "/UpdateLoadBalancerPolicies",
      "method": "POST",
      "name": "POST_UpdateLoadBalancerPolicies",
      "handlerName": "HandlePOST_UpdateLoadBalancerPolicies",
      "processorName": "POST_UpdateLoadBalancerPolicies",
      "clientName": "POST_UpdateLoadBalancerPolicies",
      "parametersTypeName": "POST_UpdateLoadBalancerPoliciesParameters",
      "responsesTypeName": "POST_UpdateLoadBalancerPoliciesResponses"
    },
    {
      "path": "/UpdateNetAccess",
      "method": "POST",
      "name": "POST_UpdateNetAccess",
      "handlerName": "HandlePOST_UpdateNetAccess",
      "processorName": "POST_UpdateNetAccess",
      "clientName": "POST_UpdateNetAccess",
      "parametersTypeName": "POST_UpdateNetAccessParameters",
      "responsesTypeName": "POST_UpdateNetAccessResponses"
    },
    {
      "path": "/UpdateNetOptions",
      "method": "POST",
      "name": "POST_UpdateNetOptions",
      "handlerName": "HandlePOST_UpdateNetOptions",
      "processorName": "POST_UpdateNetOptions",
      "clientName": "POST_UpdateNetOptions",
      "parametersTypeName": "POST_UpdateNetOptionsParameters",
      "responsesTypeName": "POST_UpdateNetOptionsResponses"
    },
    {
      "path": "/UpdateNicAttribute",
      "method": "POST",
      "name": "POST_UpdateNicAttribute",
      "handlerName": "HandlePOST_UpdateNicAttribute",
      "processorName": "POST_UpdateNicAttribute",
      "clientName": "POST_UpdateNicAttribute",
      "parametersTypeName": "POST_UpdateNicAttributeParameters",
      "responsesTypeName": "POST_UpdateNicAttributeResponses"
    },
    {
      "path": "/UpdateRoute",
      "method": "POST",
      "name": "POST_UpdateRoute",
      "handlerName": "HandlePOST_UpdateRoute",
      "processorName": "POST_UpdateRoute",
      "clientName": "POST_UpdateRoute",
      "parametersTypeName": "POST_UpdateRouteParameters",
      "responsesTypeName": "POST_UpdateRouteResponses"
    },
    {
      "path": "/UpdateRoutePropagation",
      "method": "POST",
      "name": "POST_UpdateRoutePropagation",
      "handlerName": "HandlePOST_UpdateRoutePropagation",
      "processorName": "POST_UpdateRoutePropagation",
      "clientName": "POST_UpdateRoutePropagation",
      "parametersTypeName": "POST_UpdateRoutePropagationParameters",
      "responsesTypeName": "POST_UpdateRoutePropagationResponses"
    },
    {
      "path": "/UpdateRouteTableLink",
      "method": "POST",
      "name": "POST_UpdateRouteTableLink",
      "handlerName": "HandlePOST_UpdateRouteTableLink",
      "processorName": "POST_UpdateRouteTableLink",
      "clientName": "POST_UpdateRouteTableLink",
      "parametersTypeName": "POST_UpdateRouteTableLinkParameters",
      "responsesTypeName": "POST_UpdateRouteTableLinkResponses"
    },
    {
      "path": "/UpdateServerCertificate",
      "method": "POST",
      "name": "POST_UpdateServerCertificate",
      "handlerName": "HandlePOST_UpdateServerCertificate",
      "processorName": "POST_UpdateServerCertificate",
      "clientName": "POST_UpdateServerCertificate",
      "parametersTypeName": "POST_UpdateServerCertificateParameters",
      "responsesTypeName": "POST_UpdateServerCertificateResponses"
    },
    {
      "path": "/UpdateSnapshotAttribute",
      "method": "POST",
      "name": "POST_UpdateSnapshotAttribute",
      "handlerName": "HandlePOST_UpdateSnapshotAttribute",
      "processorName": "POST_UpdateSnapshotAttribute",
      "clientName": "POST_UpdateSnapshotAttribute",
      "parametersTypeName": "POST_UpdateSnapshotAttributeParameters",
      "responsesTypeName": "POST_UpdateSnapshotAttributeResponses"
    },
    {
      "path": "/UpdateUser",
      "method": "POST",
      "name": "POST_UpdateUser",
      "handlerName": "HandlePOST_UpdateUser",
      "processorName": "POST_UpdateUser",
      "clientName": "POST_UpdateUser",
      "parametersTypeName": "POST_UpdateUserParameters",
      "responsesTypeName": "POST_UpdateUserResponses"
    },
    {
      "path": "/UpdateVmAttribute",
      "method": "POST",
      "name": "POST_UpdateVmAttribute",
      "handlerName": "HandlePOST_UpdateVmAttribute",
      "processorName": "POST_UpdateVmAttribute",
      "clientName": "POST_UpdateVmAttribute",
      "parametersTypeName": "POST_UpdateVmAttributeParameters",
      "responsesTypeName": "POST_UpdateVmAttributeResponses"
    }
  ]
}